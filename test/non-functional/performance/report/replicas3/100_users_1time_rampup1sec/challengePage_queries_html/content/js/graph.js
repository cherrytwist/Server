/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 106.0, "minX": 0.0, "maxY": 19309.0, "series": [{"data": [[0.0, 4469.0], [0.1, 4469.0], [0.2, 4469.0], [0.3, 4469.0], [0.4, 4469.0], [0.5, 4469.0], [0.6, 4469.0], [0.7, 4469.0], [0.8, 4469.0], [0.9, 4469.0], [1.0, 4656.0], [1.1, 4656.0], [1.2, 4656.0], [1.3, 4656.0], [1.4, 4656.0], [1.5, 4656.0], [1.6, 4656.0], [1.7, 4656.0], [1.8, 4656.0], [1.9, 4656.0], [2.0, 4681.0], [2.1, 4681.0], [2.2, 4681.0], [2.3, 4681.0], [2.4, 4681.0], [2.5, 4681.0], [2.6, 4681.0], [2.7, 4681.0], [2.8, 4681.0], [2.9, 4681.0], [3.0, 4694.0], [3.1, 4694.0], [3.2, 4694.0], [3.3, 4694.0], [3.4, 4694.0], [3.5, 4694.0], [3.6, 4694.0], [3.7, 4694.0], [3.8, 4694.0], [3.9, 4694.0], [4.0, 4735.0], [4.1, 4735.0], [4.2, 4735.0], [4.3, 4735.0], [4.4, 4735.0], [4.5, 4735.0], [4.6, 4735.0], [4.7, 4735.0], [4.8, 4735.0], [4.9, 4735.0], [5.0, 4757.0], [5.1, 4757.0], [5.2, 4757.0], [5.3, 4757.0], [5.4, 4757.0], [5.5, 4757.0], [5.6, 4757.0], [5.7, 4757.0], [5.8, 4757.0], [5.9, 4757.0], [6.0, 4847.0], [6.1, 4847.0], [6.2, 4847.0], [6.3, 4847.0], [6.4, 4847.0], [6.5, 4847.0], [6.6, 4847.0], [6.7, 4847.0], [6.8, 4847.0], [6.9, 4847.0], [7.0, 4922.0], [7.1, 4922.0], [7.2, 4922.0], [7.3, 4922.0], [7.4, 4922.0], [7.5, 4922.0], [7.6, 4922.0], [7.7, 4922.0], [7.8, 4922.0], [7.9, 4922.0], [8.0, 4978.0], [8.1, 4978.0], [8.2, 4978.0], [8.3, 4978.0], [8.4, 4978.0], [8.5, 4978.0], [8.6, 4978.0], [8.7, 4978.0], [8.8, 4978.0], [8.9, 4978.0], [9.0, 4985.0], [9.1, 4985.0], [9.2, 4985.0], [9.3, 4985.0], [9.4, 4985.0], [9.5, 4985.0], [9.6, 4985.0], [9.7, 4985.0], [9.8, 4985.0], [9.9, 4985.0], [10.0, 5227.0], [10.1, 5227.0], [10.2, 5227.0], [10.3, 5227.0], [10.4, 5227.0], [10.5, 5227.0], [10.6, 5227.0], [10.7, 5227.0], [10.8, 5227.0], [10.9, 5227.0], [11.0, 5273.0], [11.1, 5273.0], [11.2, 5273.0], [11.3, 5273.0], [11.4, 5273.0], [11.5, 5273.0], [11.6, 5273.0], [11.7, 5273.0], [11.8, 5273.0], [11.9, 5273.0], [12.0, 5323.0], [12.1, 5323.0], [12.2, 5323.0], [12.3, 5323.0], [12.4, 5323.0], [12.5, 5323.0], [12.6, 5323.0], [12.7, 5323.0], [12.8, 5323.0], [12.9, 5323.0], [13.0, 5347.0], [13.1, 5347.0], [13.2, 5347.0], [13.3, 5347.0], [13.4, 5347.0], [13.5, 5347.0], [13.6, 5347.0], [13.7, 5347.0], [13.8, 5347.0], [13.9, 5347.0], [14.0, 5378.0], [14.1, 5378.0], [14.2, 5378.0], [14.3, 5378.0], [14.4, 5378.0], [14.5, 5378.0], [14.6, 5378.0], [14.7, 5378.0], [14.8, 5378.0], [14.9, 5378.0], [15.0, 5466.0], [15.1, 5466.0], [15.2, 5466.0], [15.3, 5466.0], [15.4, 5466.0], [15.5, 5466.0], [15.6, 5466.0], [15.7, 5466.0], [15.8, 5466.0], [15.9, 5466.0], [16.0, 5904.0], [16.1, 5904.0], [16.2, 5904.0], [16.3, 5904.0], [16.4, 5904.0], [16.5, 5904.0], [16.6, 5904.0], [16.7, 5904.0], [16.8, 5904.0], [16.9, 5904.0], [17.0, 6244.0], [17.1, 6244.0], [17.2, 6244.0], [17.3, 6244.0], [17.4, 6244.0], [17.5, 6244.0], [17.6, 6244.0], [17.7, 6244.0], [17.8, 6244.0], [17.9, 6244.0], [18.0, 6320.0], [18.1, 6320.0], [18.2, 6320.0], [18.3, 6320.0], [18.4, 6320.0], [18.5, 6320.0], [18.6, 6320.0], [18.7, 6320.0], [18.8, 6320.0], [18.9, 6320.0], [19.0, 6342.0], [19.1, 6342.0], [19.2, 6342.0], [19.3, 6342.0], [19.4, 6342.0], [19.5, 6342.0], [19.6, 6342.0], [19.7, 6342.0], [19.8, 6342.0], [19.9, 6342.0], [20.0, 6351.0], [20.1, 6351.0], [20.2, 6351.0], [20.3, 6351.0], [20.4, 6351.0], [20.5, 6351.0], [20.6, 6351.0], [20.7, 6351.0], [20.8, 6351.0], [20.9, 6351.0], [21.0, 6409.0], [21.1, 6409.0], [21.2, 6409.0], [21.3, 6409.0], [21.4, 6409.0], [21.5, 6409.0], [21.6, 6409.0], [21.7, 6409.0], [21.8, 6409.0], [21.9, 6409.0], [22.0, 6501.0], [22.1, 6501.0], [22.2, 6501.0], [22.3, 6501.0], [22.4, 6501.0], [22.5, 6501.0], [22.6, 6501.0], [22.7, 6501.0], [22.8, 6501.0], [22.9, 6501.0], [23.0, 6586.0], [23.1, 6586.0], [23.2, 6586.0], [23.3, 6586.0], [23.4, 6586.0], [23.5, 6586.0], [23.6, 6586.0], [23.7, 6586.0], [23.8, 6586.0], [23.9, 6586.0], [24.0, 6855.0], [24.1, 6855.0], [24.2, 6855.0], [24.3, 6855.0], [24.4, 6855.0], [24.5, 6855.0], [24.6, 6855.0], [24.7, 6855.0], [24.8, 6855.0], [24.9, 6855.0], [25.0, 6933.0], [25.1, 6933.0], [25.2, 6933.0], [25.3, 6933.0], [25.4, 6933.0], [25.5, 6933.0], [25.6, 6933.0], [25.7, 6933.0], [25.8, 6933.0], [25.9, 6933.0], [26.0, 7000.0], [26.1, 7000.0], [26.2, 7000.0], [26.3, 7000.0], [26.4, 7000.0], [26.5, 7000.0], [26.6, 7000.0], [26.7, 7000.0], [26.8, 7000.0], [26.9, 7000.0], [27.0, 7102.0], [27.1, 7102.0], [27.2, 7102.0], [27.3, 7102.0], [27.4, 7102.0], [27.5, 7102.0], [27.6, 7102.0], [27.7, 7102.0], [27.8, 7102.0], [27.9, 7102.0], [28.0, 7135.0], [28.1, 7135.0], [28.2, 7135.0], [28.3, 7135.0], [28.4, 7135.0], [28.5, 7135.0], [28.6, 7135.0], [28.7, 7135.0], [28.8, 7135.0], [28.9, 7135.0], [29.0, 7146.0], [29.1, 7146.0], [29.2, 7146.0], [29.3, 7146.0], [29.4, 7146.0], [29.5, 7146.0], [29.6, 7146.0], [29.7, 7146.0], [29.8, 7146.0], [29.9, 7146.0], [30.0, 7163.0], [30.1, 7163.0], [30.2, 7163.0], [30.3, 7163.0], [30.4, 7163.0], [30.5, 7163.0], [30.6, 7163.0], [30.7, 7163.0], [30.8, 7163.0], [30.9, 7163.0], [31.0, 7261.0], [31.1, 7261.0], [31.2, 7261.0], [31.3, 7261.0], [31.4, 7261.0], [31.5, 7261.0], [31.6, 7261.0], [31.7, 7261.0], [31.8, 7261.0], [31.9, 7261.0], [32.0, 7318.0], [32.1, 7318.0], [32.2, 7318.0], [32.3, 7318.0], [32.4, 7318.0], [32.5, 7318.0], [32.6, 7318.0], [32.7, 7318.0], [32.8, 7318.0], [32.9, 7318.0], [33.0, 7331.0], [33.1, 7331.0], [33.2, 7331.0], [33.3, 7331.0], [33.4, 7331.0], [33.5, 7331.0], [33.6, 7331.0], [33.7, 7331.0], [33.8, 7331.0], [33.9, 7331.0], [34.0, 7453.0], [34.1, 7453.0], [34.2, 7453.0], [34.3, 7453.0], [34.4, 7453.0], [34.5, 7453.0], [34.6, 7453.0], [34.7, 7453.0], [34.8, 7453.0], [34.9, 7453.0], [35.0, 7456.0], [35.1, 7456.0], [35.2, 7456.0], [35.3, 7456.0], [35.4, 7456.0], [35.5, 7456.0], [35.6, 7456.0], [35.7, 7456.0], [35.8, 7456.0], [35.9, 7456.0], [36.0, 7656.0], [36.1, 7656.0], [36.2, 7656.0], [36.3, 7656.0], [36.4, 7656.0], [36.5, 7656.0], [36.6, 7656.0], [36.7, 7656.0], [36.8, 7656.0], [36.9, 7656.0], [37.0, 7680.0], [37.1, 7680.0], [37.2, 7680.0], [37.3, 7680.0], [37.4, 7680.0], [37.5, 7680.0], [37.6, 7680.0], [37.7, 7680.0], [37.8, 7680.0], [37.9, 7680.0], [38.0, 7680.0], [38.1, 7680.0], [38.2, 7680.0], [38.3, 7680.0], [38.4, 7680.0], [38.5, 7680.0], [38.6, 7680.0], [38.7, 7680.0], [38.8, 7680.0], [38.9, 7680.0], [39.0, 7707.0], [39.1, 7707.0], [39.2, 7707.0], [39.3, 7707.0], [39.4, 7707.0], [39.5, 7707.0], [39.6, 7707.0], [39.7, 7707.0], [39.8, 7707.0], [39.9, 7707.0], [40.0, 7724.0], [40.1, 7724.0], [40.2, 7724.0], [40.3, 7724.0], [40.4, 7724.0], [40.5, 7724.0], [40.6, 7724.0], [40.7, 7724.0], [40.8, 7724.0], [40.9, 7724.0], [41.0, 7741.0], [41.1, 7741.0], [41.2, 7741.0], [41.3, 7741.0], [41.4, 7741.0], [41.5, 7741.0], [41.6, 7741.0], [41.7, 7741.0], [41.8, 7741.0], [41.9, 7741.0], [42.0, 7747.0], [42.1, 7747.0], [42.2, 7747.0], [42.3, 7747.0], [42.4, 7747.0], [42.5, 7747.0], [42.6, 7747.0], [42.7, 7747.0], [42.8, 7747.0], [42.9, 7747.0], [43.0, 7748.0], [43.1, 7748.0], [43.2, 7748.0], [43.3, 7748.0], [43.4, 7748.0], [43.5, 7748.0], [43.6, 7748.0], [43.7, 7748.0], [43.8, 7748.0], [43.9, 7748.0], [44.0, 7755.0], [44.1, 7755.0], [44.2, 7755.0], [44.3, 7755.0], [44.4, 7755.0], [44.5, 7755.0], [44.6, 7755.0], [44.7, 7755.0], [44.8, 7755.0], [44.9, 7755.0], [45.0, 7789.0], [45.1, 7789.0], [45.2, 7789.0], [45.3, 7789.0], [45.4, 7789.0], [45.5, 7789.0], [45.6, 7789.0], [45.7, 7789.0], [45.8, 7789.0], [45.9, 7789.0], [46.0, 7809.0], [46.1, 7809.0], [46.2, 7809.0], [46.3, 7809.0], [46.4, 7809.0], [46.5, 7809.0], [46.6, 7809.0], [46.7, 7809.0], [46.8, 7809.0], [46.9, 7809.0], [47.0, 7984.0], [47.1, 7984.0], [47.2, 7984.0], [47.3, 7984.0], [47.4, 7984.0], [47.5, 7984.0], [47.6, 7984.0], [47.7, 7984.0], [47.8, 7984.0], [47.9, 7984.0], [48.0, 8767.0], [48.1, 8767.0], [48.2, 8767.0], [48.3, 8767.0], [48.4, 8767.0], [48.5, 8767.0], [48.6, 8767.0], [48.7, 8767.0], [48.8, 8767.0], [48.9, 8767.0], [49.0, 9263.0], [49.1, 9263.0], [49.2, 9263.0], [49.3, 9263.0], [49.4, 9263.0], [49.5, 9263.0], [49.6, 9263.0], [49.7, 9263.0], [49.8, 9263.0], [49.9, 9263.0], [50.0, 9837.0], [50.1, 9837.0], [50.2, 9837.0], [50.3, 9837.0], [50.4, 9837.0], [50.5, 9837.0], [50.6, 9837.0], [50.7, 9837.0], [50.8, 9837.0], [50.9, 9837.0], [51.0, 10819.0], [51.1, 10819.0], [51.2, 10819.0], [51.3, 10819.0], [51.4, 10819.0], [51.5, 10819.0], [51.6, 10819.0], [51.7, 10819.0], [51.8, 10819.0], [51.9, 10819.0], [52.0, 10865.0], [52.1, 10865.0], [52.2, 10865.0], [52.3, 10865.0], [52.4, 10865.0], [52.5, 10865.0], [52.6, 10865.0], [52.7, 10865.0], [52.8, 10865.0], [52.9, 10865.0], [53.0, 10933.0], [53.1, 10933.0], [53.2, 10933.0], [53.3, 10933.0], [53.4, 10933.0], [53.5, 10933.0], [53.6, 10933.0], [53.7, 10933.0], [53.8, 10933.0], [53.9, 10933.0], [54.0, 10973.0], [54.1, 10973.0], [54.2, 10973.0], [54.3, 10973.0], [54.4, 10973.0], [54.5, 10973.0], [54.6, 10973.0], [54.7, 10973.0], [54.8, 10973.0], [54.9, 10973.0], [55.0, 10994.0], [55.1, 10994.0], [55.2, 10994.0], [55.3, 10994.0], [55.4, 10994.0], [55.5, 10994.0], [55.6, 10994.0], [55.7, 10994.0], [55.8, 10994.0], [55.9, 10994.0], [56.0, 11294.0], [56.1, 11294.0], [56.2, 11294.0], [56.3, 11294.0], [56.4, 11294.0], [56.5, 11294.0], [56.6, 11294.0], [56.7, 11294.0], [56.8, 11294.0], [56.9, 11294.0], [57.0, 11326.0], [57.1, 11326.0], [57.2, 11326.0], [57.3, 11326.0], [57.4, 11326.0], [57.5, 11326.0], [57.6, 11326.0], [57.7, 11326.0], [57.8, 11326.0], [57.9, 11326.0], [58.0, 11481.0], [58.1, 11481.0], [58.2, 11481.0], [58.3, 11481.0], [58.4, 11481.0], [58.5, 11481.0], [58.6, 11481.0], [58.7, 11481.0], [58.8, 11481.0], [58.9, 11481.0], [59.0, 11597.0], [59.1, 11597.0], [59.2, 11597.0], [59.3, 11597.0], [59.4, 11597.0], [59.5, 11597.0], [59.6, 11597.0], [59.7, 11597.0], [59.8, 11597.0], [59.9, 11597.0], [60.0, 11771.0], [60.1, 11771.0], [60.2, 11771.0], [60.3, 11771.0], [60.4, 11771.0], [60.5, 11771.0], [60.6, 11771.0], [60.7, 11771.0], [60.8, 11771.0], [60.9, 11771.0], [61.0, 11931.0], [61.1, 11931.0], [61.2, 11931.0], [61.3, 11931.0], [61.4, 11931.0], [61.5, 11931.0], [61.6, 11931.0], [61.7, 11931.0], [61.8, 11931.0], [61.9, 11931.0], [62.0, 11955.0], [62.1, 11955.0], [62.2, 11955.0], [62.3, 11955.0], [62.4, 11955.0], [62.5, 11955.0], [62.6, 11955.0], [62.7, 11955.0], [62.8, 11955.0], [62.9, 11955.0], [63.0, 11963.0], [63.1, 11963.0], [63.2, 11963.0], [63.3, 11963.0], [63.4, 11963.0], [63.5, 11963.0], [63.6, 11963.0], [63.7, 11963.0], [63.8, 11963.0], [63.9, 11963.0], [64.0, 12029.0], [64.1, 12029.0], [64.2, 12029.0], [64.3, 12029.0], [64.4, 12029.0], [64.5, 12029.0], [64.6, 12029.0], [64.7, 12029.0], [64.8, 12029.0], [64.9, 12029.0], [65.0, 12033.0], [65.1, 12033.0], [65.2, 12033.0], [65.3, 12033.0], [65.4, 12033.0], [65.5, 12033.0], [65.6, 12033.0], [65.7, 12033.0], [65.8, 12033.0], [65.9, 12033.0], [66.0, 12124.0], [66.1, 12124.0], [66.2, 12124.0], [66.3, 12124.0], [66.4, 12124.0], [66.5, 12124.0], [66.6, 12124.0], [66.7, 12124.0], [66.8, 12124.0], [66.9, 12124.0], [67.0, 12219.0], [67.1, 12219.0], [67.2, 12219.0], [67.3, 12219.0], [67.4, 12219.0], [67.5, 12219.0], [67.6, 12219.0], [67.7, 12219.0], [67.8, 12219.0], [67.9, 12219.0], [68.0, 12229.0], [68.1, 12229.0], [68.2, 12229.0], [68.3, 12229.0], [68.4, 12229.0], [68.5, 12229.0], [68.6, 12229.0], [68.7, 12229.0], [68.8, 12229.0], [68.9, 12229.0], [69.0, 12357.0], [69.1, 12357.0], [69.2, 12357.0], [69.3, 12357.0], [69.4, 12357.0], [69.5, 12357.0], [69.6, 12357.0], [69.7, 12357.0], [69.8, 12357.0], [69.9, 12357.0], [70.0, 12400.0], [70.1, 12400.0], [70.2, 12400.0], [70.3, 12400.0], [70.4, 12400.0], [70.5, 12400.0], [70.6, 12400.0], [70.7, 12400.0], [70.8, 12400.0], [70.9, 12400.0], [71.0, 12454.0], [71.1, 12454.0], [71.2, 12454.0], [71.3, 12454.0], [71.4, 12454.0], [71.5, 12454.0], [71.6, 12454.0], [71.7, 12454.0], [71.8, 12454.0], [71.9, 12454.0], [72.0, 12479.0], [72.1, 12479.0], [72.2, 12479.0], [72.3, 12479.0], [72.4, 12479.0], [72.5, 12479.0], [72.6, 12479.0], [72.7, 12479.0], [72.8, 12479.0], [72.9, 12479.0], [73.0, 12481.0], [73.1, 12481.0], [73.2, 12481.0], [73.3, 12481.0], [73.4, 12481.0], [73.5, 12481.0], [73.6, 12481.0], [73.7, 12481.0], [73.8, 12481.0], [73.9, 12481.0], [74.0, 12494.0], [74.1, 12494.0], [74.2, 12494.0], [74.3, 12494.0], [74.4, 12494.0], [74.5, 12494.0], [74.6, 12494.0], [74.7, 12494.0], [74.8, 12494.0], [74.9, 12494.0], [75.0, 12530.0], [75.1, 12530.0], [75.2, 12530.0], [75.3, 12530.0], [75.4, 12530.0], [75.5, 12530.0], [75.6, 12530.0], [75.7, 12530.0], [75.8, 12530.0], [75.9, 12530.0], [76.0, 12533.0], [76.1, 12533.0], [76.2, 12533.0], [76.3, 12533.0], [76.4, 12533.0], [76.5, 12533.0], [76.6, 12533.0], [76.7, 12533.0], [76.8, 12533.0], [76.9, 12533.0], [77.0, 12555.0], [77.1, 12555.0], [77.2, 12555.0], [77.3, 12555.0], [77.4, 12555.0], [77.5, 12555.0], [77.6, 12555.0], [77.7, 12555.0], [77.8, 12555.0], [77.9, 12555.0], [78.0, 12664.0], [78.1, 12664.0], [78.2, 12664.0], [78.3, 12664.0], [78.4, 12664.0], [78.5, 12664.0], [78.6, 12664.0], [78.7, 12664.0], [78.8, 12664.0], [78.9, 12664.0], [79.0, 12706.0], [79.1, 12706.0], [79.2, 12706.0], [79.3, 12706.0], [79.4, 12706.0], [79.5, 12706.0], [79.6, 12706.0], [79.7, 12706.0], [79.8, 12706.0], [79.9, 12706.0], [80.0, 12763.0], [80.1, 12763.0], [80.2, 12763.0], [80.3, 12763.0], [80.4, 12763.0], [80.5, 12763.0], [80.6, 12763.0], [80.7, 12763.0], [80.8, 12763.0], [80.9, 12763.0], [81.0, 12892.0], [81.1, 12892.0], [81.2, 12892.0], [81.3, 12892.0], [81.4, 12892.0], [81.5, 12892.0], [81.6, 12892.0], [81.7, 12892.0], [81.8, 12892.0], [81.9, 12892.0], [82.0, 12935.0], [82.1, 12935.0], [82.2, 12935.0], [82.3, 12935.0], [82.4, 12935.0], [82.5, 12935.0], [82.6, 12935.0], [82.7, 12935.0], [82.8, 12935.0], [82.9, 12935.0], [83.0, 12961.0], [83.1, 12961.0], [83.2, 12961.0], [83.3, 12961.0], [83.4, 12961.0], [83.5, 12961.0], [83.6, 12961.0], [83.7, 12961.0], [83.8, 12961.0], [83.9, 12961.0], [84.0, 13123.0], [84.1, 13123.0], [84.2, 13123.0], [84.3, 13123.0], [84.4, 13123.0], [84.5, 13123.0], [84.6, 13123.0], [84.7, 13123.0], [84.8, 13123.0], [84.9, 13123.0], [85.0, 13235.0], [85.1, 13235.0], [85.2, 13235.0], [85.3, 13235.0], [85.4, 13235.0], [85.5, 13235.0], [85.6, 13235.0], [85.7, 13235.0], [85.8, 13235.0], [85.9, 13235.0], [86.0, 13244.0], [86.1, 13244.0], [86.2, 13244.0], [86.3, 13244.0], [86.4, 13244.0], [86.5, 13244.0], [86.6, 13244.0], [86.7, 13244.0], [86.8, 13244.0], [86.9, 13244.0], [87.0, 13289.0], [87.1, 13289.0], [87.2, 13289.0], [87.3, 13289.0], [87.4, 13289.0], [87.5, 13289.0], [87.6, 13289.0], [87.7, 13289.0], [87.8, 13289.0], [87.9, 13289.0], [88.0, 13304.0], [88.1, 13304.0], [88.2, 13304.0], [88.3, 13304.0], [88.4, 13304.0], [88.5, 13304.0], [88.6, 13304.0], [88.7, 13304.0], [88.8, 13304.0], [88.9, 13304.0], [89.0, 13327.0], [89.1, 13327.0], [89.2, 13327.0], [89.3, 13327.0], [89.4, 13327.0], [89.5, 13327.0], [89.6, 13327.0], [89.7, 13327.0], [89.8, 13327.0], [89.9, 13327.0], [90.0, 13372.0], [90.1, 13372.0], [90.2, 13372.0], [90.3, 13372.0], [90.4, 13372.0], [90.5, 13372.0], [90.6, 13372.0], [90.7, 13372.0], [90.8, 13372.0], [90.9, 13372.0], [91.0, 13379.0], [91.1, 13379.0], [91.2, 13379.0], [91.3, 13379.0], [91.4, 13379.0], [91.5, 13379.0], [91.6, 13379.0], [91.7, 13379.0], [91.8, 13379.0], [91.9, 13379.0], [92.0, 13388.0], [92.1, 13388.0], [92.2, 13388.0], [92.3, 13388.0], [92.4, 13388.0], [92.5, 13388.0], [92.6, 13388.0], [92.7, 13388.0], [92.8, 13388.0], [92.9, 13388.0], [93.0, 13559.0], [93.1, 13559.0], [93.2, 13559.0], [93.3, 13559.0], [93.4, 13559.0], [93.5, 13559.0], [93.6, 13559.0], [93.7, 13559.0], [93.8, 13559.0], [93.9, 13559.0], [94.0, 13668.0], [94.1, 13668.0], [94.2, 13668.0], [94.3, 13668.0], [94.4, 13668.0], [94.5, 13668.0], [94.6, 13668.0], [94.7, 13668.0], [94.8, 13668.0], [94.9, 13668.0], [95.0, 13792.0], [95.1, 13792.0], [95.2, 13792.0], [95.3, 13792.0], [95.4, 13792.0], [95.5, 13792.0], [95.6, 13792.0], [95.7, 13792.0], [95.8, 13792.0], [95.9, 13792.0], [96.0, 13824.0], [96.1, 13824.0], [96.2, 13824.0], [96.3, 13824.0], [96.4, 13824.0], [96.5, 13824.0], [96.6, 13824.0], [96.7, 13824.0], [96.8, 13824.0], [96.9, 13824.0], [97.0, 13833.0], [97.1, 13833.0], [97.2, 13833.0], [97.3, 13833.0], [97.4, 13833.0], [97.5, 13833.0], [97.6, 13833.0], [97.7, 13833.0], [97.8, 13833.0], [97.9, 13833.0], [98.0, 13852.0], [98.1, 13852.0], [98.2, 13852.0], [98.3, 13852.0], [98.4, 13852.0], [98.5, 13852.0], [98.6, 13852.0], [98.7, 13852.0], [98.8, 13852.0], [98.9, 13852.0], [99.0, 14085.0], [99.1, 14085.0], [99.2, 14085.0], [99.3, 14085.0], [99.4, 14085.0], [99.5, 14085.0], [99.6, 14085.0], [99.7, 14085.0], [99.8, 14085.0], [99.9, 14085.0]], "isOverall": false, "label": "challengeUserIds", "isController": false}, {"data": [[0.0, 106.0], [0.1, 106.0], [0.2, 106.0], [0.3, 106.0], [0.4, 106.0], [0.5, 106.0], [0.6, 106.0], [0.7, 106.0], [0.8, 106.0], [0.9, 106.0], [1.0, 113.0], [1.1, 113.0], [1.2, 113.0], [1.3, 113.0], [1.4, 113.0], [1.5, 113.0], [1.6, 113.0], [1.7, 113.0], [1.8, 113.0], [1.9, 113.0], [2.0, 114.0], [2.1, 114.0], [2.2, 114.0], [2.3, 114.0], [2.4, 114.0], [2.5, 114.0], [2.6, 114.0], [2.7, 114.0], [2.8, 114.0], [2.9, 114.0], [3.0, 115.0], [3.1, 115.0], [3.2, 115.0], [3.3, 115.0], [3.4, 115.0], [3.5, 115.0], [3.6, 115.0], [3.7, 115.0], [3.8, 115.0], [3.9, 115.0], [4.0, 118.0], [4.1, 118.0], [4.2, 118.0], [4.3, 118.0], [4.4, 118.0], [4.5, 118.0], [4.6, 118.0], [4.7, 118.0], [4.8, 118.0], [4.9, 118.0], [5.0, 119.0], [5.1, 119.0], [5.2, 119.0], [5.3, 119.0], [5.4, 119.0], [5.5, 119.0], [5.6, 119.0], [5.7, 119.0], [5.8, 119.0], [5.9, 119.0], [6.0, 120.0], [6.1, 120.0], [6.2, 120.0], [6.3, 120.0], [6.4, 120.0], [6.5, 120.0], [6.6, 120.0], [6.7, 120.0], [6.8, 120.0], [6.9, 120.0], [7.0, 120.0], [7.1, 120.0], [7.2, 120.0], [7.3, 120.0], [7.4, 120.0], [7.5, 120.0], [7.6, 120.0], [7.7, 120.0], [7.8, 120.0], [7.9, 120.0], [8.0, 121.0], [8.1, 121.0], [8.2, 121.0], [8.3, 121.0], [8.4, 121.0], [8.5, 121.0], [8.6, 121.0], [8.7, 121.0], [8.8, 121.0], [8.9, 121.0], [9.0, 122.0], [9.1, 122.0], [9.2, 122.0], [9.3, 122.0], [9.4, 122.0], [9.5, 122.0], [9.6, 122.0], [9.7, 122.0], [9.8, 122.0], [9.9, 122.0], [10.0, 124.0], [10.1, 124.0], [10.2, 124.0], [10.3, 124.0], [10.4, 124.0], [10.5, 124.0], [10.6, 124.0], [10.7, 124.0], [10.8, 124.0], [10.9, 124.0], [11.0, 125.0], [11.1, 125.0], [11.2, 125.0], [11.3, 125.0], [11.4, 125.0], [11.5, 125.0], [11.6, 125.0], [11.7, 125.0], [11.8, 125.0], [11.9, 125.0], [12.0, 125.0], [12.1, 125.0], [12.2, 125.0], [12.3, 125.0], [12.4, 125.0], [12.5, 125.0], [12.6, 125.0], [12.7, 125.0], [12.8, 125.0], [12.9, 125.0], [13.0, 127.0], [13.1, 127.0], [13.2, 127.0], [13.3, 127.0], [13.4, 127.0], [13.5, 127.0], [13.6, 127.0], [13.7, 127.0], [13.8, 127.0], [13.9, 127.0], [14.0, 128.0], [14.1, 128.0], [14.2, 128.0], [14.3, 128.0], [14.4, 128.0], [14.5, 128.0], [14.6, 128.0], [14.7, 128.0], [14.8, 128.0], [14.9, 128.0], [15.0, 130.0], [15.1, 130.0], [15.2, 130.0], [15.3, 130.0], [15.4, 130.0], [15.5, 130.0], [15.6, 130.0], [15.7, 130.0], [15.8, 130.0], [15.9, 130.0], [16.0, 134.0], [16.1, 134.0], [16.2, 134.0], [16.3, 134.0], [16.4, 134.0], [16.5, 134.0], [16.6, 134.0], [16.7, 134.0], [16.8, 134.0], [16.9, 134.0], [17.0, 135.0], [17.1, 135.0], [17.2, 135.0], [17.3, 135.0], [17.4, 135.0], [17.5, 135.0], [17.6, 135.0], [17.7, 135.0], [17.8, 135.0], [17.9, 135.0], [18.0, 136.0], [18.1, 136.0], [18.2, 136.0], [18.3, 136.0], [18.4, 136.0], [18.5, 136.0], [18.6, 136.0], [18.7, 136.0], [18.8, 136.0], [18.9, 136.0], [19.0, 149.0], [19.1, 149.0], [19.2, 149.0], [19.3, 149.0], [19.4, 149.0], [19.5, 149.0], [19.6, 149.0], [19.7, 149.0], [19.8, 149.0], [19.9, 149.0], [20.0, 149.0], [20.1, 149.0], [20.2, 149.0], [20.3, 149.0], [20.4, 149.0], [20.5, 149.0], [20.6, 149.0], [20.7, 149.0], [20.8, 149.0], [20.9, 149.0], [21.0, 153.0], [21.1, 153.0], [21.2, 153.0], [21.3, 153.0], [21.4, 153.0], [21.5, 153.0], [21.6, 153.0], [21.7, 153.0], [21.8, 153.0], [21.9, 153.0], [22.0, 154.0], [22.1, 154.0], [22.2, 154.0], [22.3, 154.0], [22.4, 154.0], [22.5, 154.0], [22.6, 154.0], [22.7, 154.0], [22.8, 154.0], [22.9, 154.0], [23.0, 157.0], [23.1, 157.0], [23.2, 157.0], [23.3, 157.0], [23.4, 157.0], [23.5, 157.0], [23.6, 157.0], [23.7, 157.0], [23.8, 157.0], [23.9, 157.0], [24.0, 163.0], [24.1, 163.0], [24.2, 163.0], [24.3, 163.0], [24.4, 163.0], [24.5, 163.0], [24.6, 163.0], [24.7, 163.0], [24.8, 163.0], [24.9, 163.0], [25.0, 167.0], [25.1, 167.0], [25.2, 167.0], [25.3, 167.0], [25.4, 167.0], [25.5, 167.0], [25.6, 167.0], [25.7, 167.0], [25.8, 167.0], [25.9, 167.0], [26.0, 168.0], [26.1, 168.0], [26.2, 168.0], [26.3, 168.0], [26.4, 168.0], [26.5, 168.0], [26.6, 168.0], [26.7, 168.0], [26.8, 168.0], [26.9, 168.0], [27.0, 169.0], [27.1, 169.0], [27.2, 169.0], [27.3, 169.0], [27.4, 169.0], [27.5, 169.0], [27.6, 169.0], [27.7, 169.0], [27.8, 169.0], [27.9, 169.0], [28.0, 169.0], [28.1, 169.0], [28.2, 169.0], [28.3, 169.0], [28.4, 169.0], [28.5, 169.0], [28.6, 169.0], [28.7, 169.0], [28.8, 169.0], [28.9, 169.0], [29.0, 172.0], [29.1, 172.0], [29.2, 172.0], [29.3, 172.0], [29.4, 172.0], [29.5, 172.0], [29.6, 172.0], [29.7, 172.0], [29.8, 172.0], [29.9, 172.0], [30.0, 188.0], [30.1, 188.0], [30.2, 188.0], [30.3, 188.0], [30.4, 188.0], [30.5, 188.0], [30.6, 188.0], [30.7, 188.0], [30.8, 188.0], [30.9, 188.0], [31.0, 201.0], [31.1, 201.0], [31.2, 201.0], [31.3, 201.0], [31.4, 201.0], [31.5, 201.0], [31.6, 201.0], [31.7, 201.0], [31.8, 201.0], [31.9, 201.0], [32.0, 209.0], [32.1, 209.0], [32.2, 209.0], [32.3, 209.0], [32.4, 209.0], [32.5, 209.0], [32.6, 209.0], [32.7, 209.0], [32.8, 209.0], [32.9, 209.0], [33.0, 211.0], [33.1, 211.0], [33.2, 211.0], [33.3, 211.0], [33.4, 211.0], [33.5, 211.0], [33.6, 211.0], [33.7, 211.0], [33.8, 211.0], [33.9, 211.0], [34.0, 212.0], [34.1, 212.0], [34.2, 212.0], [34.3, 212.0], [34.4, 212.0], [34.5, 212.0], [34.6, 212.0], [34.7, 212.0], [34.8, 212.0], [34.9, 212.0], [35.0, 275.0], [35.1, 275.0], [35.2, 275.0], [35.3, 275.0], [35.4, 275.0], [35.5, 275.0], [35.6, 275.0], [35.7, 275.0], [35.8, 275.0], [35.9, 275.0], [36.0, 277.0], [36.1, 277.0], [36.2, 277.0], [36.3, 277.0], [36.4, 277.0], [36.5, 277.0], [36.6, 277.0], [36.7, 277.0], [36.8, 277.0], [36.9, 277.0], [37.0, 285.0], [37.1, 285.0], [37.2, 285.0], [37.3, 285.0], [37.4, 285.0], [37.5, 285.0], [37.6, 285.0], [37.7, 285.0], [37.8, 285.0], [37.9, 285.0], [38.0, 294.0], [38.1, 294.0], [38.2, 294.0], [38.3, 294.0], [38.4, 294.0], [38.5, 294.0], [38.6, 294.0], [38.7, 294.0], [38.8, 294.0], [38.9, 294.0], [39.0, 360.0], [39.1, 360.0], [39.2, 360.0], [39.3, 360.0], [39.4, 360.0], [39.5, 360.0], [39.6, 360.0], [39.7, 360.0], [39.8, 360.0], [39.9, 360.0], [40.0, 367.0], [40.1, 367.0], [40.2, 367.0], [40.3, 367.0], [40.4, 367.0], [40.5, 367.0], [40.6, 367.0], [40.7, 367.0], [40.8, 367.0], [40.9, 367.0], [41.0, 377.0], [41.1, 377.0], [41.2, 377.0], [41.3, 377.0], [41.4, 377.0], [41.5, 377.0], [41.6, 377.0], [41.7, 377.0], [41.8, 377.0], [41.9, 377.0], [42.0, 394.0], [42.1, 394.0], [42.2, 394.0], [42.3, 394.0], [42.4, 394.0], [42.5, 394.0], [42.6, 394.0], [42.7, 394.0], [42.8, 394.0], [42.9, 394.0], [43.0, 532.0], [43.1, 532.0], [43.2, 532.0], [43.3, 532.0], [43.4, 532.0], [43.5, 532.0], [43.6, 532.0], [43.7, 532.0], [43.8, 532.0], [43.9, 532.0], [44.0, 623.0], [44.1, 623.0], [44.2, 623.0], [44.3, 623.0], [44.4, 623.0], [44.5, 623.0], [44.6, 623.0], [44.7, 623.0], [44.8, 623.0], [44.9, 623.0], [45.0, 802.0], [45.1, 802.0], [45.2, 802.0], [45.3, 802.0], [45.4, 802.0], [45.5, 802.0], [45.6, 802.0], [45.7, 802.0], [45.8, 802.0], [45.9, 802.0], [46.0, 820.0], [46.1, 820.0], [46.2, 820.0], [46.3, 820.0], [46.4, 820.0], [46.5, 820.0], [46.6, 820.0], [46.7, 820.0], [46.8, 820.0], [46.9, 820.0], [47.0, 823.0], [47.1, 823.0], [47.2, 823.0], [47.3, 823.0], [47.4, 823.0], [47.5, 823.0], [47.6, 823.0], [47.7, 823.0], [47.8, 823.0], [47.9, 823.0], [48.0, 825.0], [48.1, 825.0], [48.2, 825.0], [48.3, 825.0], [48.4, 825.0], [48.5, 825.0], [48.6, 825.0], [48.7, 825.0], [48.8, 825.0], [48.9, 825.0], [49.0, 883.0], [49.1, 883.0], [49.2, 883.0], [49.3, 883.0], [49.4, 883.0], [49.5, 883.0], [49.6, 883.0], [49.7, 883.0], [49.8, 883.0], [49.9, 883.0], [50.0, 908.0], [50.1, 908.0], [50.2, 908.0], [50.3, 908.0], [50.4, 908.0], [50.5, 908.0], [50.6, 908.0], [50.7, 908.0], [50.8, 908.0], [50.9, 908.0], [51.0, 1004.0], [51.1, 1004.0], [51.2, 1004.0], [51.3, 1004.0], [51.4, 1004.0], [51.5, 1004.0], [51.6, 1004.0], [51.7, 1004.0], [51.8, 1004.0], [51.9, 1004.0], [52.0, 1013.0], [52.1, 1013.0], [52.2, 1013.0], [52.3, 1013.0], [52.4, 1013.0], [52.5, 1013.0], [52.6, 1013.0], [52.7, 1013.0], [52.8, 1013.0], [52.9, 1013.0], [53.0, 1158.0], [53.1, 1158.0], [53.2, 1158.0], [53.3, 1158.0], [53.4, 1158.0], [53.5, 1158.0], [53.6, 1158.0], [53.7, 1158.0], [53.8, 1158.0], [53.9, 1158.0], [54.0, 1270.0], [54.1, 1270.0], [54.2, 1270.0], [54.3, 1270.0], [54.4, 1270.0], [54.5, 1270.0], [54.6, 1270.0], [54.7, 1270.0], [54.8, 1270.0], [54.9, 1270.0], [55.0, 1389.0], [55.1, 1389.0], [55.2, 1389.0], [55.3, 1389.0], [55.4, 1389.0], [55.5, 1389.0], [55.6, 1389.0], [55.7, 1389.0], [55.8, 1389.0], [55.9, 1389.0], [56.0, 1488.0], [56.1, 1488.0], [56.2, 1488.0], [56.3, 1488.0], [56.4, 1488.0], [56.5, 1488.0], [56.6, 1488.0], [56.7, 1488.0], [56.8, 1488.0], [56.9, 1488.0], [57.0, 1540.0], [57.1, 1540.0], [57.2, 1540.0], [57.3, 1540.0], [57.4, 1540.0], [57.5, 1540.0], [57.6, 1540.0], [57.7, 1540.0], [57.8, 1540.0], [57.9, 1540.0], [58.0, 2048.0], [58.1, 2048.0], [58.2, 2048.0], [58.3, 2048.0], [58.4, 2048.0], [58.5, 2048.0], [58.6, 2048.0], [58.7, 2048.0], [58.8, 2048.0], [58.9, 2048.0], [59.0, 2144.0], [59.1, 2144.0], [59.2, 2144.0], [59.3, 2144.0], [59.4, 2144.0], [59.5, 2144.0], [59.6, 2144.0], [59.7, 2144.0], [59.8, 2144.0], [59.9, 2144.0], [60.0, 2456.0], [60.1, 2456.0], [60.2, 2456.0], [60.3, 2456.0], [60.4, 2456.0], [60.5, 2456.0], [60.6, 2456.0], [60.7, 2456.0], [60.8, 2456.0], [60.9, 2456.0], [61.0, 2464.0], [61.1, 2464.0], [61.2, 2464.0], [61.3, 2464.0], [61.4, 2464.0], [61.5, 2464.0], [61.6, 2464.0], [61.7, 2464.0], [61.8, 2464.0], [61.9, 2464.0], [62.0, 2762.0], [62.1, 2762.0], [62.2, 2762.0], [62.3, 2762.0], [62.4, 2762.0], [62.5, 2762.0], [62.6, 2762.0], [62.7, 2762.0], [62.8, 2762.0], [62.9, 2762.0], [63.0, 2785.0], [63.1, 2785.0], [63.2, 2785.0], [63.3, 2785.0], [63.4, 2785.0], [63.5, 2785.0], [63.6, 2785.0], [63.7, 2785.0], [63.8, 2785.0], [63.9, 2785.0], [64.0, 2808.0], [64.1, 2808.0], [64.2, 2808.0], [64.3, 2808.0], [64.4, 2808.0], [64.5, 2808.0], [64.6, 2808.0], [64.7, 2808.0], [64.8, 2808.0], [64.9, 2808.0], [65.0, 2831.0], [65.1, 2831.0], [65.2, 2831.0], [65.3, 2831.0], [65.4, 2831.0], [65.5, 2831.0], [65.6, 2831.0], [65.7, 2831.0], [65.8, 2831.0], [65.9, 2831.0], [66.0, 2872.0], [66.1, 2872.0], [66.2, 2872.0], [66.3, 2872.0], [66.4, 2872.0], [66.5, 2872.0], [66.6, 2872.0], [66.7, 2872.0], [66.8, 2872.0], [66.9, 2872.0], [67.0, 2886.0], [67.1, 2886.0], [67.2, 2886.0], [67.3, 2886.0], [67.4, 2886.0], [67.5, 2886.0], [67.6, 2886.0], [67.7, 2886.0], [67.8, 2886.0], [67.9, 2886.0], [68.0, 2905.0], [68.1, 2905.0], [68.2, 2905.0], [68.3, 2905.0], [68.4, 2905.0], [68.5, 2905.0], [68.6, 2905.0], [68.7, 2905.0], [68.8, 2905.0], [68.9, 2905.0], [69.0, 2908.0], [69.1, 2908.0], [69.2, 2908.0], [69.3, 2908.0], [69.4, 2908.0], [69.5, 2908.0], [69.6, 2908.0], [69.7, 2908.0], [69.8, 2908.0], [69.9, 2908.0], [70.0, 3015.0], [70.1, 3015.0], [70.2, 3015.0], [70.3, 3015.0], [70.4, 3015.0], [70.5, 3015.0], [70.6, 3015.0], [70.7, 3015.0], [70.8, 3015.0], [70.9, 3015.0], [71.0, 3020.0], [71.1, 3020.0], [71.2, 3020.0], [71.3, 3020.0], [71.4, 3020.0], [71.5, 3020.0], [71.6, 3020.0], [71.7, 3020.0], [71.8, 3020.0], [71.9, 3020.0], [72.0, 3064.0], [72.1, 3064.0], [72.2, 3064.0], [72.3, 3064.0], [72.4, 3064.0], [72.5, 3064.0], [72.6, 3064.0], [72.7, 3064.0], [72.8, 3064.0], [72.9, 3064.0], [73.0, 3102.0], [73.1, 3102.0], [73.2, 3102.0], [73.3, 3102.0], [73.4, 3102.0], [73.5, 3102.0], [73.6, 3102.0], [73.7, 3102.0], [73.8, 3102.0], [73.9, 3102.0], [74.0, 3126.0], [74.1, 3126.0], [74.2, 3126.0], [74.3, 3126.0], [74.4, 3126.0], [74.5, 3126.0], [74.6, 3126.0], [74.7, 3126.0], [74.8, 3126.0], [74.9, 3126.0], [75.0, 3148.0], [75.1, 3148.0], [75.2, 3148.0], [75.3, 3148.0], [75.4, 3148.0], [75.5, 3148.0], [75.6, 3148.0], [75.7, 3148.0], [75.8, 3148.0], [75.9, 3148.0], [76.0, 3215.0], [76.1, 3215.0], [76.2, 3215.0], [76.3, 3215.0], [76.4, 3215.0], [76.5, 3215.0], [76.6, 3215.0], [76.7, 3215.0], [76.8, 3215.0], [76.9, 3215.0], [77.0, 3251.0], [77.1, 3251.0], [77.2, 3251.0], [77.3, 3251.0], [77.4, 3251.0], [77.5, 3251.0], [77.6, 3251.0], [77.7, 3251.0], [77.8, 3251.0], [77.9, 3251.0], [78.0, 3321.0], [78.1, 3321.0], [78.2, 3321.0], [78.3, 3321.0], [78.4, 3321.0], [78.5, 3321.0], [78.6, 3321.0], [78.7, 3321.0], [78.8, 3321.0], [78.9, 3321.0], [79.0, 3327.0], [79.1, 3327.0], [79.2, 3327.0], [79.3, 3327.0], [79.4, 3327.0], [79.5, 3327.0], [79.6, 3327.0], [79.7, 3327.0], [79.8, 3327.0], [79.9, 3327.0], [80.0, 3363.0], [80.1, 3363.0], [80.2, 3363.0], [80.3, 3363.0], [80.4, 3363.0], [80.5, 3363.0], [80.6, 3363.0], [80.7, 3363.0], [80.8, 3363.0], [80.9, 3363.0], [81.0, 3437.0], [81.1, 3437.0], [81.2, 3437.0], [81.3, 3437.0], [81.4, 3437.0], [81.5, 3437.0], [81.6, 3437.0], [81.7, 3437.0], [81.8, 3437.0], [81.9, 3437.0], [82.0, 3483.0], [82.1, 3483.0], [82.2, 3483.0], [82.3, 3483.0], [82.4, 3483.0], [82.5, 3483.0], [82.6, 3483.0], [82.7, 3483.0], [82.8, 3483.0], [82.9, 3483.0], [83.0, 3547.0], [83.1, 3547.0], [83.2, 3547.0], [83.3, 3547.0], [83.4, 3547.0], [83.5, 3547.0], [83.6, 3547.0], [83.7, 3547.0], [83.8, 3547.0], [83.9, 3547.0], [84.0, 3559.0], [84.1, 3559.0], [84.2, 3559.0], [84.3, 3559.0], [84.4, 3559.0], [84.5, 3559.0], [84.6, 3559.0], [84.7, 3559.0], [84.8, 3559.0], [84.9, 3559.0], [85.0, 3583.0], [85.1, 3583.0], [85.2, 3583.0], [85.3, 3583.0], [85.4, 3583.0], [85.5, 3583.0], [85.6, 3583.0], [85.7, 3583.0], [85.8, 3583.0], [85.9, 3583.0], [86.0, 3656.0], [86.1, 3656.0], [86.2, 3656.0], [86.3, 3656.0], [86.4, 3656.0], [86.5, 3656.0], [86.6, 3656.0], [86.7, 3656.0], [86.8, 3656.0], [86.9, 3656.0], [87.0, 3724.0], [87.1, 3724.0], [87.2, 3724.0], [87.3, 3724.0], [87.4, 3724.0], [87.5, 3724.0], [87.6, 3724.0], [87.7, 3724.0], [87.8, 3724.0], [87.9, 3724.0], [88.0, 3727.0], [88.1, 3727.0], [88.2, 3727.0], [88.3, 3727.0], [88.4, 3727.0], [88.5, 3727.0], [88.6, 3727.0], [88.7, 3727.0], [88.8, 3727.0], [88.9, 3727.0], [89.0, 3788.0], [89.1, 3788.0], [89.2, 3788.0], [89.3, 3788.0], [89.4, 3788.0], [89.5, 3788.0], [89.6, 3788.0], [89.7, 3788.0], [89.8, 3788.0], [89.9, 3788.0], [90.0, 3993.0], [90.1, 3993.0], [90.2, 3993.0], [90.3, 3993.0], [90.4, 3993.0], [90.5, 3993.0], [90.6, 3993.0], [90.7, 3993.0], [90.8, 3993.0], [90.9, 3993.0], [91.0, 4157.0], [91.1, 4157.0], [91.2, 4157.0], [91.3, 4157.0], [91.4, 4157.0], [91.5, 4157.0], [91.6, 4157.0], [91.7, 4157.0], [91.8, 4157.0], [91.9, 4157.0], [92.0, 4165.0], [92.1, 4165.0], [92.2, 4165.0], [92.3, 4165.0], [92.4, 4165.0], [92.5, 4165.0], [92.6, 4165.0], [92.7, 4165.0], [92.8, 4165.0], [92.9, 4165.0], [93.0, 4233.0], [93.1, 4233.0], [93.2, 4233.0], [93.3, 4233.0], [93.4, 4233.0], [93.5, 4233.0], [93.6, 4233.0], [93.7, 4233.0], [93.8, 4233.0], [93.9, 4233.0], [94.0, 4249.0], [94.1, 4249.0], [94.2, 4249.0], [94.3, 4249.0], [94.4, 4249.0], [94.5, 4249.0], [94.6, 4249.0], [94.7, 4249.0], [94.8, 4249.0], [94.9, 4249.0], [95.0, 4283.0], [95.1, 4283.0], [95.2, 4283.0], [95.3, 4283.0], [95.4, 4283.0], [95.5, 4283.0], [95.6, 4283.0], [95.7, 4283.0], [95.8, 4283.0], [95.9, 4283.0], [96.0, 4468.0], [96.1, 4468.0], [96.2, 4468.0], [96.3, 4468.0], [96.4, 4468.0], [96.5, 4468.0], [96.6, 4468.0], [96.7, 4468.0], [96.8, 4468.0], [96.9, 4468.0], [97.0, 4472.0], [97.1, 4472.0], [97.2, 4472.0], [97.3, 4472.0], [97.4, 4472.0], [97.5, 4472.0], [97.6, 4472.0], [97.7, 4472.0], [97.8, 4472.0], [97.9, 4472.0], [98.0, 4514.0], [98.1, 4514.0], [98.2, 4514.0], [98.3, 4514.0], [98.4, 4514.0], [98.5, 4514.0], [98.6, 4514.0], [98.7, 4514.0], [98.8, 4514.0], [98.9, 4514.0], [99.0, 4716.0], [99.1, 4716.0], [99.2, 4716.0], [99.3, 4716.0], [99.4, 4716.0], [99.5, 4716.0], [99.6, 4716.0], [99.7, 4716.0], [99.8, 4716.0], [99.9, 4716.0]], "isOverall": false, "label": "ecoverseUserIds", "isController": false}, {"data": [[0.0, 332.0], [0.1, 332.0], [0.2, 332.0], [0.3, 332.0], [0.4, 332.0], [0.5, 332.0], [0.6, 332.0], [0.7, 332.0], [0.8, 332.0], [0.9, 332.0], [1.0, 373.0], [1.1, 373.0], [1.2, 373.0], [1.3, 373.0], [1.4, 373.0], [1.5, 373.0], [1.6, 373.0], [1.7, 373.0], [1.8, 373.0], [1.9, 373.0], [2.0, 527.0], [2.1, 527.0], [2.2, 527.0], [2.3, 527.0], [2.4, 527.0], [2.5, 527.0], [2.6, 527.0], [2.7, 527.0], [2.8, 527.0], [2.9, 527.0], [3.0, 539.0], [3.1, 539.0], [3.2, 539.0], [3.3, 539.0], [3.4, 539.0], [3.5, 539.0], [3.6, 539.0], [3.7, 539.0], [3.8, 539.0], [3.9, 539.0], [4.0, 556.0], [4.1, 556.0], [4.2, 556.0], [4.3, 556.0], [4.4, 556.0], [4.5, 556.0], [4.6, 556.0], [4.7, 556.0], [4.8, 556.0], [4.9, 556.0], [5.0, 597.0], [5.1, 597.0], [5.2, 597.0], [5.3, 597.0], [5.4, 597.0], [5.5, 597.0], [5.6, 597.0], [5.7, 597.0], [5.8, 597.0], [5.9, 597.0], [6.0, 609.0], [6.1, 609.0], [6.2, 609.0], [6.3, 609.0], [6.4, 609.0], [6.5, 609.0], [6.6, 609.0], [6.7, 609.0], [6.8, 609.0], [6.9, 609.0], [7.0, 617.0], [7.1, 617.0], [7.2, 617.0], [7.3, 617.0], [7.4, 617.0], [7.5, 617.0], [7.6, 617.0], [7.7, 617.0], [7.8, 617.0], [7.9, 617.0], [8.0, 622.0], [8.1, 622.0], [8.2, 622.0], [8.3, 622.0], [8.4, 622.0], [8.5, 622.0], [8.6, 622.0], [8.7, 622.0], [8.8, 622.0], [8.9, 622.0], [9.0, 683.0], [9.1, 683.0], [9.2, 683.0], [9.3, 683.0], [9.4, 683.0], [9.5, 683.0], [9.6, 683.0], [9.7, 683.0], [9.8, 683.0], [9.9, 683.0], [10.0, 704.0], [10.1, 704.0], [10.2, 704.0], [10.3, 704.0], [10.4, 704.0], [10.5, 704.0], [10.6, 704.0], [10.7, 704.0], [10.8, 704.0], [10.9, 704.0], [11.0, 718.0], [11.1, 718.0], [11.2, 718.0], [11.3, 718.0], [11.4, 718.0], [11.5, 718.0], [11.6, 718.0], [11.7, 718.0], [11.8, 718.0], [11.9, 718.0], [12.0, 776.0], [12.1, 776.0], [12.2, 776.0], [12.3, 776.0], [12.4, 776.0], [12.5, 776.0], [12.6, 776.0], [12.7, 776.0], [12.8, 776.0], [12.9, 776.0], [13.0, 786.0], [13.1, 786.0], [13.2, 786.0], [13.3, 786.0], [13.4, 786.0], [13.5, 786.0], [13.6, 786.0], [13.7, 786.0], [13.8, 786.0], [13.9, 786.0], [14.0, 798.0], [14.1, 798.0], [14.2, 798.0], [14.3, 798.0], [14.4, 798.0], [14.5, 798.0], [14.6, 798.0], [14.7, 798.0], [14.8, 798.0], [14.9, 798.0], [15.0, 799.0], [15.1, 799.0], [15.2, 799.0], [15.3, 799.0], [15.4, 799.0], [15.5, 799.0], [15.6, 799.0], [15.7, 799.0], [15.8, 799.0], [15.9, 799.0], [16.0, 816.0], [16.1, 816.0], [16.2, 816.0], [16.3, 816.0], [16.4, 816.0], [16.5, 816.0], [16.6, 816.0], [16.7, 816.0], [16.8, 816.0], [16.9, 816.0], [17.0, 827.0], [17.1, 827.0], [17.2, 827.0], [17.3, 827.0], [17.4, 827.0], [17.5, 827.0], [17.6, 827.0], [17.7, 827.0], [17.8, 827.0], [17.9, 827.0], [18.0, 905.0], [18.1, 905.0], [18.2, 905.0], [18.3, 905.0], [18.4, 905.0], [18.5, 905.0], [18.6, 905.0], [18.7, 905.0], [18.8, 905.0], [18.9, 905.0], [19.0, 953.0], [19.1, 953.0], [19.2, 953.0], [19.3, 953.0], [19.4, 953.0], [19.5, 953.0], [19.6, 953.0], [19.7, 953.0], [19.8, 953.0], [19.9, 953.0], [20.0, 961.0], [20.1, 961.0], [20.2, 961.0], [20.3, 961.0], [20.4, 961.0], [20.5, 961.0], [20.6, 961.0], [20.7, 961.0], [20.8, 961.0], [20.9, 961.0], [21.0, 979.0], [21.1, 979.0], [21.2, 979.0], [21.3, 979.0], [21.4, 979.0], [21.5, 979.0], [21.6, 979.0], [21.7, 979.0], [21.8, 979.0], [21.9, 979.0], [22.0, 1050.0], [22.1, 1050.0], [22.2, 1050.0], [22.3, 1050.0], [22.4, 1050.0], [22.5, 1050.0], [22.6, 1050.0], [22.7, 1050.0], [22.8, 1050.0], [22.9, 1050.0], [23.0, 1137.0], [23.1, 1137.0], [23.2, 1137.0], [23.3, 1137.0], [23.4, 1137.0], [23.5, 1137.0], [23.6, 1137.0], [23.7, 1137.0], [23.8, 1137.0], [23.9, 1137.0], [24.0, 1145.0], [24.1, 1145.0], [24.2, 1145.0], [24.3, 1145.0], [24.4, 1145.0], [24.5, 1145.0], [24.6, 1145.0], [24.7, 1145.0], [24.8, 1145.0], [24.9, 1145.0], [25.0, 1180.0], [25.1, 1180.0], [25.2, 1180.0], [25.3, 1180.0], [25.4, 1180.0], [25.5, 1180.0], [25.6, 1180.0], [25.7, 1180.0], [25.8, 1180.0], [25.9, 1180.0], [26.0, 1183.0], [26.1, 1183.0], [26.2, 1183.0], [26.3, 1183.0], [26.4, 1183.0], [26.5, 1183.0], [26.6, 1183.0], [26.7, 1183.0], [26.8, 1183.0], [26.9, 1183.0], [27.0, 1273.0], [27.1, 1273.0], [27.2, 1273.0], [27.3, 1273.0], [27.4, 1273.0], [27.5, 1273.0], [27.6, 1273.0], [27.7, 1273.0], [27.8, 1273.0], [27.9, 1273.0], [28.0, 1301.0], [28.1, 1301.0], [28.2, 1301.0], [28.3, 1301.0], [28.4, 1301.0], [28.5, 1301.0], [28.6, 1301.0], [28.7, 1301.0], [28.8, 1301.0], [28.9, 1301.0], [29.0, 1320.0], [29.1, 1320.0], [29.2, 1320.0], [29.3, 1320.0], [29.4, 1320.0], [29.5, 1320.0], [29.6, 1320.0], [29.7, 1320.0], [29.8, 1320.0], [29.9, 1320.0], [30.0, 1377.0], [30.1, 1377.0], [30.2, 1377.0], [30.3, 1377.0], [30.4, 1377.0], [30.5, 1377.0], [30.6, 1377.0], [30.7, 1377.0], [30.8, 1377.0], [30.9, 1377.0], [31.0, 1388.0], [31.1, 1388.0], [31.2, 1388.0], [31.3, 1388.0], [31.4, 1388.0], [31.5, 1388.0], [31.6, 1388.0], [31.7, 1388.0], [31.8, 1388.0], [31.9, 1388.0], [32.0, 1424.0], [32.1, 1424.0], [32.2, 1424.0], [32.3, 1424.0], [32.4, 1424.0], [32.5, 1424.0], [32.6, 1424.0], [32.7, 1424.0], [32.8, 1424.0], [32.9, 1424.0], [33.0, 1432.0], [33.1, 1432.0], [33.2, 1432.0], [33.3, 1432.0], [33.4, 1432.0], [33.5, 1432.0], [33.6, 1432.0], [33.7, 1432.0], [33.8, 1432.0], [33.9, 1432.0], [34.0, 1480.0], [34.1, 1480.0], [34.2, 1480.0], [34.3, 1480.0], [34.4, 1480.0], [34.5, 1480.0], [34.6, 1480.0], [34.7, 1480.0], [34.8, 1480.0], [34.9, 1480.0], [35.0, 1732.0], [35.1, 1732.0], [35.2, 1732.0], [35.3, 1732.0], [35.4, 1732.0], [35.5, 1732.0], [35.6, 1732.0], [35.7, 1732.0], [35.8, 1732.0], [35.9, 1732.0], [36.0, 1924.0], [36.1, 1924.0], [36.2, 1924.0], [36.3, 1924.0], [36.4, 1924.0], [36.5, 1924.0], [36.6, 1924.0], [36.7, 1924.0], [36.8, 1924.0], [36.9, 1924.0], [37.0, 2038.0], [37.1, 2038.0], [37.2, 2038.0], [37.3, 2038.0], [37.4, 2038.0], [37.5, 2038.0], [37.6, 2038.0], [37.7, 2038.0], [37.8, 2038.0], [37.9, 2038.0], [38.0, 2101.0], [38.1, 2101.0], [38.2, 2101.0], [38.3, 2101.0], [38.4, 2101.0], [38.5, 2101.0], [38.6, 2101.0], [38.7, 2101.0], [38.8, 2101.0], [38.9, 2101.0], [39.0, 2177.0], [39.1, 2177.0], [39.2, 2177.0], [39.3, 2177.0], [39.4, 2177.0], [39.5, 2177.0], [39.6, 2177.0], [39.7, 2177.0], [39.8, 2177.0], [39.9, 2177.0], [40.0, 2181.0], [40.1, 2181.0], [40.2, 2181.0], [40.3, 2181.0], [40.4, 2181.0], [40.5, 2181.0], [40.6, 2181.0], [40.7, 2181.0], [40.8, 2181.0], [40.9, 2181.0], [41.0, 2235.0], [41.1, 2235.0], [41.2, 2235.0], [41.3, 2235.0], [41.4, 2235.0], [41.5, 2235.0], [41.6, 2235.0], [41.7, 2235.0], [41.8, 2235.0], [41.9, 2235.0], [42.0, 2240.0], [42.1, 2240.0], [42.2, 2240.0], [42.3, 2240.0], [42.4, 2240.0], [42.5, 2240.0], [42.6, 2240.0], [42.7, 2240.0], [42.8, 2240.0], [42.9, 2240.0], [43.0, 2279.0], [43.1, 2279.0], [43.2, 2279.0], [43.3, 2279.0], [43.4, 2279.0], [43.5, 2279.0], [43.6, 2279.0], [43.7, 2279.0], [43.8, 2279.0], [43.9, 2279.0], [44.0, 2432.0], [44.1, 2432.0], [44.2, 2432.0], [44.3, 2432.0], [44.4, 2432.0], [44.5, 2432.0], [44.6, 2432.0], [44.7, 2432.0], [44.8, 2432.0], [44.9, 2432.0], [45.0, 2480.0], [45.1, 2480.0], [45.2, 2480.0], [45.3, 2480.0], [45.4, 2480.0], [45.5, 2480.0], [45.6, 2480.0], [45.7, 2480.0], [45.8, 2480.0], [45.9, 2480.0], [46.0, 2578.0], [46.1, 2578.0], [46.2, 2578.0], [46.3, 2578.0], [46.4, 2578.0], [46.5, 2578.0], [46.6, 2578.0], [46.7, 2578.0], [46.8, 2578.0], [46.9, 2578.0], [47.0, 2619.0], [47.1, 2619.0], [47.2, 2619.0], [47.3, 2619.0], [47.4, 2619.0], [47.5, 2619.0], [47.6, 2619.0], [47.7, 2619.0], [47.8, 2619.0], [47.9, 2619.0], [48.0, 2626.0], [48.1, 2626.0], [48.2, 2626.0], [48.3, 2626.0], [48.4, 2626.0], [48.5, 2626.0], [48.6, 2626.0], [48.7, 2626.0], [48.8, 2626.0], [48.9, 2626.0], [49.0, 2681.0], [49.1, 2681.0], [49.2, 2681.0], [49.3, 2681.0], [49.4, 2681.0], [49.5, 2681.0], [49.6, 2681.0], [49.7, 2681.0], [49.8, 2681.0], [49.9, 2681.0], [50.0, 2723.0], [50.1, 2723.0], [50.2, 2723.0], [50.3, 2723.0], [50.4, 2723.0], [50.5, 2723.0], [50.6, 2723.0], [50.7, 2723.0], [50.8, 2723.0], [50.9, 2723.0], [51.0, 2757.0], [51.1, 2757.0], [51.2, 2757.0], [51.3, 2757.0], [51.4, 2757.0], [51.5, 2757.0], [51.6, 2757.0], [51.7, 2757.0], [51.8, 2757.0], [51.9, 2757.0], [52.0, 2768.0], [52.1, 2768.0], [52.2, 2768.0], [52.3, 2768.0], [52.4, 2768.0], [52.5, 2768.0], [52.6, 2768.0], [52.7, 2768.0], [52.8, 2768.0], [52.9, 2768.0], [53.0, 2780.0], [53.1, 2780.0], [53.2, 2780.0], [53.3, 2780.0], [53.4, 2780.0], [53.5, 2780.0], [53.6, 2780.0], [53.7, 2780.0], [53.8, 2780.0], [53.9, 2780.0], [54.0, 2807.0], [54.1, 2807.0], [54.2, 2807.0], [54.3, 2807.0], [54.4, 2807.0], [54.5, 2807.0], [54.6, 2807.0], [54.7, 2807.0], [54.8, 2807.0], [54.9, 2807.0], [55.0, 2833.0], [55.1, 2833.0], [55.2, 2833.0], [55.3, 2833.0], [55.4, 2833.0], [55.5, 2833.0], [55.6, 2833.0], [55.7, 2833.0], [55.8, 2833.0], [55.9, 2833.0], [56.0, 2866.0], [56.1, 2866.0], [56.2, 2866.0], [56.3, 2866.0], [56.4, 2866.0], [56.5, 2866.0], [56.6, 2866.0], [56.7, 2866.0], [56.8, 2866.0], [56.9, 2866.0], [57.0, 2899.0], [57.1, 2899.0], [57.2, 2899.0], [57.3, 2899.0], [57.4, 2899.0], [57.5, 2899.0], [57.6, 2899.0], [57.7, 2899.0], [57.8, 2899.0], [57.9, 2899.0], [58.0, 2923.0], [58.1, 2923.0], [58.2, 2923.0], [58.3, 2923.0], [58.4, 2923.0], [58.5, 2923.0], [58.6, 2923.0], [58.7, 2923.0], [58.8, 2923.0], [58.9, 2923.0], [59.0, 2982.0], [59.1, 2982.0], [59.2, 2982.0], [59.3, 2982.0], [59.4, 2982.0], [59.5, 2982.0], [59.6, 2982.0], [59.7, 2982.0], [59.8, 2982.0], [59.9, 2982.0], [60.0, 3022.0], [60.1, 3022.0], [60.2, 3022.0], [60.3, 3022.0], [60.4, 3022.0], [60.5, 3022.0], [60.6, 3022.0], [60.7, 3022.0], [60.8, 3022.0], [60.9, 3022.0], [61.0, 3097.0], [61.1, 3097.0], [61.2, 3097.0], [61.3, 3097.0], [61.4, 3097.0], [61.5, 3097.0], [61.6, 3097.0], [61.7, 3097.0], [61.8, 3097.0], [61.9, 3097.0], [62.0, 3117.0], [62.1, 3117.0], [62.2, 3117.0], [62.3, 3117.0], [62.4, 3117.0], [62.5, 3117.0], [62.6, 3117.0], [62.7, 3117.0], [62.8, 3117.0], [62.9, 3117.0], [63.0, 3145.0], [63.1, 3145.0], [63.2, 3145.0], [63.3, 3145.0], [63.4, 3145.0], [63.5, 3145.0], [63.6, 3145.0], [63.7, 3145.0], [63.8, 3145.0], [63.9, 3145.0], [64.0, 3159.0], [64.1, 3159.0], [64.2, 3159.0], [64.3, 3159.0], [64.4, 3159.0], [64.5, 3159.0], [64.6, 3159.0], [64.7, 3159.0], [64.8, 3159.0], [64.9, 3159.0], [65.0, 3178.0], [65.1, 3178.0], [65.2, 3178.0], [65.3, 3178.0], [65.4, 3178.0], [65.5, 3178.0], [65.6, 3178.0], [65.7, 3178.0], [65.8, 3178.0], [65.9, 3178.0], [66.0, 3181.0], [66.1, 3181.0], [66.2, 3181.0], [66.3, 3181.0], [66.4, 3181.0], [66.5, 3181.0], [66.6, 3181.0], [66.7, 3181.0], [66.8, 3181.0], [66.9, 3181.0], [67.0, 3236.0], [67.1, 3236.0], [67.2, 3236.0], [67.3, 3236.0], [67.4, 3236.0], [67.5, 3236.0], [67.6, 3236.0], [67.7, 3236.0], [67.8, 3236.0], [67.9, 3236.0], [68.0, 3243.0], [68.1, 3243.0], [68.2, 3243.0], [68.3, 3243.0], [68.4, 3243.0], [68.5, 3243.0], [68.6, 3243.0], [68.7, 3243.0], [68.8, 3243.0], [68.9, 3243.0], [69.0, 3306.0], [69.1, 3306.0], [69.2, 3306.0], [69.3, 3306.0], [69.4, 3306.0], [69.5, 3306.0], [69.6, 3306.0], [69.7, 3306.0], [69.8, 3306.0], [69.9, 3306.0], [70.0, 3344.0], [70.1, 3344.0], [70.2, 3344.0], [70.3, 3344.0], [70.4, 3344.0], [70.5, 3344.0], [70.6, 3344.0], [70.7, 3344.0], [70.8, 3344.0], [70.9, 3344.0], [71.0, 3359.0], [71.1, 3359.0], [71.2, 3359.0], [71.3, 3359.0], [71.4, 3359.0], [71.5, 3359.0], [71.6, 3359.0], [71.7, 3359.0], [71.8, 3359.0], [71.9, 3359.0], [72.0, 3462.0], [72.1, 3462.0], [72.2, 3462.0], [72.3, 3462.0], [72.4, 3462.0], [72.5, 3462.0], [72.6, 3462.0], [72.7, 3462.0], [72.8, 3462.0], [72.9, 3462.0], [73.0, 3481.0], [73.1, 3481.0], [73.2, 3481.0], [73.3, 3481.0], [73.4, 3481.0], [73.5, 3481.0], [73.6, 3481.0], [73.7, 3481.0], [73.8, 3481.0], [73.9, 3481.0], [74.0, 3499.0], [74.1, 3499.0], [74.2, 3499.0], [74.3, 3499.0], [74.4, 3499.0], [74.5, 3499.0], [74.6, 3499.0], [74.7, 3499.0], [74.8, 3499.0], [74.9, 3499.0], [75.0, 3529.0], [75.1, 3529.0], [75.2, 3529.0], [75.3, 3529.0], [75.4, 3529.0], [75.5, 3529.0], [75.6, 3529.0], [75.7, 3529.0], [75.8, 3529.0], [75.9, 3529.0], [76.0, 3554.0], [76.1, 3554.0], [76.2, 3554.0], [76.3, 3554.0], [76.4, 3554.0], [76.5, 3554.0], [76.6, 3554.0], [76.7, 3554.0], [76.8, 3554.0], [76.9, 3554.0], [77.0, 3565.0], [77.1, 3565.0], [77.2, 3565.0], [77.3, 3565.0], [77.4, 3565.0], [77.5, 3565.0], [77.6, 3565.0], [77.7, 3565.0], [77.8, 3565.0], [77.9, 3565.0], [78.0, 3585.0], [78.1, 3585.0], [78.2, 3585.0], [78.3, 3585.0], [78.4, 3585.0], [78.5, 3585.0], [78.6, 3585.0], [78.7, 3585.0], [78.8, 3585.0], [78.9, 3585.0], [79.0, 3648.0], [79.1, 3648.0], [79.2, 3648.0], [79.3, 3648.0], [79.4, 3648.0], [79.5, 3648.0], [79.6, 3648.0], [79.7, 3648.0], [79.8, 3648.0], [79.9, 3648.0], [80.0, 3662.0], [80.1, 3662.0], [80.2, 3662.0], [80.3, 3662.0], [80.4, 3662.0], [80.5, 3662.0], [80.6, 3662.0], [80.7, 3662.0], [80.8, 3662.0], [80.9, 3662.0], [81.0, 3673.0], [81.1, 3673.0], [81.2, 3673.0], [81.3, 3673.0], [81.4, 3673.0], [81.5, 3673.0], [81.6, 3673.0], [81.7, 3673.0], [81.8, 3673.0], [81.9, 3673.0], [82.0, 3774.0], [82.1, 3774.0], [82.2, 3774.0], [82.3, 3774.0], [82.4, 3774.0], [82.5, 3774.0], [82.6, 3774.0], [82.7, 3774.0], [82.8, 3774.0], [82.9, 3774.0], [83.0, 3805.0], [83.1, 3805.0], [83.2, 3805.0], [83.3, 3805.0], [83.4, 3805.0], [83.5, 3805.0], [83.6, 3805.0], [83.7, 3805.0], [83.8, 3805.0], [83.9, 3805.0], [84.0, 3806.0], [84.1, 3806.0], [84.2, 3806.0], [84.3, 3806.0], [84.4, 3806.0], [84.5, 3806.0], [84.6, 3806.0], [84.7, 3806.0], [84.8, 3806.0], [84.9, 3806.0], [85.0, 3812.0], [85.1, 3812.0], [85.2, 3812.0], [85.3, 3812.0], [85.4, 3812.0], [85.5, 3812.0], [85.6, 3812.0], [85.7, 3812.0], [85.8, 3812.0], [85.9, 3812.0], [86.0, 3829.0], [86.1, 3829.0], [86.2, 3829.0], [86.3, 3829.0], [86.4, 3829.0], [86.5, 3829.0], [86.6, 3829.0], [86.7, 3829.0], [86.8, 3829.0], [86.9, 3829.0], [87.0, 3846.0], [87.1, 3846.0], [87.2, 3846.0], [87.3, 3846.0], [87.4, 3846.0], [87.5, 3846.0], [87.6, 3846.0], [87.7, 3846.0], [87.8, 3846.0], [87.9, 3846.0], [88.0, 3871.0], [88.1, 3871.0], [88.2, 3871.0], [88.3, 3871.0], [88.4, 3871.0], [88.5, 3871.0], [88.6, 3871.0], [88.7, 3871.0], [88.8, 3871.0], [88.9, 3871.0], [89.0, 3876.0], [89.1, 3876.0], [89.2, 3876.0], [89.3, 3876.0], [89.4, 3876.0], [89.5, 3876.0], [89.6, 3876.0], [89.7, 3876.0], [89.8, 3876.0], [89.9, 3876.0], [90.0, 3940.0], [90.1, 3940.0], [90.2, 3940.0], [90.3, 3940.0], [90.4, 3940.0], [90.5, 3940.0], [90.6, 3940.0], [90.7, 3940.0], [90.8, 3940.0], [90.9, 3940.0], [91.0, 3959.0], [91.1, 3959.0], [91.2, 3959.0], [91.3, 3959.0], [91.4, 3959.0], [91.5, 3959.0], [91.6, 3959.0], [91.7, 3959.0], [91.8, 3959.0], [91.9, 3959.0], [92.0, 3994.0], [92.1, 3994.0], [92.2, 3994.0], [92.3, 3994.0], [92.4, 3994.0], [92.5, 3994.0], [92.6, 3994.0], [92.7, 3994.0], [92.8, 3994.0], [92.9, 3994.0], [93.0, 4089.0], [93.1, 4089.0], [93.2, 4089.0], [93.3, 4089.0], [93.4, 4089.0], [93.5, 4089.0], [93.6, 4089.0], [93.7, 4089.0], [93.8, 4089.0], [93.9, 4089.0], [94.0, 4102.0], [94.1, 4102.0], [94.2, 4102.0], [94.3, 4102.0], [94.4, 4102.0], [94.5, 4102.0], [94.6, 4102.0], [94.7, 4102.0], [94.8, 4102.0], [94.9, 4102.0], [95.0, 4116.0], [95.1, 4116.0], [95.2, 4116.0], [95.3, 4116.0], [95.4, 4116.0], [95.5, 4116.0], [95.6, 4116.0], [95.7, 4116.0], [95.8, 4116.0], [95.9, 4116.0], [96.0, 4116.0], [96.1, 4116.0], [96.2, 4116.0], [96.3, 4116.0], [96.4, 4116.0], [96.5, 4116.0], [96.6, 4116.0], [96.7, 4116.0], [96.8, 4116.0], [96.9, 4116.0], [97.0, 4197.0], [97.1, 4197.0], [97.2, 4197.0], [97.3, 4197.0], [97.4, 4197.0], [97.5, 4197.0], [97.6, 4197.0], [97.7, 4197.0], [97.8, 4197.0], [97.9, 4197.0], [98.0, 4274.0], [98.1, 4274.0], [98.2, 4274.0], [98.3, 4274.0], [98.4, 4274.0], [98.5, 4274.0], [98.6, 4274.0], [98.7, 4274.0], [98.8, 4274.0], [98.9, 4274.0], [99.0, 4325.0], [99.1, 4325.0], [99.2, 4325.0], [99.3, 4325.0], [99.4, 4325.0], [99.5, 4325.0], [99.6, 4325.0], [99.7, 4325.0], [99.8, 4325.0], [99.9, 4325.0]], "isOverall": false, "label": "userAvatars", "isController": false}, {"data": [[0.0, 282.0], [0.1, 282.0], [0.2, 282.0], [0.3, 282.0], [0.4, 282.0], [0.5, 282.0], [0.6, 282.0], [0.7, 282.0], [0.8, 282.0], [0.9, 282.0], [1.0, 306.0], [1.1, 306.0], [1.2, 306.0], [1.3, 306.0], [1.4, 306.0], [1.5, 306.0], [1.6, 306.0], [1.7, 306.0], [1.8, 306.0], [1.9, 306.0], [2.0, 316.0], [2.1, 316.0], [2.2, 316.0], [2.3, 316.0], [2.4, 316.0], [2.5, 316.0], [2.6, 316.0], [2.7, 316.0], [2.8, 316.0], [2.9, 316.0], [3.0, 330.0], [3.1, 330.0], [3.2, 330.0], [3.3, 330.0], [3.4, 330.0], [3.5, 330.0], [3.6, 330.0], [3.7, 330.0], [3.8, 330.0], [3.9, 330.0], [4.0, 532.0], [4.1, 532.0], [4.2, 532.0], [4.3, 532.0], [4.4, 532.0], [4.5, 532.0], [4.6, 532.0], [4.7, 532.0], [4.8, 532.0], [4.9, 532.0], [5.0, 937.0], [5.1, 937.0], [5.2, 937.0], [5.3, 937.0], [5.4, 937.0], [5.5, 937.0], [5.6, 937.0], [5.7, 937.0], [5.8, 937.0], [5.9, 937.0], [6.0, 1531.0], [6.1, 1531.0], [6.2, 1531.0], [6.3, 1531.0], [6.4, 1531.0], [6.5, 1531.0], [6.6, 1531.0], [6.7, 1531.0], [6.8, 1531.0], [6.9, 1531.0], [7.0, 1602.0], [7.1, 1602.0], [7.2, 1602.0], [7.3, 1602.0], [7.4, 1602.0], [7.5, 1602.0], [7.6, 1602.0], [7.7, 1602.0], [7.8, 1602.0], [7.9, 1602.0], [8.0, 1731.0], [8.1, 1731.0], [8.2, 1731.0], [8.3, 1731.0], [8.4, 1731.0], [8.5, 1731.0], [8.6, 1731.0], [8.7, 1731.0], [8.8, 1731.0], [8.9, 1731.0], [9.0, 1738.0], [9.1, 1738.0], [9.2, 1738.0], [9.3, 1738.0], [9.4, 1738.0], [9.5, 1738.0], [9.6, 1738.0], [9.7, 1738.0], [9.8, 1738.0], [9.9, 1738.0], [10.0, 1774.0], [10.1, 1774.0], [10.2, 1774.0], [10.3, 1774.0], [10.4, 1774.0], [10.5, 1774.0], [10.6, 1774.0], [10.7, 1774.0], [10.8, 1774.0], [10.9, 1774.0], [11.0, 1803.0], [11.1, 1803.0], [11.2, 1803.0], [11.3, 1803.0], [11.4, 1803.0], [11.5, 1803.0], [11.6, 1803.0], [11.7, 1803.0], [11.8, 1803.0], [11.9, 1803.0], [12.0, 1899.0], [12.1, 1899.0], [12.2, 1899.0], [12.3, 1899.0], [12.4, 1899.0], [12.5, 1899.0], [12.6, 1899.0], [12.7, 1899.0], [12.8, 1899.0], [12.9, 1899.0], [13.0, 2117.0], [13.1, 2117.0], [13.2, 2117.0], [13.3, 2117.0], [13.4, 2117.0], [13.5, 2117.0], [13.6, 2117.0], [13.7, 2117.0], [13.8, 2117.0], [13.9, 2117.0], [14.0, 2125.0], [14.1, 2125.0], [14.2, 2125.0], [14.3, 2125.0], [14.4, 2125.0], [14.5, 2125.0], [14.6, 2125.0], [14.7, 2125.0], [14.8, 2125.0], [14.9, 2125.0], [15.0, 2213.0], [15.1, 2213.0], [15.2, 2213.0], [15.3, 2213.0], [15.4, 2213.0], [15.5, 2213.0], [15.6, 2213.0], [15.7, 2213.0], [15.8, 2213.0], [15.9, 2213.0], [16.0, 2289.0], [16.1, 2289.0], [16.2, 2289.0], [16.3, 2289.0], [16.4, 2289.0], [16.5, 2289.0], [16.6, 2289.0], [16.7, 2289.0], [16.8, 2289.0], [16.9, 2289.0], [17.0, 2346.0], [17.1, 2346.0], [17.2, 2346.0], [17.3, 2346.0], [17.4, 2346.0], [17.5, 2346.0], [17.6, 2346.0], [17.7, 2346.0], [17.8, 2346.0], [17.9, 2346.0], [18.0, 2457.0], [18.1, 2457.0], [18.2, 2457.0], [18.3, 2457.0], [18.4, 2457.0], [18.5, 2457.0], [18.6, 2457.0], [18.7, 2457.0], [18.8, 2457.0], [18.9, 2457.0], [19.0, 2466.0], [19.1, 2466.0], [19.2, 2466.0], [19.3, 2466.0], [19.4, 2466.0], [19.5, 2466.0], [19.6, 2466.0], [19.7, 2466.0], [19.8, 2466.0], [19.9, 2466.0], [20.0, 2474.0], [20.1, 2474.0], [20.2, 2474.0], [20.3, 2474.0], [20.4, 2474.0], [20.5, 2474.0], [20.6, 2474.0], [20.7, 2474.0], [20.8, 2474.0], [20.9, 2474.0], [21.0, 2505.0], [21.1, 2505.0], [21.2, 2505.0], [21.3, 2505.0], [21.4, 2505.0], [21.5, 2505.0], [21.6, 2505.0], [21.7, 2505.0], [21.8, 2505.0], [21.9, 2505.0], [22.0, 2735.0], [22.1, 2735.0], [22.2, 2735.0], [22.3, 2735.0], [22.4, 2735.0], [22.5, 2735.0], [22.6, 2735.0], [22.7, 2735.0], [22.8, 2735.0], [22.9, 2735.0], [23.0, 2760.0], [23.1, 2760.0], [23.2, 2760.0], [23.3, 2760.0], [23.4, 2760.0], [23.5, 2760.0], [23.6, 2760.0], [23.7, 2760.0], [23.8, 2760.0], [23.9, 2760.0], [24.0, 2839.0], [24.1, 2839.0], [24.2, 2839.0], [24.3, 2839.0], [24.4, 2839.0], [24.5, 2839.0], [24.6, 2839.0], [24.7, 2839.0], [24.8, 2839.0], [24.9, 2839.0], [25.0, 2913.0], [25.1, 2913.0], [25.2, 2913.0], [25.3, 2913.0], [25.4, 2913.0], [25.5, 2913.0], [25.6, 2913.0], [25.7, 2913.0], [25.8, 2913.0], [25.9, 2913.0], [26.0, 2924.0], [26.1, 2924.0], [26.2, 2924.0], [26.3, 2924.0], [26.4, 2924.0], [26.5, 2924.0], [26.6, 2924.0], [26.7, 2924.0], [26.8, 2924.0], [26.9, 2924.0], [27.0, 2991.0], [27.1, 2991.0], [27.2, 2991.0], [27.3, 2991.0], [27.4, 2991.0], [27.5, 2991.0], [27.6, 2991.0], [27.7, 2991.0], [27.8, 2991.0], [27.9, 2991.0], [28.0, 3242.0], [28.1, 3242.0], [28.2, 3242.0], [28.3, 3242.0], [28.4, 3242.0], [28.5, 3242.0], [28.6, 3242.0], [28.7, 3242.0], [28.8, 3242.0], [28.9, 3242.0], [29.0, 3248.0], [29.1, 3248.0], [29.2, 3248.0], [29.3, 3248.0], [29.4, 3248.0], [29.5, 3248.0], [29.6, 3248.0], [29.7, 3248.0], [29.8, 3248.0], [29.9, 3248.0], [30.0, 3301.0], [30.1, 3301.0], [30.2, 3301.0], [30.3, 3301.0], [30.4, 3301.0], [30.5, 3301.0], [30.6, 3301.0], [30.7, 3301.0], [30.8, 3301.0], [30.9, 3301.0], [31.0, 3477.0], [31.1, 3477.0], [31.2, 3477.0], [31.3, 3477.0], [31.4, 3477.0], [31.5, 3477.0], [31.6, 3477.0], [31.7, 3477.0], [31.8, 3477.0], [31.9, 3477.0], [32.0, 3570.0], [32.1, 3570.0], [32.2, 3570.0], [32.3, 3570.0], [32.4, 3570.0], [32.5, 3570.0], [32.6, 3570.0], [32.7, 3570.0], [32.8, 3570.0], [32.9, 3570.0], [33.0, 3786.0], [33.1, 3786.0], [33.2, 3786.0], [33.3, 3786.0], [33.4, 3786.0], [33.5, 3786.0], [33.6, 3786.0], [33.7, 3786.0], [33.8, 3786.0], [33.9, 3786.0], [34.0, 13200.0], [34.1, 13200.0], [34.2, 13200.0], [34.3, 13200.0], [34.4, 13200.0], [34.5, 13200.0], [34.6, 13200.0], [34.7, 13200.0], [34.8, 13200.0], [34.9, 13200.0], [35.0, 13334.0], [35.1, 13334.0], [35.2, 13334.0], [35.3, 13334.0], [35.4, 13334.0], [35.5, 13334.0], [35.6, 13334.0], [35.7, 13334.0], [35.8, 13334.0], [35.9, 13334.0], [36.0, 13473.0], [36.1, 13473.0], [36.2, 13473.0], [36.3, 13473.0], [36.4, 13473.0], [36.5, 13473.0], [36.6, 13473.0], [36.7, 13473.0], [36.8, 13473.0], [36.9, 13473.0], [37.0, 13779.0], [37.1, 13779.0], [37.2, 13779.0], [37.3, 13779.0], [37.4, 13779.0], [37.5, 13779.0], [37.6, 13779.0], [37.7, 13779.0], [37.8, 13779.0], [37.9, 13779.0], [38.0, 13843.0], [38.1, 13843.0], [38.2, 13843.0], [38.3, 13843.0], [38.4, 13843.0], [38.5, 13843.0], [38.6, 13843.0], [38.7, 13843.0], [38.8, 13843.0], [38.9, 13843.0], [39.0, 13852.0], [39.1, 13852.0], [39.2, 13852.0], [39.3, 13852.0], [39.4, 13852.0], [39.5, 13852.0], [39.6, 13852.0], [39.7, 13852.0], [39.8, 13852.0], [39.9, 13852.0], [40.0, 13881.0], [40.1, 13881.0], [40.2, 13881.0], [40.3, 13881.0], [40.4, 13881.0], [40.5, 13881.0], [40.6, 13881.0], [40.7, 13881.0], [40.8, 13881.0], [40.9, 13881.0], [41.0, 14284.0], [41.1, 14284.0], [41.2, 14284.0], [41.3, 14284.0], [41.4, 14284.0], [41.5, 14284.0], [41.6, 14284.0], [41.7, 14284.0], [41.8, 14284.0], [41.9, 14284.0], [42.0, 14463.0], [42.1, 14463.0], [42.2, 14463.0], [42.3, 14463.0], [42.4, 14463.0], [42.5, 14463.0], [42.6, 14463.0], [42.7, 14463.0], [42.8, 14463.0], [42.9, 14463.0], [43.0, 14530.0], [43.1, 14530.0], [43.2, 14530.0], [43.3, 14530.0], [43.4, 14530.0], [43.5, 14530.0], [43.6, 14530.0], [43.7, 14530.0], [43.8, 14530.0], [43.9, 14530.0], [44.0, 14581.0], [44.1, 14581.0], [44.2, 14581.0], [44.3, 14581.0], [44.4, 14581.0], [44.5, 14581.0], [44.6, 14581.0], [44.7, 14581.0], [44.8, 14581.0], [44.9, 14581.0], [45.0, 14585.0], [45.1, 14585.0], [45.2, 14585.0], [45.3, 14585.0], [45.4, 14585.0], [45.5, 14585.0], [45.6, 14585.0], [45.7, 14585.0], [45.8, 14585.0], [45.9, 14585.0], [46.0, 14635.0], [46.1, 14635.0], [46.2, 14635.0], [46.3, 14635.0], [46.4, 14635.0], [46.5, 14635.0], [46.6, 14635.0], [46.7, 14635.0], [46.8, 14635.0], [46.9, 14635.0], [47.0, 14655.0], [47.1, 14655.0], [47.2, 14655.0], [47.3, 14655.0], [47.4, 14655.0], [47.5, 14655.0], [47.6, 14655.0], [47.7, 14655.0], [47.8, 14655.0], [47.9, 14655.0], [48.0, 14699.0], [48.1, 14699.0], [48.2, 14699.0], [48.3, 14699.0], [48.4, 14699.0], [48.5, 14699.0], [48.6, 14699.0], [48.7, 14699.0], [48.8, 14699.0], [48.9, 14699.0], [49.0, 14720.0], [49.1, 14720.0], [49.2, 14720.0], [49.3, 14720.0], [49.4, 14720.0], [49.5, 14720.0], [49.6, 14720.0], [49.7, 14720.0], [49.8, 14720.0], [49.9, 14720.0], [50.0, 14791.0], [50.1, 14791.0], [50.2, 14791.0], [50.3, 14791.0], [50.4, 14791.0], [50.5, 14791.0], [50.6, 14791.0], [50.7, 14791.0], [50.8, 14791.0], [50.9, 14791.0], [51.0, 14866.0], [51.1, 14866.0], [51.2, 14866.0], [51.3, 14866.0], [51.4, 14866.0], [51.5, 14866.0], [51.6, 14866.0], [51.7, 14866.0], [51.8, 14866.0], [51.9, 14866.0], [52.0, 14895.0], [52.1, 14895.0], [52.2, 14895.0], [52.3, 14895.0], [52.4, 14895.0], [52.5, 14895.0], [52.6, 14895.0], [52.7, 14895.0], [52.8, 14895.0], [52.9, 14895.0], [53.0, 14979.0], [53.1, 14979.0], [53.2, 14979.0], [53.3, 14979.0], [53.4, 14979.0], [53.5, 14979.0], [53.6, 14979.0], [53.7, 14979.0], [53.8, 14979.0], [53.9, 14979.0], [54.0, 15175.0], [54.1, 15175.0], [54.2, 15175.0], [54.3, 15175.0], [54.4, 15175.0], [54.5, 15175.0], [54.6, 15175.0], [54.7, 15175.0], [54.8, 15175.0], [54.9, 15175.0], [55.0, 15176.0], [55.1, 15176.0], [55.2, 15176.0], [55.3, 15176.0], [55.4, 15176.0], [55.5, 15176.0], [55.6, 15176.0], [55.7, 15176.0], [55.8, 15176.0], [55.9, 15176.0], [56.0, 15195.0], [56.1, 15195.0], [56.2, 15195.0], [56.3, 15195.0], [56.4, 15195.0], [56.5, 15195.0], [56.6, 15195.0], [56.7, 15195.0], [56.8, 15195.0], [56.9, 15195.0], [57.0, 15207.0], [57.1, 15207.0], [57.2, 15207.0], [57.3, 15207.0], [57.4, 15207.0], [57.5, 15207.0], [57.6, 15207.0], [57.7, 15207.0], [57.8, 15207.0], [57.9, 15207.0], [58.0, 15249.0], [58.1, 15249.0], [58.2, 15249.0], [58.3, 15249.0], [58.4, 15249.0], [58.5, 15249.0], [58.6, 15249.0], [58.7, 15249.0], [58.8, 15249.0], [58.9, 15249.0], [59.0, 15330.0], [59.1, 15330.0], [59.2, 15330.0], [59.3, 15330.0], [59.4, 15330.0], [59.5, 15330.0], [59.6, 15330.0], [59.7, 15330.0], [59.8, 15330.0], [59.9, 15330.0], [60.0, 15434.0], [60.1, 15434.0], [60.2, 15434.0], [60.3, 15434.0], [60.4, 15434.0], [60.5, 15434.0], [60.6, 15434.0], [60.7, 15434.0], [60.8, 15434.0], [60.9, 15434.0], [61.0, 15458.0], [61.1, 15458.0], [61.2, 15458.0], [61.3, 15458.0], [61.4, 15458.0], [61.5, 15458.0], [61.6, 15458.0], [61.7, 15458.0], [61.8, 15458.0], [61.9, 15458.0], [62.0, 15523.0], [62.1, 15523.0], [62.2, 15523.0], [62.3, 15523.0], [62.4, 15523.0], [62.5, 15523.0], [62.6, 15523.0], [62.7, 15523.0], [62.8, 15523.0], [62.9, 15523.0], [63.0, 15561.0], [63.1, 15561.0], [63.2, 15561.0], [63.3, 15561.0], [63.4, 15561.0], [63.5, 15561.0], [63.6, 15561.0], [63.7, 15561.0], [63.8, 15561.0], [63.9, 15561.0], [64.0, 15587.0], [64.1, 15587.0], [64.2, 15587.0], [64.3, 15587.0], [64.4, 15587.0], [64.5, 15587.0], [64.6, 15587.0], [64.7, 15587.0], [64.8, 15587.0], [64.9, 15587.0], [65.0, 15639.0], [65.1, 15639.0], [65.2, 15639.0], [65.3, 15639.0], [65.4, 15639.0], [65.5, 15639.0], [65.6, 15639.0], [65.7, 15639.0], [65.8, 15639.0], [65.9, 15639.0], [66.0, 15813.0], [66.1, 15813.0], [66.2, 15813.0], [66.3, 15813.0], [66.4, 15813.0], [66.5, 15813.0], [66.6, 15813.0], [66.7, 15813.0], [66.8, 15813.0], [66.9, 15813.0], [67.0, 15875.0], [67.1, 15875.0], [67.2, 15875.0], [67.3, 15875.0], [67.4, 15875.0], [67.5, 15875.0], [67.6, 15875.0], [67.7, 15875.0], [67.8, 15875.0], [67.9, 15875.0], [68.0, 15994.0], [68.1, 15994.0], [68.2, 15994.0], [68.3, 15994.0], [68.4, 15994.0], [68.5, 15994.0], [68.6, 15994.0], [68.7, 15994.0], [68.8, 15994.0], [68.9, 15994.0], [69.0, 16012.0], [69.1, 16012.0], [69.2, 16012.0], [69.3, 16012.0], [69.4, 16012.0], [69.5, 16012.0], [69.6, 16012.0], [69.7, 16012.0], [69.8, 16012.0], [69.9, 16012.0], [70.0, 16020.0], [70.1, 16020.0], [70.2, 16020.0], [70.3, 16020.0], [70.4, 16020.0], [70.5, 16020.0], [70.6, 16020.0], [70.7, 16020.0], [70.8, 16020.0], [70.9, 16020.0], [71.0, 16161.0], [71.1, 16161.0], [71.2, 16161.0], [71.3, 16161.0], [71.4, 16161.0], [71.5, 16161.0], [71.6, 16161.0], [71.7, 16161.0], [71.8, 16161.0], [71.9, 16161.0], [72.0, 16178.0], [72.1, 16178.0], [72.2, 16178.0], [72.3, 16178.0], [72.4, 16178.0], [72.5, 16178.0], [72.6, 16178.0], [72.7, 16178.0], [72.8, 16178.0], [72.9, 16178.0], [73.0, 16293.0], [73.1, 16293.0], [73.2, 16293.0], [73.3, 16293.0], [73.4, 16293.0], [73.5, 16293.0], [73.6, 16293.0], [73.7, 16293.0], [73.8, 16293.0], [73.9, 16293.0], [74.0, 16331.0], [74.1, 16331.0], [74.2, 16331.0], [74.3, 16331.0], [74.4, 16331.0], [74.5, 16331.0], [74.6, 16331.0], [74.7, 16331.0], [74.8, 16331.0], [74.9, 16331.0], [75.0, 16341.0], [75.1, 16341.0], [75.2, 16341.0], [75.3, 16341.0], [75.4, 16341.0], [75.5, 16341.0], [75.6, 16341.0], [75.7, 16341.0], [75.8, 16341.0], [75.9, 16341.0], [76.0, 16445.0], [76.1, 16445.0], [76.2, 16445.0], [76.3, 16445.0], [76.4, 16445.0], [76.5, 16445.0], [76.6, 16445.0], [76.7, 16445.0], [76.8, 16445.0], [76.9, 16445.0], [77.0, 16456.0], [77.1, 16456.0], [77.2, 16456.0], [77.3, 16456.0], [77.4, 16456.0], [77.5, 16456.0], [77.6, 16456.0], [77.7, 16456.0], [77.8, 16456.0], [77.9, 16456.0], [78.0, 16577.0], [78.1, 16577.0], [78.2, 16577.0], [78.3, 16577.0], [78.4, 16577.0], [78.5, 16577.0], [78.6, 16577.0], [78.7, 16577.0], [78.8, 16577.0], [78.9, 16577.0], [79.0, 16830.0], [79.1, 16830.0], [79.2, 16830.0], [79.3, 16830.0], [79.4, 16830.0], [79.5, 16830.0], [79.6, 16830.0], [79.7, 16830.0], [79.8, 16830.0], [79.9, 16830.0], [80.0, 17800.0], [80.1, 17800.0], [80.2, 17800.0], [80.3, 17800.0], [80.4, 17800.0], [80.5, 17800.0], [80.6, 17800.0], [80.7, 17800.0], [80.8, 17800.0], [80.9, 17800.0], [81.0, 18017.0], [81.1, 18017.0], [81.2, 18017.0], [81.3, 18017.0], [81.4, 18017.0], [81.5, 18017.0], [81.6, 18017.0], [81.7, 18017.0], [81.8, 18017.0], [81.9, 18017.0], [82.0, 18089.0], [82.1, 18089.0], [82.2, 18089.0], [82.3, 18089.0], [82.4, 18089.0], [82.5, 18089.0], [82.6, 18089.0], [82.7, 18089.0], [82.8, 18089.0], [82.9, 18089.0], [83.0, 18234.0], [83.1, 18234.0], [83.2, 18234.0], [83.3, 18234.0], [83.4, 18234.0], [83.5, 18234.0], [83.6, 18234.0], [83.7, 18234.0], [83.8, 18234.0], [83.9, 18234.0], [84.0, 18267.0], [84.1, 18267.0], [84.2, 18267.0], [84.3, 18267.0], [84.4, 18267.0], [84.5, 18267.0], [84.6, 18267.0], [84.7, 18267.0], [84.8, 18267.0], [84.9, 18267.0], [85.0, 18281.0], [85.1, 18281.0], [85.2, 18281.0], [85.3, 18281.0], [85.4, 18281.0], [85.5, 18281.0], [85.6, 18281.0], [85.7, 18281.0], [85.8, 18281.0], [85.9, 18281.0], [86.0, 18425.0], [86.1, 18425.0], [86.2, 18425.0], [86.3, 18425.0], [86.4, 18425.0], [86.5, 18425.0], [86.6, 18425.0], [86.7, 18425.0], [86.8, 18425.0], [86.9, 18425.0], [87.0, 18577.0], [87.1, 18577.0], [87.2, 18577.0], [87.3, 18577.0], [87.4, 18577.0], [87.5, 18577.0], [87.6, 18577.0], [87.7, 18577.0], [87.8, 18577.0], [87.9, 18577.0], [88.0, 18591.0], [88.1, 18591.0], [88.2, 18591.0], [88.3, 18591.0], [88.4, 18591.0], [88.5, 18591.0], [88.6, 18591.0], [88.7, 18591.0], [88.8, 18591.0], [88.9, 18591.0], [89.0, 18682.0], [89.1, 18682.0], [89.2, 18682.0], [89.3, 18682.0], [89.4, 18682.0], [89.5, 18682.0], [89.6, 18682.0], [89.7, 18682.0], [89.8, 18682.0], [89.9, 18682.0], [90.0, 18764.0], [90.1, 18764.0], [90.2, 18764.0], [90.3, 18764.0], [90.4, 18764.0], [90.5, 18764.0], [90.6, 18764.0], [90.7, 18764.0], [90.8, 18764.0], [90.9, 18764.0], [91.0, 18788.0], [91.1, 18788.0], [91.2, 18788.0], [91.3, 18788.0], [91.4, 18788.0], [91.5, 18788.0], [91.6, 18788.0], [91.7, 18788.0], [91.8, 18788.0], [91.9, 18788.0], [92.0, 18793.0], [92.1, 18793.0], [92.2, 18793.0], [92.3, 18793.0], [92.4, 18793.0], [92.5, 18793.0], [92.6, 18793.0], [92.7, 18793.0], [92.8, 18793.0], [92.9, 18793.0], [93.0, 18806.0], [93.1, 18806.0], [93.2, 18806.0], [93.3, 18806.0], [93.4, 18806.0], [93.5, 18806.0], [93.6, 18806.0], [93.7, 18806.0], [93.8, 18806.0], [93.9, 18806.0], [94.0, 18889.0], [94.1, 18889.0], [94.2, 18889.0], [94.3, 18889.0], [94.4, 18889.0], [94.5, 18889.0], [94.6, 18889.0], [94.7, 18889.0], [94.8, 18889.0], [94.9, 18889.0], [95.0, 19007.0], [95.1, 19007.0], [95.2, 19007.0], [95.3, 19007.0], [95.4, 19007.0], [95.5, 19007.0], [95.6, 19007.0], [95.7, 19007.0], [95.8, 19007.0], [95.9, 19007.0], [96.0, 19031.0], [96.1, 19031.0], [96.2, 19031.0], [96.3, 19031.0], [96.4, 19031.0], [96.5, 19031.0], [96.6, 19031.0], [96.7, 19031.0], [96.8, 19031.0], [96.9, 19031.0], [97.0, 19078.0], [97.1, 19078.0], [97.2, 19078.0], [97.3, 19078.0], [97.4, 19078.0], [97.5, 19078.0], [97.6, 19078.0], [97.7, 19078.0], [97.8, 19078.0], [97.9, 19078.0], [98.0, 19272.0], [98.1, 19272.0], [98.2, 19272.0], [98.3, 19272.0], [98.4, 19272.0], [98.5, 19272.0], [98.6, 19272.0], [98.7, 19272.0], [98.8, 19272.0], [98.9, 19272.0], [99.0, 19309.0], [99.1, 19309.0], [99.2, 19309.0], [99.3, 19309.0], [99.4, 19309.0], [99.5, 19309.0], [99.6, 19309.0], [99.7, 19309.0], [99.8, 19309.0], [99.9, 19309.0]], "isOverall": false, "label": "challengeProfile", "isController": false}, {"data": [[0.0, 132.0], [0.1, 132.0], [0.2, 132.0], [0.3, 132.0], [0.4, 132.0], [0.5, 132.0], [0.6, 132.0], [0.7, 132.0], [0.8, 132.0], [0.9, 132.0], [1.0, 137.0], [1.1, 137.0], [1.2, 137.0], [1.3, 137.0], [1.4, 137.0], [1.5, 137.0], [1.6, 137.0], [1.7, 137.0], [1.8, 137.0], [1.9, 137.0], [2.0, 137.0], [2.1, 137.0], [2.2, 137.0], [2.3, 137.0], [2.4, 137.0], [2.5, 137.0], [2.6, 137.0], [2.7, 137.0], [2.8, 137.0], [2.9, 137.0], [3.0, 139.0], [3.1, 139.0], [3.2, 139.0], [3.3, 139.0], [3.4, 139.0], [3.5, 139.0], [3.6, 139.0], [3.7, 139.0], [3.8, 139.0], [3.9, 139.0], [4.0, 140.0], [4.1, 140.0], [4.2, 140.0], [4.3, 140.0], [4.4, 140.0], [4.5, 140.0], [4.6, 140.0], [4.7, 140.0], [4.8, 140.0], [4.9, 140.0], [5.0, 142.0], [5.1, 142.0], [5.2, 142.0], [5.3, 142.0], [5.4, 142.0], [5.5, 142.0], [5.6, 142.0], [5.7, 142.0], [5.8, 142.0], [5.9, 142.0], [6.0, 145.0], [6.1, 145.0], [6.2, 145.0], [6.3, 145.0], [6.4, 145.0], [6.5, 145.0], [6.6, 145.0], [6.7, 145.0], [6.8, 145.0], [6.9, 145.0], [7.0, 145.0], [7.1, 145.0], [7.2, 145.0], [7.3, 145.0], [7.4, 145.0], [7.5, 145.0], [7.6, 145.0], [7.7, 145.0], [7.8, 145.0], [7.9, 145.0], [8.0, 146.0], [8.1, 146.0], [8.2, 146.0], [8.3, 146.0], [8.4, 146.0], [8.5, 146.0], [8.6, 146.0], [8.7, 146.0], [8.8, 146.0], [8.9, 146.0], [9.0, 146.0], [9.1, 146.0], [9.2, 146.0], [9.3, 146.0], [9.4, 146.0], [9.5, 146.0], [9.6, 146.0], [9.7, 146.0], [9.8, 146.0], [9.9, 146.0], [10.0, 147.0], [10.1, 147.0], [10.2, 147.0], [10.3, 147.0], [10.4, 147.0], [10.5, 147.0], [10.6, 147.0], [10.7, 147.0], [10.8, 147.0], [10.9, 147.0], [11.0, 148.0], [11.1, 148.0], [11.2, 148.0], [11.3, 148.0], [11.4, 148.0], [11.5, 148.0], [11.6, 148.0], [11.7, 148.0], [11.8, 148.0], [11.9, 148.0], [12.0, 153.0], [12.1, 153.0], [12.2, 153.0], [12.3, 153.0], [12.4, 153.0], [12.5, 153.0], [12.6, 153.0], [12.7, 153.0], [12.8, 153.0], [12.9, 153.0], [13.0, 158.0], [13.1, 158.0], [13.2, 158.0], [13.3, 158.0], [13.4, 158.0], [13.5, 158.0], [13.6, 158.0], [13.7, 158.0], [13.8, 158.0], [13.9, 158.0], [14.0, 159.0], [14.1, 159.0], [14.2, 159.0], [14.3, 159.0], [14.4, 159.0], [14.5, 159.0], [14.6, 159.0], [14.7, 159.0], [14.8, 159.0], [14.9, 159.0], [15.0, 161.0], [15.1, 161.0], [15.2, 161.0], [15.3, 161.0], [15.4, 161.0], [15.5, 161.0], [15.6, 161.0], [15.7, 161.0], [15.8, 161.0], [15.9, 161.0], [16.0, 168.0], [16.1, 168.0], [16.2, 168.0], [16.3, 168.0], [16.4, 168.0], [16.5, 168.0], [16.6, 168.0], [16.7, 168.0], [16.8, 168.0], [16.9, 168.0], [17.0, 176.0], [17.1, 176.0], [17.2, 176.0], [17.3, 176.0], [17.4, 176.0], [17.5, 176.0], [17.6, 176.0], [17.7, 176.0], [17.8, 176.0], [17.9, 176.0], [18.0, 177.0], [18.1, 177.0], [18.2, 177.0], [18.3, 177.0], [18.4, 177.0], [18.5, 177.0], [18.6, 177.0], [18.7, 177.0], [18.8, 177.0], [18.9, 177.0], [19.0, 190.0], [19.1, 190.0], [19.2, 190.0], [19.3, 190.0], [19.4, 190.0], [19.5, 190.0], [19.6, 190.0], [19.7, 190.0], [19.8, 190.0], [19.9, 190.0], [20.0, 190.0], [20.1, 190.0], [20.2, 190.0], [20.3, 190.0], [20.4, 190.0], [20.5, 190.0], [20.6, 190.0], [20.7, 190.0], [20.8, 190.0], [20.9, 190.0], [21.0, 218.0], [21.1, 218.0], [21.2, 218.0], [21.3, 218.0], [21.4, 218.0], [21.5, 218.0], [21.6, 218.0], [21.7, 218.0], [21.8, 218.0], [21.9, 218.0], [22.0, 253.0], [22.1, 253.0], [22.2, 253.0], [22.3, 253.0], [22.4, 253.0], [22.5, 253.0], [22.6, 253.0], [22.7, 253.0], [22.8, 253.0], [22.9, 253.0], [23.0, 295.0], [23.1, 295.0], [23.2, 295.0], [23.3, 295.0], [23.4, 295.0], [23.5, 295.0], [23.6, 295.0], [23.7, 295.0], [23.8, 295.0], [23.9, 295.0], [24.0, 299.0], [24.1, 299.0], [24.2, 299.0], [24.3, 299.0], [24.4, 299.0], [24.5, 299.0], [24.6, 299.0], [24.7, 299.0], [24.8, 299.0], [24.9, 299.0], [25.0, 530.0], [25.1, 530.0], [25.2, 530.0], [25.3, 530.0], [25.4, 530.0], [25.5, 530.0], [25.6, 530.0], [25.7, 530.0], [25.8, 530.0], [25.9, 530.0], [26.0, 550.0], [26.1, 550.0], [26.2, 550.0], [26.3, 550.0], [26.4, 550.0], [26.5, 550.0], [26.6, 550.0], [26.7, 550.0], [26.8, 550.0], [26.9, 550.0], [27.0, 599.0], [27.1, 599.0], [27.2, 599.0], [27.3, 599.0], [27.4, 599.0], [27.5, 599.0], [27.6, 599.0], [27.7, 599.0], [27.8, 599.0], [27.9, 599.0], [28.0, 637.0], [28.1, 637.0], [28.2, 637.0], [28.3, 637.0], [28.4, 637.0], [28.5, 637.0], [28.6, 637.0], [28.7, 637.0], [28.8, 637.0], [28.9, 637.0], [29.0, 728.0], [29.1, 728.0], [29.2, 728.0], [29.3, 728.0], [29.4, 728.0], [29.5, 728.0], [29.6, 728.0], [29.7, 728.0], [29.8, 728.0], [29.9, 728.0], [30.0, 762.0], [30.1, 762.0], [30.2, 762.0], [30.3, 762.0], [30.4, 762.0], [30.5, 762.0], [30.6, 762.0], [30.7, 762.0], [30.8, 762.0], [30.9, 762.0], [31.0, 769.0], [31.1, 769.0], [31.2, 769.0], [31.3, 769.0], [31.4, 769.0], [31.5, 769.0], [31.6, 769.0], [31.7, 769.0], [31.8, 769.0], [31.9, 769.0], [32.0, 818.0], [32.1, 818.0], [32.2, 818.0], [32.3, 818.0], [32.4, 818.0], [32.5, 818.0], [32.6, 818.0], [32.7, 818.0], [32.8, 818.0], [32.9, 818.0], [33.0, 822.0], [33.1, 822.0], [33.2, 822.0], [33.3, 822.0], [33.4, 822.0], [33.5, 822.0], [33.6, 822.0], [33.7, 822.0], [33.8, 822.0], [33.9, 822.0], [34.0, 899.0], [34.1, 899.0], [34.2, 899.0], [34.3, 899.0], [34.4, 899.0], [34.5, 899.0], [34.6, 899.0], [34.7, 899.0], [34.8, 899.0], [34.9, 899.0], [35.0, 1074.0], [35.1, 1074.0], [35.2, 1074.0], [35.3, 1074.0], [35.4, 1074.0], [35.5, 1074.0], [35.6, 1074.0], [35.7, 1074.0], [35.8, 1074.0], [35.9, 1074.0], [36.0, 1084.0], [36.1, 1084.0], [36.2, 1084.0], [36.3, 1084.0], [36.4, 1084.0], [36.5, 1084.0], [36.6, 1084.0], [36.7, 1084.0], [36.8, 1084.0], [36.9, 1084.0], [37.0, 1260.0], [37.1, 1260.0], [37.2, 1260.0], [37.3, 1260.0], [37.4, 1260.0], [37.5, 1260.0], [37.6, 1260.0], [37.7, 1260.0], [37.8, 1260.0], [37.9, 1260.0], [38.0, 1407.0], [38.1, 1407.0], [38.2, 1407.0], [38.3, 1407.0], [38.4, 1407.0], [38.5, 1407.0], [38.6, 1407.0], [38.7, 1407.0], [38.8, 1407.0], [38.9, 1407.0], [39.0, 1635.0], [39.1, 1635.0], [39.2, 1635.0], [39.3, 1635.0], [39.4, 1635.0], [39.5, 1635.0], [39.6, 1635.0], [39.7, 1635.0], [39.8, 1635.0], [39.9, 1635.0], [40.0, 1690.0], [40.1, 1690.0], [40.2, 1690.0], [40.3, 1690.0], [40.4, 1690.0], [40.5, 1690.0], [40.6, 1690.0], [40.7, 1690.0], [40.8, 1690.0], [40.9, 1690.0], [41.0, 1989.0], [41.1, 1989.0], [41.2, 1989.0], [41.3, 1989.0], [41.4, 1989.0], [41.5, 1989.0], [41.6, 1989.0], [41.7, 1989.0], [41.8, 1989.0], [41.9, 1989.0], [42.0, 2057.0], [42.1, 2057.0], [42.2, 2057.0], [42.3, 2057.0], [42.4, 2057.0], [42.5, 2057.0], [42.6, 2057.0], [42.7, 2057.0], [42.8, 2057.0], [42.9, 2057.0], [43.0, 2304.0], [43.1, 2304.0], [43.2, 2304.0], [43.3, 2304.0], [43.4, 2304.0], [43.5, 2304.0], [43.6, 2304.0], [43.7, 2304.0], [43.8, 2304.0], [43.9, 2304.0], [44.0, 2597.0], [44.1, 2597.0], [44.2, 2597.0], [44.3, 2597.0], [44.4, 2597.0], [44.5, 2597.0], [44.6, 2597.0], [44.7, 2597.0], [44.8, 2597.0], [44.9, 2597.0], [45.0, 2694.0], [45.1, 2694.0], [45.2, 2694.0], [45.3, 2694.0], [45.4, 2694.0], [45.5, 2694.0], [45.6, 2694.0], [45.7, 2694.0], [45.8, 2694.0], [45.9, 2694.0], [46.0, 2864.0], [46.1, 2864.0], [46.2, 2864.0], [46.3, 2864.0], [46.4, 2864.0], [46.5, 2864.0], [46.6, 2864.0], [46.7, 2864.0], [46.8, 2864.0], [46.9, 2864.0], [47.0, 2899.0], [47.1, 2899.0], [47.2, 2899.0], [47.3, 2899.0], [47.4, 2899.0], [47.5, 2899.0], [47.6, 2899.0], [47.7, 2899.0], [47.8, 2899.0], [47.9, 2899.0], [48.0, 3032.0], [48.1, 3032.0], [48.2, 3032.0], [48.3, 3032.0], [48.4, 3032.0], [48.5, 3032.0], [48.6, 3032.0], [48.7, 3032.0], [48.8, 3032.0], [48.9, 3032.0], [49.0, 3083.0], [49.1, 3083.0], [49.2, 3083.0], [49.3, 3083.0], [49.4, 3083.0], [49.5, 3083.0], [49.6, 3083.0], [49.7, 3083.0], [49.8, 3083.0], [49.9, 3083.0], [50.0, 3290.0], [50.1, 3290.0], [50.2, 3290.0], [50.3, 3290.0], [50.4, 3290.0], [50.5, 3290.0], [50.6, 3290.0], [50.7, 3290.0], [50.8, 3290.0], [50.9, 3290.0], [51.0, 3642.0], [51.1, 3642.0], [51.2, 3642.0], [51.3, 3642.0], [51.4, 3642.0], [51.5, 3642.0], [51.6, 3642.0], [51.7, 3642.0], [51.8, 3642.0], [51.9, 3642.0], [52.0, 3900.0], [52.1, 3900.0], [52.2, 3900.0], [52.3, 3900.0], [52.4, 3900.0], [52.5, 3900.0], [52.6, 3900.0], [52.7, 3900.0], [52.8, 3900.0], [52.9, 3900.0], [53.0, 4312.0], [53.1, 4312.0], [53.2, 4312.0], [53.3, 4312.0], [53.4, 4312.0], [53.5, 4312.0], [53.6, 4312.0], [53.7, 4312.0], [53.8, 4312.0], [53.9, 4312.0], [54.0, 4861.0], [54.1, 4861.0], [54.2, 4861.0], [54.3, 4861.0], [54.4, 4861.0], [54.5, 4861.0], [54.6, 4861.0], [54.7, 4861.0], [54.8, 4861.0], [54.9, 4861.0], [55.0, 4945.0], [55.1, 4945.0], [55.2, 4945.0], [55.3, 4945.0], [55.4, 4945.0], [55.5, 4945.0], [55.6, 4945.0], [55.7, 4945.0], [55.8, 4945.0], [55.9, 4945.0], [56.0, 5282.0], [56.1, 5282.0], [56.2, 5282.0], [56.3, 5282.0], [56.4, 5282.0], [56.5, 5282.0], [56.6, 5282.0], [56.7, 5282.0], [56.8, 5282.0], [56.9, 5282.0], [57.0, 5428.0], [57.1, 5428.0], [57.2, 5428.0], [57.3, 5428.0], [57.4, 5428.0], [57.5, 5428.0], [57.6, 5428.0], [57.7, 5428.0], [57.8, 5428.0], [57.9, 5428.0], [58.0, 5455.0], [58.1, 5455.0], [58.2, 5455.0], [58.3, 5455.0], [58.4, 5455.0], [58.5, 5455.0], [58.6, 5455.0], [58.7, 5455.0], [58.8, 5455.0], [58.9, 5455.0], [59.0, 5641.0], [59.1, 5641.0], [59.2, 5641.0], [59.3, 5641.0], [59.4, 5641.0], [59.5, 5641.0], [59.6, 5641.0], [59.7, 5641.0], [59.8, 5641.0], [59.9, 5641.0], [60.0, 5791.0], [60.1, 5791.0], [60.2, 5791.0], [60.3, 5791.0], [60.4, 5791.0], [60.5, 5791.0], [60.6, 5791.0], [60.7, 5791.0], [60.8, 5791.0], [60.9, 5791.0], [61.0, 6541.0], [61.1, 6541.0], [61.2, 6541.0], [61.3, 6541.0], [61.4, 6541.0], [61.5, 6541.0], [61.6, 6541.0], [61.7, 6541.0], [61.8, 6541.0], [61.9, 6541.0], [62.0, 7005.0], [62.1, 7005.0], [62.2, 7005.0], [62.3, 7005.0], [62.4, 7005.0], [62.5, 7005.0], [62.6, 7005.0], [62.7, 7005.0], [62.8, 7005.0], [62.9, 7005.0], [63.0, 7739.0], [63.1, 7739.0], [63.2, 7739.0], [63.3, 7739.0], [63.4, 7739.0], [63.5, 7739.0], [63.6, 7739.0], [63.7, 7739.0], [63.8, 7739.0], [63.9, 7739.0], [64.0, 7961.0], [64.1, 7961.0], [64.2, 7961.0], [64.3, 7961.0], [64.4, 7961.0], [64.5, 7961.0], [64.6, 7961.0], [64.7, 7961.0], [64.8, 7961.0], [64.9, 7961.0], [65.0, 8106.0], [65.1, 8106.0], [65.2, 8106.0], [65.3, 8106.0], [65.4, 8106.0], [65.5, 8106.0], [65.6, 8106.0], [65.7, 8106.0], [65.8, 8106.0], [65.9, 8106.0], [66.0, 8154.0], [66.1, 8154.0], [66.2, 8154.0], [66.3, 8154.0], [66.4, 8154.0], [66.5, 8154.0], [66.6, 8154.0], [66.7, 8154.0], [66.8, 8154.0], [66.9, 8154.0], [67.0, 8397.0], [67.1, 8397.0], [67.2, 8397.0], [67.3, 8397.0], [67.4, 8397.0], [67.5, 8397.0], [67.6, 8397.0], [67.7, 8397.0], [67.8, 8397.0], [67.9, 8397.0], [68.0, 8476.0], [68.1, 8476.0], [68.2, 8476.0], [68.3, 8476.0], [68.4, 8476.0], [68.5, 8476.0], [68.6, 8476.0], [68.7, 8476.0], [68.8, 8476.0], [68.9, 8476.0], [69.0, 8530.0], [69.1, 8530.0], [69.2, 8530.0], [69.3, 8530.0], [69.4, 8530.0], [69.5, 8530.0], [69.6, 8530.0], [69.7, 8530.0], [69.8, 8530.0], [69.9, 8530.0], [70.0, 8571.0], [70.1, 8571.0], [70.2, 8571.0], [70.3, 8571.0], [70.4, 8571.0], [70.5, 8571.0], [70.6, 8571.0], [70.7, 8571.0], [70.8, 8571.0], [70.9, 8571.0], [71.0, 8595.0], [71.1, 8595.0], [71.2, 8595.0], [71.3, 8595.0], [71.4, 8595.0], [71.5, 8595.0], [71.6, 8595.0], [71.7, 8595.0], [71.8, 8595.0], [71.9, 8595.0], [72.0, 8597.0], [72.1, 8597.0], [72.2, 8597.0], [72.3, 8597.0], [72.4, 8597.0], [72.5, 8597.0], [72.6, 8597.0], [72.7, 8597.0], [72.8, 8597.0], [72.9, 8597.0], [73.0, 8706.0], [73.1, 8706.0], [73.2, 8706.0], [73.3, 8706.0], [73.4, 8706.0], [73.5, 8706.0], [73.6, 8706.0], [73.7, 8706.0], [73.8, 8706.0], [73.9, 8706.0], [74.0, 8976.0], [74.1, 8976.0], [74.2, 8976.0], [74.3, 8976.0], [74.4, 8976.0], [74.5, 8976.0], [74.6, 8976.0], [74.7, 8976.0], [74.8, 8976.0], [74.9, 8976.0], [75.0, 9004.0], [75.1, 9004.0], [75.2, 9004.0], [75.3, 9004.0], [75.4, 9004.0], [75.5, 9004.0], [75.6, 9004.0], [75.7, 9004.0], [75.8, 9004.0], [75.9, 9004.0], [76.0, 9007.0], [76.1, 9007.0], [76.2, 9007.0], [76.3, 9007.0], [76.4, 9007.0], [76.5, 9007.0], [76.6, 9007.0], [76.7, 9007.0], [76.8, 9007.0], [76.9, 9007.0], [77.0, 9047.0], [77.1, 9047.0], [77.2, 9047.0], [77.3, 9047.0], [77.4, 9047.0], [77.5, 9047.0], [77.6, 9047.0], [77.7, 9047.0], [77.8, 9047.0], [77.9, 9047.0], [78.0, 9057.0], [78.1, 9057.0], [78.2, 9057.0], [78.3, 9057.0], [78.4, 9057.0], [78.5, 9057.0], [78.6, 9057.0], [78.7, 9057.0], [78.8, 9057.0], [78.9, 9057.0], [79.0, 9089.0], [79.1, 9089.0], [79.2, 9089.0], [79.3, 9089.0], [79.4, 9089.0], [79.5, 9089.0], [79.6, 9089.0], [79.7, 9089.0], [79.8, 9089.0], [79.9, 9089.0], [80.0, 9140.0], [80.1, 9140.0], [80.2, 9140.0], [80.3, 9140.0], [80.4, 9140.0], [80.5, 9140.0], [80.6, 9140.0], [80.7, 9140.0], [80.8, 9140.0], [80.9, 9140.0], [81.0, 9153.0], [81.1, 9153.0], [81.2, 9153.0], [81.3, 9153.0], [81.4, 9153.0], [81.5, 9153.0], [81.6, 9153.0], [81.7, 9153.0], [81.8, 9153.0], [81.9, 9153.0], [82.0, 9211.0], [82.1, 9211.0], [82.2, 9211.0], [82.3, 9211.0], [82.4, 9211.0], [82.5, 9211.0], [82.6, 9211.0], [82.7, 9211.0], [82.8, 9211.0], [82.9, 9211.0], [83.0, 9225.0], [83.1, 9225.0], [83.2, 9225.0], [83.3, 9225.0], [83.4, 9225.0], [83.5, 9225.0], [83.6, 9225.0], [83.7, 9225.0], [83.8, 9225.0], [83.9, 9225.0], [84.0, 9267.0], [84.1, 9267.0], [84.2, 9267.0], [84.3, 9267.0], [84.4, 9267.0], [84.5, 9267.0], [84.6, 9267.0], [84.7, 9267.0], [84.8, 9267.0], [84.9, 9267.0], [85.0, 9308.0], [85.1, 9308.0], [85.2, 9308.0], [85.3, 9308.0], [85.4, 9308.0], [85.5, 9308.0], [85.6, 9308.0], [85.7, 9308.0], [85.8, 9308.0], [85.9, 9308.0], [86.0, 9330.0], [86.1, 9330.0], [86.2, 9330.0], [86.3, 9330.0], [86.4, 9330.0], [86.5, 9330.0], [86.6, 9330.0], [86.7, 9330.0], [86.8, 9330.0], [86.9, 9330.0], [87.0, 9433.0], [87.1, 9433.0], [87.2, 9433.0], [87.3, 9433.0], [87.4, 9433.0], [87.5, 9433.0], [87.6, 9433.0], [87.7, 9433.0], [87.8, 9433.0], [87.9, 9433.0], [88.0, 9580.0], [88.1, 9580.0], [88.2, 9580.0], [88.3, 9580.0], [88.4, 9580.0], [88.5, 9580.0], [88.6, 9580.0], [88.7, 9580.0], [88.8, 9580.0], [88.9, 9580.0], [89.0, 9670.0], [89.1, 9670.0], [89.2, 9670.0], [89.3, 9670.0], [89.4, 9670.0], [89.5, 9670.0], [89.6, 9670.0], [89.7, 9670.0], [89.8, 9670.0], [89.9, 9670.0], [90.0, 9780.0], [90.1, 9780.0], [90.2, 9780.0], [90.3, 9780.0], [90.4, 9780.0], [90.5, 9780.0], [90.6, 9780.0], [90.7, 9780.0], [90.8, 9780.0], [90.9, 9780.0], [91.0, 9792.0], [91.1, 9792.0], [91.2, 9792.0], [91.3, 9792.0], [91.4, 9792.0], [91.5, 9792.0], [91.6, 9792.0], [91.7, 9792.0], [91.8, 9792.0], [91.9, 9792.0], [92.0, 9826.0], [92.1, 9826.0], [92.2, 9826.0], [92.3, 9826.0], [92.4, 9826.0], [92.5, 9826.0], [92.6, 9826.0], [92.7, 9826.0], [92.8, 9826.0], [92.9, 9826.0], [93.0, 10872.0], [93.1, 10872.0], [93.2, 10872.0], [93.3, 10872.0], [93.4, 10872.0], [93.5, 10872.0], [93.6, 10872.0], [93.7, 10872.0], [93.8, 10872.0], [93.9, 10872.0], [94.0, 10997.0], [94.1, 10997.0], [94.2, 10997.0], [94.3, 10997.0], [94.4, 10997.0], [94.5, 10997.0], [94.6, 10997.0], [94.7, 10997.0], [94.8, 10997.0], [94.9, 10997.0], [95.0, 11122.0], [95.1, 11122.0], [95.2, 11122.0], [95.3, 11122.0], [95.4, 11122.0], [95.5, 11122.0], [95.6, 11122.0], [95.7, 11122.0], [95.8, 11122.0], [95.9, 11122.0], [96.0, 11436.0], [96.1, 11436.0], [96.2, 11436.0], [96.3, 11436.0], [96.4, 11436.0], [96.5, 11436.0], [96.6, 11436.0], [96.7, 11436.0], [96.8, 11436.0], [96.9, 11436.0], [97.0, 11743.0], [97.1, 11743.0], [97.2, 11743.0], [97.3, 11743.0], [97.4, 11743.0], [97.5, 11743.0], [97.6, 11743.0], [97.7, 11743.0], [97.8, 11743.0], [97.9, 11743.0], [98.0, 11928.0], [98.1, 11928.0], [98.2, 11928.0], [98.3, 11928.0], [98.4, 11928.0], [98.5, 11928.0], [98.6, 11928.0], [98.7, 11928.0], [98.8, 11928.0], [98.9, 11928.0], [99.0, 12378.0], [99.1, 12378.0], [99.2, 12378.0], [99.3, 12378.0], [99.4, 12378.0], [99.5, 12378.0], [99.6, 12378.0], [99.7, 12378.0], [99.8, 12378.0], [99.9, 12378.0]], "isOverall": false, "label": "challenges ", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 100.0, "maxY": 31.0, "series": [{"data": [[4600.0, 3.0], [4400.0, 1.0], [4700.0, 2.0], [4800.0, 1.0], [4900.0, 3.0], [5200.0, 2.0], [5300.0, 3.0], [5400.0, 1.0], [5900.0, 1.0], [6200.0, 1.0], [6300.0, 3.0], [6400.0, 1.0], [6500.0, 2.0], [6800.0, 1.0], [6900.0, 1.0], [7000.0, 1.0], [7100.0, 4.0], [7200.0, 1.0], [7300.0, 2.0], [7400.0, 2.0], [7600.0, 3.0], [7700.0, 7.0], [7800.0, 1.0], [7900.0, 1.0], [8700.0, 1.0], [9200.0, 1.0], [9800.0, 1.0], [10800.0, 2.0], [10900.0, 3.0], [11200.0, 1.0], [11300.0, 1.0], [11400.0, 1.0], [11500.0, 1.0], [11700.0, 1.0], [11900.0, 3.0], [12100.0, 1.0], [12200.0, 2.0], [12000.0, 2.0], [12300.0, 1.0], [12400.0, 5.0], [12500.0, 3.0], [12700.0, 2.0], [12600.0, 1.0], [12800.0, 1.0], [12900.0, 2.0], [13100.0, 1.0], [13200.0, 3.0], [13300.0, 5.0], [13500.0, 1.0], [13600.0, 1.0], [13700.0, 1.0], [13800.0, 3.0], [14000.0, 1.0]], "isOverall": false, "label": "challengeUserIds", "isController": false}, {"data": [[600.0, 1.0], [800.0, 5.0], [900.0, 1.0], [1000.0, 2.0], [1100.0, 1.0], [1200.0, 1.0], [1300.0, 1.0], [1400.0, 1.0], [1500.0, 1.0], [100.0, 31.0], [2000.0, 1.0], [2100.0, 1.0], [2400.0, 2.0], [2800.0, 4.0], [2700.0, 2.0], [2900.0, 2.0], [3000.0, 3.0], [3100.0, 3.0], [200.0, 8.0], [3300.0, 3.0], [3200.0, 2.0], [3400.0, 2.0], [3500.0, 3.0], [3600.0, 1.0], [3700.0, 3.0], [3900.0, 1.0], [4200.0, 3.0], [4100.0, 2.0], [4500.0, 1.0], [4400.0, 2.0], [300.0, 4.0], [4700.0, 1.0], [500.0, 1.0]], "isOverall": false, "label": "ecoverseUserIds", "isController": false}, {"data": [[600.0, 4.0], [700.0, 6.0], [800.0, 2.0], [900.0, 4.0], [1000.0, 1.0], [1100.0, 4.0], [1200.0, 1.0], [1300.0, 4.0], [1400.0, 3.0], [1700.0, 1.0], [1900.0, 1.0], [2000.0, 1.0], [2100.0, 3.0], [2200.0, 3.0], [2400.0, 2.0], [2500.0, 1.0], [2600.0, 3.0], [2800.0, 4.0], [2700.0, 4.0], [2900.0, 2.0], [3000.0, 2.0], [3100.0, 5.0], [3300.0, 3.0], [3200.0, 2.0], [3400.0, 3.0], [3500.0, 4.0], [3600.0, 3.0], [3700.0, 1.0], [3800.0, 7.0], [3900.0, 3.0], [4000.0, 1.0], [4100.0, 4.0], [4200.0, 1.0], [4300.0, 1.0], [300.0, 2.0], [500.0, 4.0]], "isOverall": false, "label": "userAvatars", "isController": false}, {"data": [[900.0, 1.0], [1500.0, 1.0], [1600.0, 1.0], [1700.0, 3.0], [1800.0, 2.0], [2100.0, 2.0], [2200.0, 2.0], [2300.0, 1.0], [2400.0, 3.0], [2500.0, 1.0], [2800.0, 1.0], [2700.0, 2.0], [2900.0, 3.0], [3200.0, 2.0], [3300.0, 1.0], [3400.0, 1.0], [3500.0, 1.0], [3700.0, 1.0], [13300.0, 1.0], [13200.0, 1.0], [13400.0, 1.0], [13700.0, 1.0], [13800.0, 3.0], [14200.0, 1.0], [14400.0, 1.0], [14700.0, 2.0], [14500.0, 3.0], [14600.0, 3.0], [14800.0, 2.0], [15100.0, 3.0], [15300.0, 1.0], [15200.0, 2.0], [14900.0, 1.0], [15400.0, 2.0], [15800.0, 2.0], [15500.0, 3.0], [15600.0, 1.0], [16000.0, 2.0], [16300.0, 2.0], [16100.0, 2.0], [16200.0, 1.0], [15900.0, 1.0], [16500.0, 1.0], [16400.0, 2.0], [16800.0, 1.0], [18200.0, 3.0], [18000.0, 2.0], [18400.0, 1.0], [17800.0, 1.0], [18700.0, 3.0], [18600.0, 1.0], [19000.0, 3.0], [18500.0, 2.0], [19300.0, 1.0], [19200.0, 1.0], [18800.0, 2.0], [200.0, 1.0], [300.0, 3.0], [500.0, 1.0]], "isOverall": false, "label": "challengeProfile", "isController": false}, {"data": [[600.0, 1.0], [700.0, 3.0], [800.0, 3.0], [1000.0, 2.0], [1200.0, 1.0], [1400.0, 1.0], [1600.0, 2.0], [1900.0, 1.0], [2000.0, 1.0], [2300.0, 1.0], [2500.0, 1.0], [2600.0, 1.0], [2800.0, 2.0], [3000.0, 2.0], [3200.0, 1.0], [3600.0, 1.0], [3900.0, 1.0], [4300.0, 1.0], [4800.0, 1.0], [4900.0, 1.0], [5200.0, 1.0], [5400.0, 2.0], [5600.0, 1.0], [5700.0, 1.0], [6500.0, 1.0], [7000.0, 1.0], [7900.0, 1.0], [7700.0, 1.0], [8100.0, 2.0], [8500.0, 4.0], [8300.0, 1.0], [8400.0, 1.0], [8700.0, 1.0], [8900.0, 1.0], [9000.0, 5.0], [9100.0, 2.0], [9200.0, 3.0], [9300.0, 2.0], [9400.0, 1.0], [9500.0, 1.0], [9700.0, 2.0], [9600.0, 1.0], [9800.0, 1.0], [10900.0, 1.0], [11100.0, 1.0], [10800.0, 1.0], [11400.0, 1.0], [11700.0, 1.0], [11900.0, 1.0], [12300.0, 1.0], [100.0, 21.0], [200.0, 4.0], [500.0, 3.0]], "isOverall": false, "label": "challenges ", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 19300.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 63.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 363.0, "series": [{"data": [[0.0, 74.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 63.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 363.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 72.71175166297118, "minX": 1.61959842E12, "maxY": 100.0, "series": [{"data": [[1.61959848E12, 72.71175166297118], [1.61959842E12, 100.0]], "isOverall": false, "label": "CT Benchmark:  Queries - Challenge page", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61959848E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 106.0, "minX": 1.0, "maxY": 19272.0, "series": [{"data": [[99.0, 13496.75], [98.0, 13785.5], [100.0, 9052.766666666668]], "isOverall": false, "label": "challengeUserIds", "isController": false}, {"data": [[99.83999999999999, 9514.490000000002]], "isOverall": false, "label": "challengeUserIds-Aggregated", "isController": false}, {"data": [[2.0, 394.0], [4.0, 506.5], [5.0, 130.0], [6.0, 532.0], [7.0, 188.0], [8.0, 153.0], [9.0, 163.0], [10.0, 908.0], [11.0, 118.0], [12.0, 154.0], [13.0, 122.0], [14.0, 168.0], [15.0, 823.0], [16.0, 114.0], [17.0, 294.0], [18.0, 167.0], [19.0, 2048.0], [20.0, 2456.0], [21.0, 201.0], [22.0, 2872.0], [23.0, 169.0], [24.0, 275.0], [25.0, 3064.0], [26.0, 113.0], [27.0, 3547.0], [28.0, 3583.0], [29.0, 360.0], [30.0, 820.0], [31.0, 212.0], [33.0, 1004.0], [32.0, 825.0], [35.0, 4249.0], [34.0, 1389.0], [37.0, 1540.0], [36.0, 127.0], [39.0, 1158.0], [38.0, 4157.0], [41.0, 128.0], [40.0, 125.0], [43.0, 883.0], [42.0, 120.0], [45.0, 1013.0], [44.0, 4472.0], [47.0, 1270.0], [46.0, 149.0], [49.0, 4468.0], [48.0, 4233.0], [51.0, 2144.0], [50.0, 1488.0], [53.0, 106.0], [52.0, 4514.0], [55.0, 2464.0], [54.0, 124.0], [57.0, 3102.0], [56.0, 169.0], [59.0, 149.0], [58.0, 3321.0], [61.0, 4716.0], [60.0, 3251.0], [63.0, 134.0], [62.0, 4165.0], [67.0, 4283.0], [66.0, 209.0], [65.0, 121.0], [64.0, 3993.0], [71.0, 3363.0], [70.0, 115.0], [69.0, 172.0], [68.0, 3215.0], [75.0, 2785.0], [74.0, 119.0], [73.0, 2905.0], [72.0, 3327.0], [79.0, 3126.0], [78.0, 3020.0], [77.0, 3015.0], [76.0, 2908.0], [83.0, 3148.0], [82.0, 136.0], [81.0, 157.0], [80.0, 3483.0], [87.0, 3727.0], [86.0, 3559.0], [85.0, 277.0], [84.0, 3788.0], [91.0, 120.0], [90.0, 3724.0], [89.0, 3437.0], [88.0, 135.0], [95.0, 2886.0], [94.0, 3656.0], [93.0, 367.0], [92.0, 125.0], [99.0, 2831.0], [98.0, 2762.0], [97.0, 2808.0], [96.0, 285.0], [100.0, 623.0], [1.0, 377.0]], "isOverall": false, "label": "ecoverseUserIds", "isController": false}, {"data": [[50.51, 1654.0499999999997]], "isOverall": false, "label": "ecoverseUserIds-Aggregated", "isController": false}, {"data": [[91.0, 3847.0], [90.0, 4093.0], [88.0, 4220.5], [95.0, 3013.333333333333], [94.0, 3364.375], [92.0, 3481.0], [99.0, 1405.0], [98.0, 2229.6], [97.0, 987.6666666666666], [96.0, 2718.3333333333335], [100.0, 2005.98275862069]], "isOverall": false, "label": "userAvatars", "isController": false}, {"data": [[97.61000000000001, 2406.04]], "isOverall": false, "label": "userAvatars-Aggregated", "isController": false}, {"data": [[33.0, 18897.5], [32.0, 18234.0], [36.0, 18740.0], [41.0, 18972.333333333332], [40.0, 19272.0], [51.0, 18793.0], [50.0, 18841.333333333332], [53.0, 14655.0], [52.0, 15639.0], [54.0, 16566.5], [57.0, 18281.0], [56.0, 16158.000000000002], [59.0, 16077.5], [58.0, 15700.0], [61.0, 15816.0], [63.0, 16506.0], [65.0, 15145.75], [64.0, 15758.0], [71.0, 15321.333333333334], [70.0, 15635.333333333334], [69.0, 14706.0], [68.0, 16175.5], [72.0, 14699.0], [79.0, 14463.0], [76.0, 14625.0], [82.0, 13779.0], [81.0, 13858.666666666666], [87.0, 13334.0], [86.0, 13200.0], [85.0, 13473.0], [91.0, 306.0], [90.0, 316.0], [88.0, 306.0], [95.0, 1912.5], [94.0, 1301.0], [98.0, 2151.6666666666665], [100.0, 2873.055555555555], [27.0, 18806.0], [28.0, 17800.0], [31.0, 18089.0]], "isOverall": false, "label": "challengeProfile", "isController": false}, {"data": [[72.36000000000004, 11441.639999999994]], "isOverall": false, "label": "challengeProfile-Aggregated", "isController": false}, {"data": [[32.0, 6052.0], [34.0, 2694.0], [36.0, 6277.5], [41.0, 3771.0], [40.0, 2881.5], [43.0, 4861.0], [45.0, 5455.0], [44.0, 5282.0], [49.0, 3575.0], [48.0, 190.0], [50.0, 5330.333333333333], [53.0, 7313.6], [55.0, 161.0], [54.0, 9004.0], [56.0, 153.0], [59.0, 4602.0], [58.0, 5786.5], [61.0, 5131.75], [63.0, 3175.0], [67.0, 9780.0], [65.0, 4632.5], [64.0, 9792.0], [70.0, 3286.3333333333335], [69.0, 4733.0], [74.0, 9211.0], [76.0, 4650.5], [83.0, 8954.5], [81.0, 5328.0], [87.0, 4617.0], [86.0, 9330.0], [91.0, 168.0], [90.0, 8976.0], [88.0, 8496.0], [94.0, 569.4], [92.0, 295.0], [97.0, 1074.0], [96.0, 813.5], [100.0, 1026.6666666666667], [8.0, 2829.1666666666665], [12.0, 4293.75], [13.0, 5791.0], [14.0, 5428.0], [15.0, 5641.0], [17.0, 9468.5], [18.0, 9742.666666666666], [25.0, 5826.0], [27.0, 1662.5]], "isOverall": false, "label": "challenges ", "isController": false}, {"data": [[56.609999999999985, 4583.8]], "isOverall": false, "label": "challenges -Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 297.8, "minX": 1.61959842E12, "maxY": 34333.7, "series": [{"data": [[1.61959848E12, 34333.7], [1.61959842E12, 838.25]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.61959848E12, 3302.266666666667], [1.61959842E12, 297.8]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61959848E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 1394.5333333333333, "minX": 1.61959842E12, "maxY": 11441.639999999994, "series": [{"data": [[1.61959848E12, 11360.75757575757], [1.61959842E12, 5930.558823529412]], "isOverall": false, "label": "challengeUserIds", "isController": false}, {"data": [[1.61959848E12, 1654.0499999999997]], "isOverall": false, "label": "ecoverseUserIds", "isController": false}, {"data": [[1.61959848E12, 2584.5411764705864], [1.61959842E12, 1394.5333333333333]], "isOverall": false, "label": "userAvatars", "isController": false}, {"data": [[1.61959848E12, 11441.639999999994]], "isOverall": false, "label": "challengeProfile", "isController": false}, {"data": [[1.61959848E12, 4583.8]], "isOverall": false, "label": "challenges ", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61959848E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 1394.2, "minX": 1.61959842E12, "maxY": 11434.369999999997, "series": [{"data": [[1.61959848E12, 11360.651515151516], [1.61959842E12, 5930.35294117647]], "isOverall": false, "label": "challengeUserIds", "isController": false}, {"data": [[1.61959848E12, 1647.8300000000002]], "isOverall": false, "label": "ecoverseUserIds", "isController": false}, {"data": [[1.61959848E12, 2584.5058823529403], [1.61959842E12, 1394.2]], "isOverall": false, "label": "userAvatars", "isController": false}, {"data": [[1.61959848E12, 11434.369999999997]], "isOverall": false, "label": "challengeProfile", "isController": false}, {"data": [[1.61959848E12, 4572.59]], "isOverall": false, "label": "challenges ", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61959848E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61959842E12, "maxY": 3541.8787878787884, "series": [{"data": [[1.61959848E12, 3541.8787878787884], [1.61959842E12, 3198.9411764705874]], "isOverall": false, "label": "challengeUserIds", "isController": false}, {"data": [[1.61959848E12, 0.0]], "isOverall": false, "label": "ecoverseUserIds", "isController": false}, {"data": [[1.61959848E12, 0.0], [1.61959842E12, 0.0]], "isOverall": false, "label": "userAvatars", "isController": false}, {"data": [[1.61959848E12, 0.0]], "isOverall": false, "label": "challengeProfile", "isController": false}, {"data": [[1.61959848E12, 0.0]], "isOverall": false, "label": "challenges ", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61959848E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 106.0, "minX": 1.61959842E12, "maxY": 19309.0, "series": [{"data": [[1.61959848E12, 19309.0], [1.61959842E12, 7331.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.61959848E12, 15175.8], [1.61959842E12, 7146.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.61959848E12, 19018.52], [1.61959842E12, 7331.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.61959848E12, 16504.399999999998], [1.61959842E12, 7289.5]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.61959848E12, 106.0], [1.61959842E12, 905.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.61959848E12, 3499.0], [1.61959842E12, 4985.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61959848E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 377.0, "minX": 1.0, "maxY": 12479.0, "series": [{"data": [[33.0, 12479.0], [8.0, 6340.0], [9.0, 9225.0], [11.0, 4950.0], [12.0, 3332.5], [14.0, 2664.0], [15.0, 3481.0], [16.0, 3147.5], [4.0, 11425.0], [1.0, 377.0], [17.0, 2346.0], [18.0, 2881.5], [19.0, 7680.0], [5.0, 9780.0], [21.0, 4468.0], [23.0, 6331.0], [6.0, 4039.5], [25.0, 908.0], [29.0, 2780.0], [30.0, 3873.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 33.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 377.0, "minX": 1.0, "maxY": 12479.0, "series": [{"data": [[33.0, 12479.0], [8.0, 6340.0], [9.0, 9225.0], [11.0, 4950.0], [12.0, 3332.0], [14.0, 2663.5], [15.0, 3481.0], [16.0, 3147.5], [4.0, 11424.0], [1.0, 377.0], [17.0, 2345.0], [18.0, 2859.5], [19.0, 7680.0], [5.0, 9780.0], [21.0, 4468.0], [23.0, 6331.0], [6.0, 4038.5], [25.0, 906.0], [29.0, 2780.0], [30.0, 3873.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 33.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 2.4833333333333334, "minX": 1.61959842E12, "maxY": 5.85, "series": [{"data": [[1.61959848E12, 5.85], [1.61959842E12, 2.4833333333333334]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61959848E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.8166666666666667, "minX": 1.61959842E12, "maxY": 7.516666666666667, "series": [{"data": [[1.61959848E12, 7.516666666666667], [1.61959842E12, 0.8166666666666667]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61959848E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.25, "minX": 1.61959842E12, "maxY": 1.6666666666666667, "series": [{"data": [[1.61959848E12, 1.6666666666666667]], "isOverall": false, "label": "challenges -success", "isController": false}, {"data": [[1.61959848E12, 1.6666666666666667]], "isOverall": false, "label": "ecoverseUserIds-success", "isController": false}, {"data": [[1.61959848E12, 1.6666666666666667]], "isOverall": false, "label": "challengeProfile-success", "isController": false}, {"data": [[1.61959848E12, 1.1], [1.61959842E12, 0.5666666666666667]], "isOverall": false, "label": "challengeUserIds-success", "isController": false}, {"data": [[1.61959848E12, 1.4166666666666667], [1.61959842E12, 0.25]], "isOverall": false, "label": "userAvatars-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61959848E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.8166666666666667, "minX": 1.61959842E12, "maxY": 7.516666666666667, "series": [{"data": [[1.61959848E12, 7.516666666666667], [1.61959842E12, 0.8166666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61959848E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

