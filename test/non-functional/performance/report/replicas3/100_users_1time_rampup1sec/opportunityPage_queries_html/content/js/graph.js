/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 110.0, "minX": 0.0, "maxY": 22020.0, "series": [{"data": [[0.0, 5649.0], [0.1, 5649.0], [0.2, 5649.0], [0.3, 5649.0], [0.4, 5649.0], [0.5, 5649.0], [0.6, 5649.0], [0.7, 5649.0], [0.8, 5649.0], [0.9, 5649.0], [1.0, 5729.0], [1.1, 5729.0], [1.2, 5729.0], [1.3, 5729.0], [1.4, 5729.0], [1.5, 5729.0], [1.6, 5729.0], [1.7, 5729.0], [1.8, 5729.0], [1.9, 5729.0], [2.0, 5979.0], [2.1, 5979.0], [2.2, 5979.0], [2.3, 5979.0], [2.4, 5979.0], [2.5, 5979.0], [2.6, 5979.0], [2.7, 5979.0], [2.8, 5979.0], [2.9, 5979.0], [3.0, 6005.0], [3.1, 6005.0], [3.2, 6005.0], [3.3, 6005.0], [3.4, 6005.0], [3.5, 6005.0], [3.6, 6005.0], [3.7, 6005.0], [3.8, 6005.0], [3.9, 6005.0], [4.0, 6010.0], [4.1, 6010.0], [4.2, 6010.0], [4.3, 6010.0], [4.4, 6010.0], [4.5, 6010.0], [4.6, 6010.0], [4.7, 6010.0], [4.8, 6010.0], [4.9, 6010.0], [5.0, 6013.0], [5.1, 6013.0], [5.2, 6013.0], [5.3, 6013.0], [5.4, 6013.0], [5.5, 6013.0], [5.6, 6013.0], [5.7, 6013.0], [5.8, 6013.0], [5.9, 6013.0], [6.0, 6211.0], [6.1, 6211.0], [6.2, 6211.0], [6.3, 6211.0], [6.4, 6211.0], [6.5, 6211.0], [6.6, 6211.0], [6.7, 6211.0], [6.8, 6211.0], [6.9, 6211.0], [7.0, 6273.0], [7.1, 6273.0], [7.2, 6273.0], [7.3, 6273.0], [7.4, 6273.0], [7.5, 6273.0], [7.6, 6273.0], [7.7, 6273.0], [7.8, 6273.0], [7.9, 6273.0], [8.0, 6319.0], [8.1, 6319.0], [8.2, 6319.0], [8.3, 6319.0], [8.4, 6319.0], [8.5, 6319.0], [8.6, 6319.0], [8.7, 6319.0], [8.8, 6319.0], [8.9, 6319.0], [9.0, 6357.0], [9.1, 6357.0], [9.2, 6357.0], [9.3, 6357.0], [9.4, 6357.0], [9.5, 6357.0], [9.6, 6357.0], [9.7, 6357.0], [9.8, 6357.0], [9.9, 6357.0], [10.0, 6427.0], [10.1, 6427.0], [10.2, 6427.0], [10.3, 6427.0], [10.4, 6427.0], [10.5, 6427.0], [10.6, 6427.0], [10.7, 6427.0], [10.8, 6427.0], [10.9, 6427.0], [11.0, 6547.0], [11.1, 6547.0], [11.2, 6547.0], [11.3, 6547.0], [11.4, 6547.0], [11.5, 6547.0], [11.6, 6547.0], [11.7, 6547.0], [11.8, 6547.0], [11.9, 6547.0], [12.0, 6549.0], [12.1, 6549.0], [12.2, 6549.0], [12.3, 6549.0], [12.4, 6549.0], [12.5, 6549.0], [12.6, 6549.0], [12.7, 6549.0], [12.8, 6549.0], [12.9, 6549.0], [13.0, 6637.0], [13.1, 6637.0], [13.2, 6637.0], [13.3, 6637.0], [13.4, 6637.0], [13.5, 6637.0], [13.6, 6637.0], [13.7, 6637.0], [13.8, 6637.0], [13.9, 6637.0], [14.0, 6671.0], [14.1, 6671.0], [14.2, 6671.0], [14.3, 6671.0], [14.4, 6671.0], [14.5, 6671.0], [14.6, 6671.0], [14.7, 6671.0], [14.8, 6671.0], [14.9, 6671.0], [15.0, 6685.0], [15.1, 6685.0], [15.2, 6685.0], [15.3, 6685.0], [15.4, 6685.0], [15.5, 6685.0], [15.6, 6685.0], [15.7, 6685.0], [15.8, 6685.0], [15.9, 6685.0], [16.0, 6689.0], [16.1, 6689.0], [16.2, 6689.0], [16.3, 6689.0], [16.4, 6689.0], [16.5, 6689.0], [16.6, 6689.0], [16.7, 6689.0], [16.8, 6689.0], [16.9, 6689.0], [17.0, 6700.0], [17.1, 6700.0], [17.2, 6700.0], [17.3, 6700.0], [17.4, 6700.0], [17.5, 6700.0], [17.6, 6700.0], [17.7, 6700.0], [17.8, 6700.0], [17.9, 6700.0], [18.0, 6701.0], [18.1, 6701.0], [18.2, 6701.0], [18.3, 6701.0], [18.4, 6701.0], [18.5, 6701.0], [18.6, 6701.0], [18.7, 6701.0], [18.8, 6701.0], [18.9, 6701.0], [19.0, 6735.0], [19.1, 6735.0], [19.2, 6735.0], [19.3, 6735.0], [19.4, 6735.0], [19.5, 6735.0], [19.6, 6735.0], [19.7, 6735.0], [19.8, 6735.0], [19.9, 6735.0], [20.0, 6842.0], [20.1, 6842.0], [20.2, 6842.0], [20.3, 6842.0], [20.4, 6842.0], [20.5, 6842.0], [20.6, 6842.0], [20.7, 6842.0], [20.8, 6842.0], [20.9, 6842.0], [21.0, 6869.0], [21.1, 6869.0], [21.2, 6869.0], [21.3, 6869.0], [21.4, 6869.0], [21.5, 6869.0], [21.6, 6869.0], [21.7, 6869.0], [21.8, 6869.0], [21.9, 6869.0], [22.0, 6870.0], [22.1, 6870.0], [22.2, 6870.0], [22.3, 6870.0], [22.4, 6870.0], [22.5, 6870.0], [22.6, 6870.0], [22.7, 6870.0], [22.8, 6870.0], [22.9, 6870.0], [23.0, 6895.0], [23.1, 6895.0], [23.2, 6895.0], [23.3, 6895.0], [23.4, 6895.0], [23.5, 6895.0], [23.6, 6895.0], [23.7, 6895.0], [23.8, 6895.0], [23.9, 6895.0], [24.0, 6986.0], [24.1, 6986.0], [24.2, 6986.0], [24.3, 6986.0], [24.4, 6986.0], [24.5, 6986.0], [24.6, 6986.0], [24.7, 6986.0], [24.8, 6986.0], [24.9, 6986.0], [25.0, 7005.0], [25.1, 7005.0], [25.2, 7005.0], [25.3, 7005.0], [25.4, 7005.0], [25.5, 7005.0], [25.6, 7005.0], [25.7, 7005.0], [25.8, 7005.0], [25.9, 7005.0], [26.0, 7138.0], [26.1, 7138.0], [26.2, 7138.0], [26.3, 7138.0], [26.4, 7138.0], [26.5, 7138.0], [26.6, 7138.0], [26.7, 7138.0], [26.8, 7138.0], [26.9, 7138.0], [27.0, 7142.0], [27.1, 7142.0], [27.2, 7142.0], [27.3, 7142.0], [27.4, 7142.0], [27.5, 7142.0], [27.6, 7142.0], [27.7, 7142.0], [27.8, 7142.0], [27.9, 7142.0], [28.0, 7338.0], [28.1, 7338.0], [28.2, 7338.0], [28.3, 7338.0], [28.4, 7338.0], [28.5, 7338.0], [28.6, 7338.0], [28.7, 7338.0], [28.8, 7338.0], [28.9, 7338.0], [29.0, 7371.0], [29.1, 7371.0], [29.2, 7371.0], [29.3, 7371.0], [29.4, 7371.0], [29.5, 7371.0], [29.6, 7371.0], [29.7, 7371.0], [29.8, 7371.0], [29.9, 7371.0], [30.0, 7420.0], [30.1, 7420.0], [30.2, 7420.0], [30.3, 7420.0], [30.4, 7420.0], [30.5, 7420.0], [30.6, 7420.0], [30.7, 7420.0], [30.8, 7420.0], [30.9, 7420.0], [31.0, 7422.0], [31.1, 7422.0], [31.2, 7422.0], [31.3, 7422.0], [31.4, 7422.0], [31.5, 7422.0], [31.6, 7422.0], [31.7, 7422.0], [31.8, 7422.0], [31.9, 7422.0], [32.0, 7587.0], [32.1, 7587.0], [32.2, 7587.0], [32.3, 7587.0], [32.4, 7587.0], [32.5, 7587.0], [32.6, 7587.0], [32.7, 7587.0], [32.8, 7587.0], [32.9, 7587.0], [33.0, 8120.0], [33.1, 8120.0], [33.2, 8120.0], [33.3, 8120.0], [33.4, 8120.0], [33.5, 8120.0], [33.6, 8120.0], [33.7, 8120.0], [33.8, 8120.0], [33.9, 8120.0], [34.0, 10100.0], [34.1, 10100.0], [34.2, 10100.0], [34.3, 10100.0], [34.4, 10100.0], [34.5, 10100.0], [34.6, 10100.0], [34.7, 10100.0], [34.8, 10100.0], [34.9, 10100.0], [35.0, 10205.0], [35.1, 10205.0], [35.2, 10205.0], [35.3, 10205.0], [35.4, 10205.0], [35.5, 10205.0], [35.6, 10205.0], [35.7, 10205.0], [35.8, 10205.0], [35.9, 10205.0], [36.0, 10420.0], [36.1, 10420.0], [36.2, 10420.0], [36.3, 10420.0], [36.4, 10420.0], [36.5, 10420.0], [36.6, 10420.0], [36.7, 10420.0], [36.8, 10420.0], [36.9, 10420.0], [37.0, 10560.0], [37.1, 10560.0], [37.2, 10560.0], [37.3, 10560.0], [37.4, 10560.0], [37.5, 10560.0], [37.6, 10560.0], [37.7, 10560.0], [37.8, 10560.0], [37.9, 10560.0], [38.0, 11416.0], [38.1, 11416.0], [38.2, 11416.0], [38.3, 11416.0], [38.4, 11416.0], [38.5, 11416.0], [38.6, 11416.0], [38.7, 11416.0], [38.8, 11416.0], [38.9, 11416.0], [39.0, 11543.0], [39.1, 11543.0], [39.2, 11543.0], [39.3, 11543.0], [39.4, 11543.0], [39.5, 11543.0], [39.6, 11543.0], [39.7, 11543.0], [39.8, 11543.0], [39.9, 11543.0], [40.0, 11565.0], [40.1, 11565.0], [40.2, 11565.0], [40.3, 11565.0], [40.4, 11565.0], [40.5, 11565.0], [40.6, 11565.0], [40.7, 11565.0], [40.8, 11565.0], [40.9, 11565.0], [41.0, 11644.0], [41.1, 11644.0], [41.2, 11644.0], [41.3, 11644.0], [41.4, 11644.0], [41.5, 11644.0], [41.6, 11644.0], [41.7, 11644.0], [41.8, 11644.0], [41.9, 11644.0], [42.0, 12107.0], [42.1, 12107.0], [42.2, 12107.0], [42.3, 12107.0], [42.4, 12107.0], [42.5, 12107.0], [42.6, 12107.0], [42.7, 12107.0], [42.8, 12107.0], [42.9, 12107.0], [43.0, 12260.0], [43.1, 12260.0], [43.2, 12260.0], [43.3, 12260.0], [43.4, 12260.0], [43.5, 12260.0], [43.6, 12260.0], [43.7, 12260.0], [43.8, 12260.0], [43.9, 12260.0], [44.0, 12308.0], [44.1, 12308.0], [44.2, 12308.0], [44.3, 12308.0], [44.4, 12308.0], [44.5, 12308.0], [44.6, 12308.0], [44.7, 12308.0], [44.8, 12308.0], [44.9, 12308.0], [45.0, 12408.0], [45.1, 12408.0], [45.2, 12408.0], [45.3, 12408.0], [45.4, 12408.0], [45.5, 12408.0], [45.6, 12408.0], [45.7, 12408.0], [45.8, 12408.0], [45.9, 12408.0], [46.0, 12603.0], [46.1, 12603.0], [46.2, 12603.0], [46.3, 12603.0], [46.4, 12603.0], [46.5, 12603.0], [46.6, 12603.0], [46.7, 12603.0], [46.8, 12603.0], [46.9, 12603.0], [47.0, 12711.0], [47.1, 12711.0], [47.2, 12711.0], [47.3, 12711.0], [47.4, 12711.0], [47.5, 12711.0], [47.6, 12711.0], [47.7, 12711.0], [47.8, 12711.0], [47.9, 12711.0], [48.0, 12735.0], [48.1, 12735.0], [48.2, 12735.0], [48.3, 12735.0], [48.4, 12735.0], [48.5, 12735.0], [48.6, 12735.0], [48.7, 12735.0], [48.8, 12735.0], [48.9, 12735.0], [49.0, 12780.0], [49.1, 12780.0], [49.2, 12780.0], [49.3, 12780.0], [49.4, 12780.0], [49.5, 12780.0], [49.6, 12780.0], [49.7, 12780.0], [49.8, 12780.0], [49.9, 12780.0], [50.0, 12877.0], [50.1, 12877.0], [50.2, 12877.0], [50.3, 12877.0], [50.4, 12877.0], [50.5, 12877.0], [50.6, 12877.0], [50.7, 12877.0], [50.8, 12877.0], [50.9, 12877.0], [51.0, 12907.0], [51.1, 12907.0], [51.2, 12907.0], [51.3, 12907.0], [51.4, 12907.0], [51.5, 12907.0], [51.6, 12907.0], [51.7, 12907.0], [51.8, 12907.0], [51.9, 12907.0], [52.0, 12969.0], [52.1, 12969.0], [52.2, 12969.0], [52.3, 12969.0], [52.4, 12969.0], [52.5, 12969.0], [52.6, 12969.0], [52.7, 12969.0], [52.8, 12969.0], [52.9, 12969.0], [53.0, 13066.0], [53.1, 13066.0], [53.2, 13066.0], [53.3, 13066.0], [53.4, 13066.0], [53.5, 13066.0], [53.6, 13066.0], [53.7, 13066.0], [53.8, 13066.0], [53.9, 13066.0], [54.0, 13105.0], [54.1, 13105.0], [54.2, 13105.0], [54.3, 13105.0], [54.4, 13105.0], [54.5, 13105.0], [54.6, 13105.0], [54.7, 13105.0], [54.8, 13105.0], [54.9, 13105.0], [55.0, 13146.0], [55.1, 13146.0], [55.2, 13146.0], [55.3, 13146.0], [55.4, 13146.0], [55.5, 13146.0], [55.6, 13146.0], [55.7, 13146.0], [55.8, 13146.0], [55.9, 13146.0], [56.0, 13163.0], [56.1, 13163.0], [56.2, 13163.0], [56.3, 13163.0], [56.4, 13163.0], [56.5, 13163.0], [56.6, 13163.0], [56.7, 13163.0], [56.8, 13163.0], [56.9, 13163.0], [57.0, 13284.0], [57.1, 13284.0], [57.2, 13284.0], [57.3, 13284.0], [57.4, 13284.0], [57.5, 13284.0], [57.6, 13284.0], [57.7, 13284.0], [57.8, 13284.0], [57.9, 13284.0], [58.0, 13310.0], [58.1, 13310.0], [58.2, 13310.0], [58.3, 13310.0], [58.4, 13310.0], [58.5, 13310.0], [58.6, 13310.0], [58.7, 13310.0], [58.8, 13310.0], [58.9, 13310.0], [59.0, 13346.0], [59.1, 13346.0], [59.2, 13346.0], [59.3, 13346.0], [59.4, 13346.0], [59.5, 13346.0], [59.6, 13346.0], [59.7, 13346.0], [59.8, 13346.0], [59.9, 13346.0], [60.0, 13408.0], [60.1, 13408.0], [60.2, 13408.0], [60.3, 13408.0], [60.4, 13408.0], [60.5, 13408.0], [60.6, 13408.0], [60.7, 13408.0], [60.8, 13408.0], [60.9, 13408.0], [61.0, 13442.0], [61.1, 13442.0], [61.2, 13442.0], [61.3, 13442.0], [61.4, 13442.0], [61.5, 13442.0], [61.6, 13442.0], [61.7, 13442.0], [61.8, 13442.0], [61.9, 13442.0], [62.0, 13486.0], [62.1, 13486.0], [62.2, 13486.0], [62.3, 13486.0], [62.4, 13486.0], [62.5, 13486.0], [62.6, 13486.0], [62.7, 13486.0], [62.8, 13486.0], [62.9, 13486.0], [63.0, 13509.0], [63.1, 13509.0], [63.2, 13509.0], [63.3, 13509.0], [63.4, 13509.0], [63.5, 13509.0], [63.6, 13509.0], [63.7, 13509.0], [63.8, 13509.0], [63.9, 13509.0], [64.0, 13530.0], [64.1, 13530.0], [64.2, 13530.0], [64.3, 13530.0], [64.4, 13530.0], [64.5, 13530.0], [64.6, 13530.0], [64.7, 13530.0], [64.8, 13530.0], [64.9, 13530.0], [65.0, 13635.0], [65.1, 13635.0], [65.2, 13635.0], [65.3, 13635.0], [65.4, 13635.0], [65.5, 13635.0], [65.6, 13635.0], [65.7, 13635.0], [65.8, 13635.0], [65.9, 13635.0], [66.0, 13637.0], [66.1, 13637.0], [66.2, 13637.0], [66.3, 13637.0], [66.4, 13637.0], [66.5, 13637.0], [66.6, 13637.0], [66.7, 13637.0], [66.8, 13637.0], [66.9, 13637.0], [67.0, 13700.0], [67.1, 13700.0], [67.2, 13700.0], [67.3, 13700.0], [67.4, 13700.0], [67.5, 13700.0], [67.6, 13700.0], [67.7, 13700.0], [67.8, 13700.0], [67.9, 13700.0], [68.0, 13706.0], [68.1, 13706.0], [68.2, 13706.0], [68.3, 13706.0], [68.4, 13706.0], [68.5, 13706.0], [68.6, 13706.0], [68.7, 13706.0], [68.8, 13706.0], [68.9, 13706.0], [69.0, 13755.0], [69.1, 13755.0], [69.2, 13755.0], [69.3, 13755.0], [69.4, 13755.0], [69.5, 13755.0], [69.6, 13755.0], [69.7, 13755.0], [69.8, 13755.0], [69.9, 13755.0], [70.0, 13764.0], [70.1, 13764.0], [70.2, 13764.0], [70.3, 13764.0], [70.4, 13764.0], [70.5, 13764.0], [70.6, 13764.0], [70.7, 13764.0], [70.8, 13764.0], [70.9, 13764.0], [71.0, 13816.0], [71.1, 13816.0], [71.2, 13816.0], [71.3, 13816.0], [71.4, 13816.0], [71.5, 13816.0], [71.6, 13816.0], [71.7, 13816.0], [71.8, 13816.0], [71.9, 13816.0], [72.0, 13883.0], [72.1, 13883.0], [72.2, 13883.0], [72.3, 13883.0], [72.4, 13883.0], [72.5, 13883.0], [72.6, 13883.0], [72.7, 13883.0], [72.8, 13883.0], [72.9, 13883.0], [73.0, 13920.0], [73.1, 13920.0], [73.2, 13920.0], [73.3, 13920.0], [73.4, 13920.0], [73.5, 13920.0], [73.6, 13920.0], [73.7, 13920.0], [73.8, 13920.0], [73.9, 13920.0], [74.0, 13922.0], [74.1, 13922.0], [74.2, 13922.0], [74.3, 13922.0], [74.4, 13922.0], [74.5, 13922.0], [74.6, 13922.0], [74.7, 13922.0], [74.8, 13922.0], [74.9, 13922.0], [75.0, 13937.0], [75.1, 13937.0], [75.2, 13937.0], [75.3, 13937.0], [75.4, 13937.0], [75.5, 13937.0], [75.6, 13937.0], [75.7, 13937.0], [75.8, 13937.0], [75.9, 13937.0], [76.0, 14006.0], [76.1, 14006.0], [76.2, 14006.0], [76.3, 14006.0], [76.4, 14006.0], [76.5, 14006.0], [76.6, 14006.0], [76.7, 14006.0], [76.8, 14006.0], [76.9, 14006.0], [77.0, 14057.0], [77.1, 14057.0], [77.2, 14057.0], [77.3, 14057.0], [77.4, 14057.0], [77.5, 14057.0], [77.6, 14057.0], [77.7, 14057.0], [77.8, 14057.0], [77.9, 14057.0], [78.0, 14062.0], [78.1, 14062.0], [78.2, 14062.0], [78.3, 14062.0], [78.4, 14062.0], [78.5, 14062.0], [78.6, 14062.0], [78.7, 14062.0], [78.8, 14062.0], [78.9, 14062.0], [79.0, 14074.0], [79.1, 14074.0], [79.2, 14074.0], [79.3, 14074.0], [79.4, 14074.0], [79.5, 14074.0], [79.6, 14074.0], [79.7, 14074.0], [79.8, 14074.0], [79.9, 14074.0], [80.0, 14155.0], [80.1, 14155.0], [80.2, 14155.0], [80.3, 14155.0], [80.4, 14155.0], [80.5, 14155.0], [80.6, 14155.0], [80.7, 14155.0], [80.8, 14155.0], [80.9, 14155.0], [81.0, 14289.0], [81.1, 14289.0], [81.2, 14289.0], [81.3, 14289.0], [81.4, 14289.0], [81.5, 14289.0], [81.6, 14289.0], [81.7, 14289.0], [81.8, 14289.0], [81.9, 14289.0], [82.0, 14333.0], [82.1, 14333.0], [82.2, 14333.0], [82.3, 14333.0], [82.4, 14333.0], [82.5, 14333.0], [82.6, 14333.0], [82.7, 14333.0], [82.8, 14333.0], [82.9, 14333.0], [83.0, 14358.0], [83.1, 14358.0], [83.2, 14358.0], [83.3, 14358.0], [83.4, 14358.0], [83.5, 14358.0], [83.6, 14358.0], [83.7, 14358.0], [83.8, 14358.0], [83.9, 14358.0], [84.0, 14363.0], [84.1, 14363.0], [84.2, 14363.0], [84.3, 14363.0], [84.4, 14363.0], [84.5, 14363.0], [84.6, 14363.0], [84.7, 14363.0], [84.8, 14363.0], [84.9, 14363.0], [85.0, 14439.0], [85.1, 14439.0], [85.2, 14439.0], [85.3, 14439.0], [85.4, 14439.0], [85.5, 14439.0], [85.6, 14439.0], [85.7, 14439.0], [85.8, 14439.0], [85.9, 14439.0], [86.0, 14454.0], [86.1, 14454.0], [86.2, 14454.0], [86.3, 14454.0], [86.4, 14454.0], [86.5, 14454.0], [86.6, 14454.0], [86.7, 14454.0], [86.8, 14454.0], [86.9, 14454.0], [87.0, 14503.0], [87.1, 14503.0], [87.2, 14503.0], [87.3, 14503.0], [87.4, 14503.0], [87.5, 14503.0], [87.6, 14503.0], [87.7, 14503.0], [87.8, 14503.0], [87.9, 14503.0], [88.0, 14560.0], [88.1, 14560.0], [88.2, 14560.0], [88.3, 14560.0], [88.4, 14560.0], [88.5, 14560.0], [88.6, 14560.0], [88.7, 14560.0], [88.8, 14560.0], [88.9, 14560.0], [89.0, 14680.0], [89.1, 14680.0], [89.2, 14680.0], [89.3, 14680.0], [89.4, 14680.0], [89.5, 14680.0], [89.6, 14680.0], [89.7, 14680.0], [89.8, 14680.0], [89.9, 14680.0], [90.0, 14757.0], [90.1, 14757.0], [90.2, 14757.0], [90.3, 14757.0], [90.4, 14757.0], [90.5, 14757.0], [90.6, 14757.0], [90.7, 14757.0], [90.8, 14757.0], [90.9, 14757.0], [91.0, 14774.0], [91.1, 14774.0], [91.2, 14774.0], [91.3, 14774.0], [91.4, 14774.0], [91.5, 14774.0], [91.6, 14774.0], [91.7, 14774.0], [91.8, 14774.0], [91.9, 14774.0], [92.0, 15048.0], [92.1, 15048.0], [92.2, 15048.0], [92.3, 15048.0], [92.4, 15048.0], [92.5, 15048.0], [92.6, 15048.0], [92.7, 15048.0], [92.8, 15048.0], [92.9, 15048.0], [93.0, 15058.0], [93.1, 15058.0], [93.2, 15058.0], [93.3, 15058.0], [93.4, 15058.0], [93.5, 15058.0], [93.6, 15058.0], [93.7, 15058.0], [93.8, 15058.0], [93.9, 15058.0], [94.0, 15112.0], [94.1, 15112.0], [94.2, 15112.0], [94.3, 15112.0], [94.4, 15112.0], [94.5, 15112.0], [94.6, 15112.0], [94.7, 15112.0], [94.8, 15112.0], [94.9, 15112.0], [95.0, 15486.0], [95.1, 15486.0], [95.2, 15486.0], [95.3, 15486.0], [95.4, 15486.0], [95.5, 15486.0], [95.6, 15486.0], [95.7, 15486.0], [95.8, 15486.0], [95.9, 15486.0], [96.0, 15565.0], [96.1, 15565.0], [96.2, 15565.0], [96.3, 15565.0], [96.4, 15565.0], [96.5, 15565.0], [96.6, 15565.0], [96.7, 15565.0], [96.8, 15565.0], [96.9, 15565.0], [97.0, 15588.0], [97.1, 15588.0], [97.2, 15588.0], [97.3, 15588.0], [97.4, 15588.0], [97.5, 15588.0], [97.6, 15588.0], [97.7, 15588.0], [97.8, 15588.0], [97.9, 15588.0], [98.0, 15998.0], [98.1, 15998.0], [98.2, 15998.0], [98.3, 15998.0], [98.4, 15998.0], [98.5, 15998.0], [98.6, 15998.0], [98.7, 15998.0], [98.8, 15998.0], [98.9, 15998.0], [99.0, 16129.0], [99.1, 16129.0], [99.2, 16129.0], [99.3, 16129.0], [99.4, 16129.0], [99.5, 16129.0], [99.6, 16129.0], [99.7, 16129.0], [99.8, 16129.0], [99.9, 16129.0]], "isOverall": false, "label": "challengeUserIds", "isController": false}, {"data": [[0.0, 110.0], [0.1, 110.0], [0.2, 110.0], [0.3, 110.0], [0.4, 110.0], [0.5, 110.0], [0.6, 110.0], [0.7, 110.0], [0.8, 110.0], [0.9, 110.0], [1.0, 113.0], [1.1, 113.0], [1.2, 113.0], [1.3, 113.0], [1.4, 113.0], [1.5, 113.0], [1.6, 113.0], [1.7, 113.0], [1.8, 113.0], [1.9, 113.0], [2.0, 115.0], [2.1, 115.0], [2.2, 115.0], [2.3, 115.0], [2.4, 115.0], [2.5, 115.0], [2.6, 115.0], [2.7, 115.0], [2.8, 115.0], [2.9, 115.0], [3.0, 117.0], [3.1, 117.0], [3.2, 117.0], [3.3, 117.0], [3.4, 117.0], [3.5, 117.0], [3.6, 117.0], [3.7, 117.0], [3.8, 117.0], [3.9, 117.0], [4.0, 117.0], [4.1, 117.0], [4.2, 117.0], [4.3, 117.0], [4.4, 117.0], [4.5, 117.0], [4.6, 117.0], [4.7, 117.0], [4.8, 117.0], [4.9, 117.0], [5.0, 120.0], [5.1, 120.0], [5.2, 120.0], [5.3, 120.0], [5.4, 120.0], [5.5, 120.0], [5.6, 120.0], [5.7, 120.0], [5.8, 120.0], [5.9, 120.0], [6.0, 120.0], [6.1, 120.0], [6.2, 120.0], [6.3, 120.0], [6.4, 120.0], [6.5, 120.0], [6.6, 120.0], [6.7, 120.0], [6.8, 120.0], [6.9, 120.0], [7.0, 121.0], [7.1, 121.0], [7.2, 121.0], [7.3, 121.0], [7.4, 121.0], [7.5, 121.0], [7.6, 121.0], [7.7, 121.0], [7.8, 121.0], [7.9, 121.0], [8.0, 122.0], [8.1, 122.0], [8.2, 122.0], [8.3, 122.0], [8.4, 122.0], [8.5, 122.0], [8.6, 122.0], [8.7, 122.0], [8.8, 122.0], [8.9, 122.0], [9.0, 122.0], [9.1, 122.0], [9.2, 122.0], [9.3, 122.0], [9.4, 122.0], [9.5, 122.0], [9.6, 122.0], [9.7, 122.0], [9.8, 122.0], [9.9, 122.0], [10.0, 122.0], [10.1, 122.0], [10.2, 122.0], [10.3, 122.0], [10.4, 122.0], [10.5, 122.0], [10.6, 122.0], [10.7, 122.0], [10.8, 122.0], [10.9, 122.0], [11.0, 129.0], [11.1, 129.0], [11.2, 129.0], [11.3, 129.0], [11.4, 129.0], [11.5, 129.0], [11.6, 129.0], [11.7, 129.0], [11.8, 129.0], [11.9, 129.0], [12.0, 130.0], [12.1, 130.0], [12.2, 130.0], [12.3, 130.0], [12.4, 130.0], [12.5, 130.0], [12.6, 130.0], [12.7, 130.0], [12.8, 130.0], [12.9, 130.0], [13.0, 132.0], [13.1, 132.0], [13.2, 132.0], [13.3, 132.0], [13.4, 132.0], [13.5, 132.0], [13.6, 132.0], [13.7, 132.0], [13.8, 132.0], [13.9, 132.0], [14.0, 133.0], [14.1, 133.0], [14.2, 133.0], [14.3, 133.0], [14.4, 133.0], [14.5, 133.0], [14.6, 133.0], [14.7, 133.0], [14.8, 133.0], [14.9, 133.0], [15.0, 138.0], [15.1, 138.0], [15.2, 138.0], [15.3, 138.0], [15.4, 138.0], [15.5, 138.0], [15.6, 138.0], [15.7, 138.0], [15.8, 138.0], [15.9, 138.0], [16.0, 138.0], [16.1, 138.0], [16.2, 138.0], [16.3, 138.0], [16.4, 138.0], [16.5, 138.0], [16.6, 138.0], [16.7, 138.0], [16.8, 138.0], [16.9, 138.0], [17.0, 144.0], [17.1, 144.0], [17.2, 144.0], [17.3, 144.0], [17.4, 144.0], [17.5, 144.0], [17.6, 144.0], [17.7, 144.0], [17.8, 144.0], [17.9, 144.0], [18.0, 146.0], [18.1, 146.0], [18.2, 146.0], [18.3, 146.0], [18.4, 146.0], [18.5, 146.0], [18.6, 146.0], [18.7, 146.0], [18.8, 146.0], [18.9, 146.0], [19.0, 147.0], [19.1, 147.0], [19.2, 147.0], [19.3, 147.0], [19.4, 147.0], [19.5, 147.0], [19.6, 147.0], [19.7, 147.0], [19.8, 147.0], [19.9, 147.0], [20.0, 149.0], [20.1, 149.0], [20.2, 149.0], [20.3, 149.0], [20.4, 149.0], [20.5, 149.0], [20.6, 149.0], [20.7, 149.0], [20.8, 149.0], [20.9, 149.0], [21.0, 154.0], [21.1, 154.0], [21.2, 154.0], [21.3, 154.0], [21.4, 154.0], [21.5, 154.0], [21.6, 154.0], [21.7, 154.0], [21.8, 154.0], [21.9, 154.0], [22.0, 156.0], [22.1, 156.0], [22.2, 156.0], [22.3, 156.0], [22.4, 156.0], [22.5, 156.0], [22.6, 156.0], [22.7, 156.0], [22.8, 156.0], [22.9, 156.0], [23.0, 161.0], [23.1, 161.0], [23.2, 161.0], [23.3, 161.0], [23.4, 161.0], [23.5, 161.0], [23.6, 161.0], [23.7, 161.0], [23.8, 161.0], [23.9, 161.0], [24.0, 162.0], [24.1, 162.0], [24.2, 162.0], [24.3, 162.0], [24.4, 162.0], [24.5, 162.0], [24.6, 162.0], [24.7, 162.0], [24.8, 162.0], [24.9, 162.0], [25.0, 167.0], [25.1, 167.0], [25.2, 167.0], [25.3, 167.0], [25.4, 167.0], [25.5, 167.0], [25.6, 167.0], [25.7, 167.0], [25.8, 167.0], [25.9, 167.0], [26.0, 169.0], [26.1, 169.0], [26.2, 169.0], [26.3, 169.0], [26.4, 169.0], [26.5, 169.0], [26.6, 169.0], [26.7, 169.0], [26.8, 169.0], [26.9, 169.0], [27.0, 171.0], [27.1, 171.0], [27.2, 171.0], [27.3, 171.0], [27.4, 171.0], [27.5, 171.0], [27.6, 171.0], [27.7, 171.0], [27.8, 171.0], [27.9, 171.0], [28.0, 172.0], [28.1, 172.0], [28.2, 172.0], [28.3, 172.0], [28.4, 172.0], [28.5, 172.0], [28.6, 172.0], [28.7, 172.0], [28.8, 172.0], [28.9, 172.0], [29.0, 177.0], [29.1, 177.0], [29.2, 177.0], [29.3, 177.0], [29.4, 177.0], [29.5, 177.0], [29.6, 177.0], [29.7, 177.0], [29.8, 177.0], [29.9, 177.0], [30.0, 179.0], [30.1, 179.0], [30.2, 179.0], [30.3, 179.0], [30.4, 179.0], [30.5, 179.0], [30.6, 179.0], [30.7, 179.0], [30.8, 179.0], [30.9, 179.0], [31.0, 204.0], [31.1, 204.0], [31.2, 204.0], [31.3, 204.0], [31.4, 204.0], [31.5, 204.0], [31.6, 204.0], [31.7, 204.0], [31.8, 204.0], [31.9, 204.0], [32.0, 230.0], [32.1, 230.0], [32.2, 230.0], [32.3, 230.0], [32.4, 230.0], [32.5, 230.0], [32.6, 230.0], [32.7, 230.0], [32.8, 230.0], [32.9, 230.0], [33.0, 262.0], [33.1, 262.0], [33.2, 262.0], [33.3, 262.0], [33.4, 262.0], [33.5, 262.0], [33.6, 262.0], [33.7, 262.0], [33.8, 262.0], [33.9, 262.0], [34.0, 268.0], [34.1, 268.0], [34.2, 268.0], [34.3, 268.0], [34.4, 268.0], [34.5, 268.0], [34.6, 268.0], [34.7, 268.0], [34.8, 268.0], [34.9, 268.0], [35.0, 357.0], [35.1, 357.0], [35.2, 357.0], [35.3, 357.0], [35.4, 357.0], [35.5, 357.0], [35.6, 357.0], [35.7, 357.0], [35.8, 357.0], [35.9, 357.0], [36.0, 359.0], [36.1, 359.0], [36.2, 359.0], [36.3, 359.0], [36.4, 359.0], [36.5, 359.0], [36.6, 359.0], [36.7, 359.0], [36.8, 359.0], [36.9, 359.0], [37.0, 447.0], [37.1, 447.0], [37.2, 447.0], [37.3, 447.0], [37.4, 447.0], [37.5, 447.0], [37.6, 447.0], [37.7, 447.0], [37.8, 447.0], [37.9, 447.0], [38.0, 583.0], [38.1, 583.0], [38.2, 583.0], [38.3, 583.0], [38.4, 583.0], [38.5, 583.0], [38.6, 583.0], [38.7, 583.0], [38.8, 583.0], [38.9, 583.0], [39.0, 681.0], [39.1, 681.0], [39.2, 681.0], [39.3, 681.0], [39.4, 681.0], [39.5, 681.0], [39.6, 681.0], [39.7, 681.0], [39.8, 681.0], [39.9, 681.0], [40.0, 794.0], [40.1, 794.0], [40.2, 794.0], [40.3, 794.0], [40.4, 794.0], [40.5, 794.0], [40.6, 794.0], [40.7, 794.0], [40.8, 794.0], [40.9, 794.0], [41.0, 983.0], [41.1, 983.0], [41.2, 983.0], [41.3, 983.0], [41.4, 983.0], [41.5, 983.0], [41.6, 983.0], [41.7, 983.0], [41.8, 983.0], [41.9, 983.0], [42.0, 1089.0], [42.1, 1089.0], [42.2, 1089.0], [42.3, 1089.0], [42.4, 1089.0], [42.5, 1089.0], [42.6, 1089.0], [42.7, 1089.0], [42.8, 1089.0], [42.9, 1089.0], [43.0, 1253.0], [43.1, 1253.0], [43.2, 1253.0], [43.3, 1253.0], [43.4, 1253.0], [43.5, 1253.0], [43.6, 1253.0], [43.7, 1253.0], [43.8, 1253.0], [43.9, 1253.0], [44.0, 1285.0], [44.1, 1285.0], [44.2, 1285.0], [44.3, 1285.0], [44.4, 1285.0], [44.5, 1285.0], [44.6, 1285.0], [44.7, 1285.0], [44.8, 1285.0], [44.9, 1285.0], [45.0, 1344.0], [45.1, 1344.0], [45.2, 1344.0], [45.3, 1344.0], [45.4, 1344.0], [45.5, 1344.0], [45.6, 1344.0], [45.7, 1344.0], [45.8, 1344.0], [45.9, 1344.0], [46.0, 1387.0], [46.1, 1387.0], [46.2, 1387.0], [46.3, 1387.0], [46.4, 1387.0], [46.5, 1387.0], [46.6, 1387.0], [46.7, 1387.0], [46.8, 1387.0], [46.9, 1387.0], [47.0, 1452.0], [47.1, 1452.0], [47.2, 1452.0], [47.3, 1452.0], [47.4, 1452.0], [47.5, 1452.0], [47.6, 1452.0], [47.7, 1452.0], [47.8, 1452.0], [47.9, 1452.0], [48.0, 1479.0], [48.1, 1479.0], [48.2, 1479.0], [48.3, 1479.0], [48.4, 1479.0], [48.5, 1479.0], [48.6, 1479.0], [48.7, 1479.0], [48.8, 1479.0], [48.9, 1479.0], [49.0, 1515.0], [49.1, 1515.0], [49.2, 1515.0], [49.3, 1515.0], [49.4, 1515.0], [49.5, 1515.0], [49.6, 1515.0], [49.7, 1515.0], [49.8, 1515.0], [49.9, 1515.0], [50.0, 1577.0], [50.1, 1577.0], [50.2, 1577.0], [50.3, 1577.0], [50.4, 1577.0], [50.5, 1577.0], [50.6, 1577.0], [50.7, 1577.0], [50.8, 1577.0], [50.9, 1577.0], [51.0, 1608.0], [51.1, 1608.0], [51.2, 1608.0], [51.3, 1608.0], [51.4, 1608.0], [51.5, 1608.0], [51.6, 1608.0], [51.7, 1608.0], [51.8, 1608.0], [51.9, 1608.0], [52.0, 1632.0], [52.1, 1632.0], [52.2, 1632.0], [52.3, 1632.0], [52.4, 1632.0], [52.5, 1632.0], [52.6, 1632.0], [52.7, 1632.0], [52.8, 1632.0], [52.9, 1632.0], [53.0, 1666.0], [53.1, 1666.0], [53.2, 1666.0], [53.3, 1666.0], [53.4, 1666.0], [53.5, 1666.0], [53.6, 1666.0], [53.7, 1666.0], [53.8, 1666.0], [53.9, 1666.0], [54.0, 1677.0], [54.1, 1677.0], [54.2, 1677.0], [54.3, 1677.0], [54.4, 1677.0], [54.5, 1677.0], [54.6, 1677.0], [54.7, 1677.0], [54.8, 1677.0], [54.9, 1677.0], [55.0, 1916.0], [55.1, 1916.0], [55.2, 1916.0], [55.3, 1916.0], [55.4, 1916.0], [55.5, 1916.0], [55.6, 1916.0], [55.7, 1916.0], [55.8, 1916.0], [55.9, 1916.0], [56.0, 2002.0], [56.1, 2002.0], [56.2, 2002.0], [56.3, 2002.0], [56.4, 2002.0], [56.5, 2002.0], [56.6, 2002.0], [56.7, 2002.0], [56.8, 2002.0], [56.9, 2002.0], [57.0, 2043.0], [57.1, 2043.0], [57.2, 2043.0], [57.3, 2043.0], [57.4, 2043.0], [57.5, 2043.0], [57.6, 2043.0], [57.7, 2043.0], [57.8, 2043.0], [57.9, 2043.0], [58.0, 2116.0], [58.1, 2116.0], [58.2, 2116.0], [58.3, 2116.0], [58.4, 2116.0], [58.5, 2116.0], [58.6, 2116.0], [58.7, 2116.0], [58.8, 2116.0], [58.9, 2116.0], [59.0, 2498.0], [59.1, 2498.0], [59.2, 2498.0], [59.3, 2498.0], [59.4, 2498.0], [59.5, 2498.0], [59.6, 2498.0], [59.7, 2498.0], [59.8, 2498.0], [59.9, 2498.0], [60.0, 2604.0], [60.1, 2604.0], [60.2, 2604.0], [60.3, 2604.0], [60.4, 2604.0], [60.5, 2604.0], [60.6, 2604.0], [60.7, 2604.0], [60.8, 2604.0], [60.9, 2604.0], [61.0, 2879.0], [61.1, 2879.0], [61.2, 2879.0], [61.3, 2879.0], [61.4, 2879.0], [61.5, 2879.0], [61.6, 2879.0], [61.7, 2879.0], [61.8, 2879.0], [61.9, 2879.0], [62.0, 3093.0], [62.1, 3093.0], [62.2, 3093.0], [62.3, 3093.0], [62.4, 3093.0], [62.5, 3093.0], [62.6, 3093.0], [62.7, 3093.0], [62.8, 3093.0], [62.9, 3093.0], [63.0, 3094.0], [63.1, 3094.0], [63.2, 3094.0], [63.3, 3094.0], [63.4, 3094.0], [63.5, 3094.0], [63.6, 3094.0], [63.7, 3094.0], [63.8, 3094.0], [63.9, 3094.0], [64.0, 3154.0], [64.1, 3154.0], [64.2, 3154.0], [64.3, 3154.0], [64.4, 3154.0], [64.5, 3154.0], [64.6, 3154.0], [64.7, 3154.0], [64.8, 3154.0], [64.9, 3154.0], [65.0, 3177.0], [65.1, 3177.0], [65.2, 3177.0], [65.3, 3177.0], [65.4, 3177.0], [65.5, 3177.0], [65.6, 3177.0], [65.7, 3177.0], [65.8, 3177.0], [65.9, 3177.0], [66.0, 3367.0], [66.1, 3367.0], [66.2, 3367.0], [66.3, 3367.0], [66.4, 3367.0], [66.5, 3367.0], [66.6, 3367.0], [66.7, 3367.0], [66.8, 3367.0], [66.9, 3367.0], [67.0, 3687.0], [67.1, 3687.0], [67.2, 3687.0], [67.3, 3687.0], [67.4, 3687.0], [67.5, 3687.0], [67.6, 3687.0], [67.7, 3687.0], [67.8, 3687.0], [67.9, 3687.0], [68.0, 3743.0], [68.1, 3743.0], [68.2, 3743.0], [68.3, 3743.0], [68.4, 3743.0], [68.5, 3743.0], [68.6, 3743.0], [68.7, 3743.0], [68.8, 3743.0], [68.9, 3743.0], [69.0, 3744.0], [69.1, 3744.0], [69.2, 3744.0], [69.3, 3744.0], [69.4, 3744.0], [69.5, 3744.0], [69.6, 3744.0], [69.7, 3744.0], [69.8, 3744.0], [69.9, 3744.0], [70.0, 3821.0], [70.1, 3821.0], [70.2, 3821.0], [70.3, 3821.0], [70.4, 3821.0], [70.5, 3821.0], [70.6, 3821.0], [70.7, 3821.0], [70.8, 3821.0], [70.9, 3821.0], [71.0, 3872.0], [71.1, 3872.0], [71.2, 3872.0], [71.3, 3872.0], [71.4, 3872.0], [71.5, 3872.0], [71.6, 3872.0], [71.7, 3872.0], [71.8, 3872.0], [71.9, 3872.0], [72.0, 3919.0], [72.1, 3919.0], [72.2, 3919.0], [72.3, 3919.0], [72.4, 3919.0], [72.5, 3919.0], [72.6, 3919.0], [72.7, 3919.0], [72.8, 3919.0], [72.9, 3919.0], [73.0, 4114.0], [73.1, 4114.0], [73.2, 4114.0], [73.3, 4114.0], [73.4, 4114.0], [73.5, 4114.0], [73.6, 4114.0], [73.7, 4114.0], [73.8, 4114.0], [73.9, 4114.0], [74.0, 4418.0], [74.1, 4418.0], [74.2, 4418.0], [74.3, 4418.0], [74.4, 4418.0], [74.5, 4418.0], [74.6, 4418.0], [74.7, 4418.0], [74.8, 4418.0], [74.9, 4418.0], [75.0, 4652.0], [75.1, 4652.0], [75.2, 4652.0], [75.3, 4652.0], [75.4, 4652.0], [75.5, 4652.0], [75.6, 4652.0], [75.7, 4652.0], [75.8, 4652.0], [75.9, 4652.0], [76.0, 4697.0], [76.1, 4697.0], [76.2, 4697.0], [76.3, 4697.0], [76.4, 4697.0], [76.5, 4697.0], [76.6, 4697.0], [76.7, 4697.0], [76.8, 4697.0], [76.9, 4697.0], [77.0, 4725.0], [77.1, 4725.0], [77.2, 4725.0], [77.3, 4725.0], [77.4, 4725.0], [77.5, 4725.0], [77.6, 4725.0], [77.7, 4725.0], [77.8, 4725.0], [77.9, 4725.0], [78.0, 4814.0], [78.1, 4814.0], [78.2, 4814.0], [78.3, 4814.0], [78.4, 4814.0], [78.5, 4814.0], [78.6, 4814.0], [78.7, 4814.0], [78.8, 4814.0], [78.9, 4814.0], [79.0, 4879.0], [79.1, 4879.0], [79.2, 4879.0], [79.3, 4879.0], [79.4, 4879.0], [79.5, 4879.0], [79.6, 4879.0], [79.7, 4879.0], [79.8, 4879.0], [79.9, 4879.0], [80.0, 4958.0], [80.1, 4958.0], [80.2, 4958.0], [80.3, 4958.0], [80.4, 4958.0], [80.5, 4958.0], [80.6, 4958.0], [80.7, 4958.0], [80.8, 4958.0], [80.9, 4958.0], [81.0, 5004.0], [81.1, 5004.0], [81.2, 5004.0], [81.3, 5004.0], [81.4, 5004.0], [81.5, 5004.0], [81.6, 5004.0], [81.7, 5004.0], [81.8, 5004.0], [81.9, 5004.0], [82.0, 5007.0], [82.1, 5007.0], [82.2, 5007.0], [82.3, 5007.0], [82.4, 5007.0], [82.5, 5007.0], [82.6, 5007.0], [82.7, 5007.0], [82.8, 5007.0], [82.9, 5007.0], [83.0, 5086.0], [83.1, 5086.0], [83.2, 5086.0], [83.3, 5086.0], [83.4, 5086.0], [83.5, 5086.0], [83.6, 5086.0], [83.7, 5086.0], [83.8, 5086.0], [83.9, 5086.0], [84.0, 5114.0], [84.1, 5114.0], [84.2, 5114.0], [84.3, 5114.0], [84.4, 5114.0], [84.5, 5114.0], [84.6, 5114.0], [84.7, 5114.0], [84.8, 5114.0], [84.9, 5114.0], [85.0, 5133.0], [85.1, 5133.0], [85.2, 5133.0], [85.3, 5133.0], [85.4, 5133.0], [85.5, 5133.0], [85.6, 5133.0], [85.7, 5133.0], [85.8, 5133.0], [85.9, 5133.0], [86.0, 5151.0], [86.1, 5151.0], [86.2, 5151.0], [86.3, 5151.0], [86.4, 5151.0], [86.5, 5151.0], [86.6, 5151.0], [86.7, 5151.0], [86.8, 5151.0], [86.9, 5151.0], [87.0, 5382.0], [87.1, 5382.0], [87.2, 5382.0], [87.3, 5382.0], [87.4, 5382.0], [87.5, 5382.0], [87.6, 5382.0], [87.7, 5382.0], [87.8, 5382.0], [87.9, 5382.0], [88.0, 5392.0], [88.1, 5392.0], [88.2, 5392.0], [88.3, 5392.0], [88.4, 5392.0], [88.5, 5392.0], [88.6, 5392.0], [88.7, 5392.0], [88.8, 5392.0], [88.9, 5392.0], [89.0, 5402.0], [89.1, 5402.0], [89.2, 5402.0], [89.3, 5402.0], [89.4, 5402.0], [89.5, 5402.0], [89.6, 5402.0], [89.7, 5402.0], [89.8, 5402.0], [89.9, 5402.0], [90.0, 5503.0], [90.1, 5503.0], [90.2, 5503.0], [90.3, 5503.0], [90.4, 5503.0], [90.5, 5503.0], [90.6, 5503.0], [90.7, 5503.0], [90.8, 5503.0], [90.9, 5503.0], [91.0, 5636.0], [91.1, 5636.0], [91.2, 5636.0], [91.3, 5636.0], [91.4, 5636.0], [91.5, 5636.0], [91.6, 5636.0], [91.7, 5636.0], [91.8, 5636.0], [91.9, 5636.0], [92.0, 5940.0], [92.1, 5940.0], [92.2, 5940.0], [92.3, 5940.0], [92.4, 5940.0], [92.5, 5940.0], [92.6, 5940.0], [92.7, 5940.0], [92.8, 5940.0], [92.9, 5940.0], [93.0, 5949.0], [93.1, 5949.0], [93.2, 5949.0], [93.3, 5949.0], [93.4, 5949.0], [93.5, 5949.0], [93.6, 5949.0], [93.7, 5949.0], [93.8, 5949.0], [93.9, 5949.0], [94.0, 6046.0], [94.1, 6046.0], [94.2, 6046.0], [94.3, 6046.0], [94.4, 6046.0], [94.5, 6046.0], [94.6, 6046.0], [94.7, 6046.0], [94.8, 6046.0], [94.9, 6046.0], [95.0, 6076.0], [95.1, 6076.0], [95.2, 6076.0], [95.3, 6076.0], [95.4, 6076.0], [95.5, 6076.0], [95.6, 6076.0], [95.7, 6076.0], [95.8, 6076.0], [95.9, 6076.0], [96.0, 6107.0], [96.1, 6107.0], [96.2, 6107.0], [96.3, 6107.0], [96.4, 6107.0], [96.5, 6107.0], [96.6, 6107.0], [96.7, 6107.0], [96.8, 6107.0], [96.9, 6107.0], [97.0, 6179.0], [97.1, 6179.0], [97.2, 6179.0], [97.3, 6179.0], [97.4, 6179.0], [97.5, 6179.0], [97.6, 6179.0], [97.7, 6179.0], [97.8, 6179.0], [97.9, 6179.0], [98.0, 6203.0], [98.1, 6203.0], [98.2, 6203.0], [98.3, 6203.0], [98.4, 6203.0], [98.5, 6203.0], [98.6, 6203.0], [98.7, 6203.0], [98.8, 6203.0], [98.9, 6203.0], [99.0, 6324.0], [99.1, 6324.0], [99.2, 6324.0], [99.3, 6324.0], [99.4, 6324.0], [99.5, 6324.0], [99.6, 6324.0], [99.7, 6324.0], [99.8, 6324.0], [99.9, 6324.0]], "isOverall": false, "label": "ecoverseUserIds", "isController": false}, {"data": [[0.0, 125.0], [0.1, 125.0], [0.2, 125.0], [0.3, 125.0], [0.4, 125.0], [0.5, 125.0], [0.6, 125.0], [0.7, 125.0], [0.8, 125.0], [0.9, 125.0], [1.0, 129.0], [1.1, 129.0], [1.2, 129.0], [1.3, 129.0], [1.4, 129.0], [1.5, 129.0], [1.6, 129.0], [1.7, 129.0], [1.8, 129.0], [1.9, 129.0], [2.0, 129.0], [2.1, 129.0], [2.2, 129.0], [2.3, 129.0], [2.4, 129.0], [2.5, 129.0], [2.6, 129.0], [2.7, 129.0], [2.8, 129.0], [2.9, 129.0], [3.0, 131.0], [3.1, 131.0], [3.2, 131.0], [3.3, 131.0], [3.4, 131.0], [3.5, 131.0], [3.6, 131.0], [3.7, 131.0], [3.8, 131.0], [3.9, 131.0], [4.0, 133.0], [4.1, 133.0], [4.2, 133.0], [4.3, 133.0], [4.4, 133.0], [4.5, 133.0], [4.6, 133.0], [4.7, 133.0], [4.8, 133.0], [4.9, 133.0], [5.0, 149.0], [5.1, 149.0], [5.2, 149.0], [5.3, 149.0], [5.4, 149.0], [5.5, 149.0], [5.6, 149.0], [5.7, 149.0], [5.8, 149.0], [5.9, 149.0], [6.0, 153.0], [6.1, 153.0], [6.2, 153.0], [6.3, 153.0], [6.4, 153.0], [6.5, 153.0], [6.6, 153.0], [6.7, 153.0], [6.8, 153.0], [6.9, 153.0], [7.0, 156.0], [7.1, 156.0], [7.2, 156.0], [7.3, 156.0], [7.4, 156.0], [7.5, 156.0], [7.6, 156.0], [7.7, 156.0], [7.8, 156.0], [7.9, 156.0], [8.0, 166.0], [8.1, 166.0], [8.2, 166.0], [8.3, 166.0], [8.4, 166.0], [8.5, 166.0], [8.6, 166.0], [8.7, 166.0], [8.8, 166.0], [8.9, 166.0], [9.0, 181.0], [9.1, 181.0], [9.2, 181.0], [9.3, 181.0], [9.4, 181.0], [9.5, 181.0], [9.6, 181.0], [9.7, 181.0], [9.8, 181.0], [9.9, 181.0], [10.0, 205.0], [10.1, 205.0], [10.2, 205.0], [10.3, 205.0], [10.4, 205.0], [10.5, 205.0], [10.6, 205.0], [10.7, 205.0], [10.8, 205.0], [10.9, 205.0], [11.0, 205.0], [11.1, 205.0], [11.2, 205.0], [11.3, 205.0], [11.4, 205.0], [11.5, 205.0], [11.6, 205.0], [11.7, 205.0], [11.8, 205.0], [11.9, 205.0], [12.0, 211.0], [12.1, 211.0], [12.2, 211.0], [12.3, 211.0], [12.4, 211.0], [12.5, 211.0], [12.6, 211.0], [12.7, 211.0], [12.8, 211.0], [12.9, 211.0], [13.0, 214.0], [13.1, 214.0], [13.2, 214.0], [13.3, 214.0], [13.4, 214.0], [13.5, 214.0], [13.6, 214.0], [13.7, 214.0], [13.8, 214.0], [13.9, 214.0], [14.0, 214.0], [14.1, 214.0], [14.2, 214.0], [14.3, 214.0], [14.4, 214.0], [14.5, 214.0], [14.6, 214.0], [14.7, 214.0], [14.8, 214.0], [14.9, 214.0], [15.0, 215.0], [15.1, 215.0], [15.2, 215.0], [15.3, 215.0], [15.4, 215.0], [15.5, 215.0], [15.6, 215.0], [15.7, 215.0], [15.8, 215.0], [15.9, 215.0], [16.0, 226.0], [16.1, 226.0], [16.2, 226.0], [16.3, 226.0], [16.4, 226.0], [16.5, 226.0], [16.6, 226.0], [16.7, 226.0], [16.8, 226.0], [16.9, 226.0], [17.0, 235.0], [17.1, 235.0], [17.2, 235.0], [17.3, 235.0], [17.4, 235.0], [17.5, 235.0], [17.6, 235.0], [17.7, 235.0], [17.8, 235.0], [17.9, 235.0], [18.0, 244.0], [18.1, 244.0], [18.2, 244.0], [18.3, 244.0], [18.4, 244.0], [18.5, 244.0], [18.6, 244.0], [18.7, 244.0], [18.8, 244.0], [18.9, 244.0], [19.0, 263.0], [19.1, 263.0], [19.2, 263.0], [19.3, 263.0], [19.4, 263.0], [19.5, 263.0], [19.6, 263.0], [19.7, 263.0], [19.8, 263.0], [19.9, 263.0], [20.0, 268.0], [20.1, 268.0], [20.2, 268.0], [20.3, 268.0], [20.4, 268.0], [20.5, 268.0], [20.6, 268.0], [20.7, 268.0], [20.8, 268.0], [20.9, 268.0], [21.0, 277.0], [21.1, 277.0], [21.2, 277.0], [21.3, 277.0], [21.4, 277.0], [21.5, 277.0], [21.6, 277.0], [21.7, 277.0], [21.8, 277.0], [21.9, 277.0], [22.0, 302.0], [22.1, 302.0], [22.2, 302.0], [22.3, 302.0], [22.4, 302.0], [22.5, 302.0], [22.6, 302.0], [22.7, 302.0], [22.8, 302.0], [22.9, 302.0], [23.0, 320.0], [23.1, 320.0], [23.2, 320.0], [23.3, 320.0], [23.4, 320.0], [23.5, 320.0], [23.6, 320.0], [23.7, 320.0], [23.8, 320.0], [23.9, 320.0], [24.0, 485.0], [24.1, 485.0], [24.2, 485.0], [24.3, 485.0], [24.4, 485.0], [24.5, 485.0], [24.6, 485.0], [24.7, 485.0], [24.8, 485.0], [24.9, 485.0], [25.0, 544.0], [25.1, 544.0], [25.2, 544.0], [25.3, 544.0], [25.4, 544.0], [25.5, 544.0], [25.6, 544.0], [25.7, 544.0], [25.8, 544.0], [25.9, 544.0], [26.0, 684.0], [26.1, 684.0], [26.2, 684.0], [26.3, 684.0], [26.4, 684.0], [26.5, 684.0], [26.6, 684.0], [26.7, 684.0], [26.8, 684.0], [26.9, 684.0], [27.0, 850.0], [27.1, 850.0], [27.2, 850.0], [27.3, 850.0], [27.4, 850.0], [27.5, 850.0], [27.6, 850.0], [27.7, 850.0], [27.8, 850.0], [27.9, 850.0], [28.0, 873.0], [28.1, 873.0], [28.2, 873.0], [28.3, 873.0], [28.4, 873.0], [28.5, 873.0], [28.6, 873.0], [28.7, 873.0], [28.8, 873.0], [28.9, 873.0], [29.0, 901.0], [29.1, 901.0], [29.2, 901.0], [29.3, 901.0], [29.4, 901.0], [29.5, 901.0], [29.6, 901.0], [29.7, 901.0], [29.8, 901.0], [29.9, 901.0], [30.0, 924.0], [30.1, 924.0], [30.2, 924.0], [30.3, 924.0], [30.4, 924.0], [30.5, 924.0], [30.6, 924.0], [30.7, 924.0], [30.8, 924.0], [30.9, 924.0], [31.0, 932.0], [31.1, 932.0], [31.2, 932.0], [31.3, 932.0], [31.4, 932.0], [31.5, 932.0], [31.6, 932.0], [31.7, 932.0], [31.8, 932.0], [31.9, 932.0], [32.0, 1138.0], [32.1, 1138.0], [32.2, 1138.0], [32.3, 1138.0], [32.4, 1138.0], [32.5, 1138.0], [32.6, 1138.0], [32.7, 1138.0], [32.8, 1138.0], [32.9, 1138.0], [33.0, 1260.0], [33.1, 1260.0], [33.2, 1260.0], [33.3, 1260.0], [33.4, 1260.0], [33.5, 1260.0], [33.6, 1260.0], [33.7, 1260.0], [33.8, 1260.0], [33.9, 1260.0], [34.0, 1523.0], [34.1, 1523.0], [34.2, 1523.0], [34.3, 1523.0], [34.4, 1523.0], [34.5, 1523.0], [34.6, 1523.0], [34.7, 1523.0], [34.8, 1523.0], [34.9, 1523.0], [35.0, 2548.0], [35.1, 2548.0], [35.2, 2548.0], [35.3, 2548.0], [35.4, 2548.0], [35.5, 2548.0], [35.6, 2548.0], [35.7, 2548.0], [35.8, 2548.0], [35.9, 2548.0], [36.0, 2583.0], [36.1, 2583.0], [36.2, 2583.0], [36.3, 2583.0], [36.4, 2583.0], [36.5, 2583.0], [36.6, 2583.0], [36.7, 2583.0], [36.8, 2583.0], [36.9, 2583.0], [37.0, 2646.0], [37.1, 2646.0], [37.2, 2646.0], [37.3, 2646.0], [37.4, 2646.0], [37.5, 2646.0], [37.6, 2646.0], [37.7, 2646.0], [37.8, 2646.0], [37.9, 2646.0], [38.0, 2671.0], [38.1, 2671.0], [38.2, 2671.0], [38.3, 2671.0], [38.4, 2671.0], [38.5, 2671.0], [38.6, 2671.0], [38.7, 2671.0], [38.8, 2671.0], [38.9, 2671.0], [39.0, 2680.0], [39.1, 2680.0], [39.2, 2680.0], [39.3, 2680.0], [39.4, 2680.0], [39.5, 2680.0], [39.6, 2680.0], [39.7, 2680.0], [39.8, 2680.0], [39.9, 2680.0], [40.0, 2801.0], [40.1, 2801.0], [40.2, 2801.0], [40.3, 2801.0], [40.4, 2801.0], [40.5, 2801.0], [40.6, 2801.0], [40.7, 2801.0], [40.8, 2801.0], [40.9, 2801.0], [41.0, 2802.0], [41.1, 2802.0], [41.2, 2802.0], [41.3, 2802.0], [41.4, 2802.0], [41.5, 2802.0], [41.6, 2802.0], [41.7, 2802.0], [41.8, 2802.0], [41.9, 2802.0], [42.0, 2802.0], [42.1, 2802.0], [42.2, 2802.0], [42.3, 2802.0], [42.4, 2802.0], [42.5, 2802.0], [42.6, 2802.0], [42.7, 2802.0], [42.8, 2802.0], [42.9, 2802.0], [43.0, 2821.0], [43.1, 2821.0], [43.2, 2821.0], [43.3, 2821.0], [43.4, 2821.0], [43.5, 2821.0], [43.6, 2821.0], [43.7, 2821.0], [43.8, 2821.0], [43.9, 2821.0], [44.0, 2835.0], [44.1, 2835.0], [44.2, 2835.0], [44.3, 2835.0], [44.4, 2835.0], [44.5, 2835.0], [44.6, 2835.0], [44.7, 2835.0], [44.8, 2835.0], [44.9, 2835.0], [45.0, 2885.0], [45.1, 2885.0], [45.2, 2885.0], [45.3, 2885.0], [45.4, 2885.0], [45.5, 2885.0], [45.6, 2885.0], [45.7, 2885.0], [45.8, 2885.0], [45.9, 2885.0], [46.0, 2941.0], [46.1, 2941.0], [46.2, 2941.0], [46.3, 2941.0], [46.4, 2941.0], [46.5, 2941.0], [46.6, 2941.0], [46.7, 2941.0], [46.8, 2941.0], [46.9, 2941.0], [47.0, 2942.0], [47.1, 2942.0], [47.2, 2942.0], [47.3, 2942.0], [47.4, 2942.0], [47.5, 2942.0], [47.6, 2942.0], [47.7, 2942.0], [47.8, 2942.0], [47.9, 2942.0], [48.0, 2953.0], [48.1, 2953.0], [48.2, 2953.0], [48.3, 2953.0], [48.4, 2953.0], [48.5, 2953.0], [48.6, 2953.0], [48.7, 2953.0], [48.8, 2953.0], [48.9, 2953.0], [49.0, 3066.0], [49.1, 3066.0], [49.2, 3066.0], [49.3, 3066.0], [49.4, 3066.0], [49.5, 3066.0], [49.6, 3066.0], [49.7, 3066.0], [49.8, 3066.0], [49.9, 3066.0], [50.0, 3071.0], [50.1, 3071.0], [50.2, 3071.0], [50.3, 3071.0], [50.4, 3071.0], [50.5, 3071.0], [50.6, 3071.0], [50.7, 3071.0], [50.8, 3071.0], [50.9, 3071.0], [51.0, 3147.0], [51.1, 3147.0], [51.2, 3147.0], [51.3, 3147.0], [51.4, 3147.0], [51.5, 3147.0], [51.6, 3147.0], [51.7, 3147.0], [51.8, 3147.0], [51.9, 3147.0], [52.0, 3174.0], [52.1, 3174.0], [52.2, 3174.0], [52.3, 3174.0], [52.4, 3174.0], [52.5, 3174.0], [52.6, 3174.0], [52.7, 3174.0], [52.8, 3174.0], [52.9, 3174.0], [53.0, 3177.0], [53.1, 3177.0], [53.2, 3177.0], [53.3, 3177.0], [53.4, 3177.0], [53.5, 3177.0], [53.6, 3177.0], [53.7, 3177.0], [53.8, 3177.0], [53.9, 3177.0], [54.0, 3242.0], [54.1, 3242.0], [54.2, 3242.0], [54.3, 3242.0], [54.4, 3242.0], [54.5, 3242.0], [54.6, 3242.0], [54.7, 3242.0], [54.8, 3242.0], [54.9, 3242.0], [55.0, 3247.0], [55.1, 3247.0], [55.2, 3247.0], [55.3, 3247.0], [55.4, 3247.0], [55.5, 3247.0], [55.6, 3247.0], [55.7, 3247.0], [55.8, 3247.0], [55.9, 3247.0], [56.0, 3261.0], [56.1, 3261.0], [56.2, 3261.0], [56.3, 3261.0], [56.4, 3261.0], [56.5, 3261.0], [56.6, 3261.0], [56.7, 3261.0], [56.8, 3261.0], [56.9, 3261.0], [57.0, 3309.0], [57.1, 3309.0], [57.2, 3309.0], [57.3, 3309.0], [57.4, 3309.0], [57.5, 3309.0], [57.6, 3309.0], [57.7, 3309.0], [57.8, 3309.0], [57.9, 3309.0], [58.0, 3324.0], [58.1, 3324.0], [58.2, 3324.0], [58.3, 3324.0], [58.4, 3324.0], [58.5, 3324.0], [58.6, 3324.0], [58.7, 3324.0], [58.8, 3324.0], [58.9, 3324.0], [59.0, 3339.0], [59.1, 3339.0], [59.2, 3339.0], [59.3, 3339.0], [59.4, 3339.0], [59.5, 3339.0], [59.6, 3339.0], [59.7, 3339.0], [59.8, 3339.0], [59.9, 3339.0], [60.0, 3343.0], [60.1, 3343.0], [60.2, 3343.0], [60.3, 3343.0], [60.4, 3343.0], [60.5, 3343.0], [60.6, 3343.0], [60.7, 3343.0], [60.8, 3343.0], [60.9, 3343.0], [61.0, 3380.0], [61.1, 3380.0], [61.2, 3380.0], [61.3, 3380.0], [61.4, 3380.0], [61.5, 3380.0], [61.6, 3380.0], [61.7, 3380.0], [61.8, 3380.0], [61.9, 3380.0], [62.0, 3384.0], [62.1, 3384.0], [62.2, 3384.0], [62.3, 3384.0], [62.4, 3384.0], [62.5, 3384.0], [62.6, 3384.0], [62.7, 3384.0], [62.8, 3384.0], [62.9, 3384.0], [63.0, 3394.0], [63.1, 3394.0], [63.2, 3394.0], [63.3, 3394.0], [63.4, 3394.0], [63.5, 3394.0], [63.6, 3394.0], [63.7, 3394.0], [63.8, 3394.0], [63.9, 3394.0], [64.0, 3397.0], [64.1, 3397.0], [64.2, 3397.0], [64.3, 3397.0], [64.4, 3397.0], [64.5, 3397.0], [64.6, 3397.0], [64.7, 3397.0], [64.8, 3397.0], [64.9, 3397.0], [65.0, 3405.0], [65.1, 3405.0], [65.2, 3405.0], [65.3, 3405.0], [65.4, 3405.0], [65.5, 3405.0], [65.6, 3405.0], [65.7, 3405.0], [65.8, 3405.0], [65.9, 3405.0], [66.0, 3438.0], [66.1, 3438.0], [66.2, 3438.0], [66.3, 3438.0], [66.4, 3438.0], [66.5, 3438.0], [66.6, 3438.0], [66.7, 3438.0], [66.8, 3438.0], [66.9, 3438.0], [67.0, 3511.0], [67.1, 3511.0], [67.2, 3511.0], [67.3, 3511.0], [67.4, 3511.0], [67.5, 3511.0], [67.6, 3511.0], [67.7, 3511.0], [67.8, 3511.0], [67.9, 3511.0], [68.0, 3531.0], [68.1, 3531.0], [68.2, 3531.0], [68.3, 3531.0], [68.4, 3531.0], [68.5, 3531.0], [68.6, 3531.0], [68.7, 3531.0], [68.8, 3531.0], [68.9, 3531.0], [69.0, 3561.0], [69.1, 3561.0], [69.2, 3561.0], [69.3, 3561.0], [69.4, 3561.0], [69.5, 3561.0], [69.6, 3561.0], [69.7, 3561.0], [69.8, 3561.0], [69.9, 3561.0], [70.0, 3585.0], [70.1, 3585.0], [70.2, 3585.0], [70.3, 3585.0], [70.4, 3585.0], [70.5, 3585.0], [70.6, 3585.0], [70.7, 3585.0], [70.8, 3585.0], [70.9, 3585.0], [71.0, 3613.0], [71.1, 3613.0], [71.2, 3613.0], [71.3, 3613.0], [71.4, 3613.0], [71.5, 3613.0], [71.6, 3613.0], [71.7, 3613.0], [71.8, 3613.0], [71.9, 3613.0], [72.0, 3620.0], [72.1, 3620.0], [72.2, 3620.0], [72.3, 3620.0], [72.4, 3620.0], [72.5, 3620.0], [72.6, 3620.0], [72.7, 3620.0], [72.8, 3620.0], [72.9, 3620.0], [73.0, 3687.0], [73.1, 3687.0], [73.2, 3687.0], [73.3, 3687.0], [73.4, 3687.0], [73.5, 3687.0], [73.6, 3687.0], [73.7, 3687.0], [73.8, 3687.0], [73.9, 3687.0], [74.0, 3704.0], [74.1, 3704.0], [74.2, 3704.0], [74.3, 3704.0], [74.4, 3704.0], [74.5, 3704.0], [74.6, 3704.0], [74.7, 3704.0], [74.8, 3704.0], [74.9, 3704.0], [75.0, 3731.0], [75.1, 3731.0], [75.2, 3731.0], [75.3, 3731.0], [75.4, 3731.0], [75.5, 3731.0], [75.6, 3731.0], [75.7, 3731.0], [75.8, 3731.0], [75.9, 3731.0], [76.0, 3738.0], [76.1, 3738.0], [76.2, 3738.0], [76.3, 3738.0], [76.4, 3738.0], [76.5, 3738.0], [76.6, 3738.0], [76.7, 3738.0], [76.8, 3738.0], [76.9, 3738.0], [77.0, 3794.0], [77.1, 3794.0], [77.2, 3794.0], [77.3, 3794.0], [77.4, 3794.0], [77.5, 3794.0], [77.6, 3794.0], [77.7, 3794.0], [77.8, 3794.0], [77.9, 3794.0], [78.0, 3924.0], [78.1, 3924.0], [78.2, 3924.0], [78.3, 3924.0], [78.4, 3924.0], [78.5, 3924.0], [78.6, 3924.0], [78.7, 3924.0], [78.8, 3924.0], [78.9, 3924.0], [79.0, 3968.0], [79.1, 3968.0], [79.2, 3968.0], [79.3, 3968.0], [79.4, 3968.0], [79.5, 3968.0], [79.6, 3968.0], [79.7, 3968.0], [79.8, 3968.0], [79.9, 3968.0], [80.0, 3993.0], [80.1, 3993.0], [80.2, 3993.0], [80.3, 3993.0], [80.4, 3993.0], [80.5, 3993.0], [80.6, 3993.0], [80.7, 3993.0], [80.8, 3993.0], [80.9, 3993.0], [81.0, 4158.0], [81.1, 4158.0], [81.2, 4158.0], [81.3, 4158.0], [81.4, 4158.0], [81.5, 4158.0], [81.6, 4158.0], [81.7, 4158.0], [81.8, 4158.0], [81.9, 4158.0], [82.0, 4244.0], [82.1, 4244.0], [82.2, 4244.0], [82.3, 4244.0], [82.4, 4244.0], [82.5, 4244.0], [82.6, 4244.0], [82.7, 4244.0], [82.8, 4244.0], [82.9, 4244.0], [83.0, 4299.0], [83.1, 4299.0], [83.2, 4299.0], [83.3, 4299.0], [83.4, 4299.0], [83.5, 4299.0], [83.6, 4299.0], [83.7, 4299.0], [83.8, 4299.0], [83.9, 4299.0], [84.0, 4314.0], [84.1, 4314.0], [84.2, 4314.0], [84.3, 4314.0], [84.4, 4314.0], [84.5, 4314.0], [84.6, 4314.0], [84.7, 4314.0], [84.8, 4314.0], [84.9, 4314.0], [85.0, 4325.0], [85.1, 4325.0], [85.2, 4325.0], [85.3, 4325.0], [85.4, 4325.0], [85.5, 4325.0], [85.6, 4325.0], [85.7, 4325.0], [85.8, 4325.0], [85.9, 4325.0], [86.0, 4327.0], [86.1, 4327.0], [86.2, 4327.0], [86.3, 4327.0], [86.4, 4327.0], [86.5, 4327.0], [86.6, 4327.0], [86.7, 4327.0], [86.8, 4327.0], [86.9, 4327.0], [87.0, 4342.0], [87.1, 4342.0], [87.2, 4342.0], [87.3, 4342.0], [87.4, 4342.0], [87.5, 4342.0], [87.6, 4342.0], [87.7, 4342.0], [87.8, 4342.0], [87.9, 4342.0], [88.0, 4347.0], [88.1, 4347.0], [88.2, 4347.0], [88.3, 4347.0], [88.4, 4347.0], [88.5, 4347.0], [88.6, 4347.0], [88.7, 4347.0], [88.8, 4347.0], [88.9, 4347.0], [89.0, 4408.0], [89.1, 4408.0], [89.2, 4408.0], [89.3, 4408.0], [89.4, 4408.0], [89.5, 4408.0], [89.6, 4408.0], [89.7, 4408.0], [89.8, 4408.0], [89.9, 4408.0], [90.0, 4423.0], [90.1, 4423.0], [90.2, 4423.0], [90.3, 4423.0], [90.4, 4423.0], [90.5, 4423.0], [90.6, 4423.0], [90.7, 4423.0], [90.8, 4423.0], [90.9, 4423.0], [91.0, 4426.0], [91.1, 4426.0], [91.2, 4426.0], [91.3, 4426.0], [91.4, 4426.0], [91.5, 4426.0], [91.6, 4426.0], [91.7, 4426.0], [91.8, 4426.0], [91.9, 4426.0], [92.0, 4475.0], [92.1, 4475.0], [92.2, 4475.0], [92.3, 4475.0], [92.4, 4475.0], [92.5, 4475.0], [92.6, 4475.0], [92.7, 4475.0], [92.8, 4475.0], [92.9, 4475.0], [93.0, 4577.0], [93.1, 4577.0], [93.2, 4577.0], [93.3, 4577.0], [93.4, 4577.0], [93.5, 4577.0], [93.6, 4577.0], [93.7, 4577.0], [93.8, 4577.0], [93.9, 4577.0], [94.0, 4751.0], [94.1, 4751.0], [94.2, 4751.0], [94.3, 4751.0], [94.4, 4751.0], [94.5, 4751.0], [94.6, 4751.0], [94.7, 4751.0], [94.8, 4751.0], [94.9, 4751.0], [95.0, 4851.0], [95.1, 4851.0], [95.2, 4851.0], [95.3, 4851.0], [95.4, 4851.0], [95.5, 4851.0], [95.6, 4851.0], [95.7, 4851.0], [95.8, 4851.0], [95.9, 4851.0], [96.0, 4865.0], [96.1, 4865.0], [96.2, 4865.0], [96.3, 4865.0], [96.4, 4865.0], [96.5, 4865.0], [96.6, 4865.0], [96.7, 4865.0], [96.8, 4865.0], [96.9, 4865.0], [97.0, 4865.0], [97.1, 4865.0], [97.2, 4865.0], [97.3, 4865.0], [97.4, 4865.0], [97.5, 4865.0], [97.6, 4865.0], [97.7, 4865.0], [97.8, 4865.0], [97.9, 4865.0], [98.0, 5225.0], [98.1, 5225.0], [98.2, 5225.0], [98.3, 5225.0], [98.4, 5225.0], [98.5, 5225.0], [98.6, 5225.0], [98.7, 5225.0], [98.8, 5225.0], [98.9, 5225.0], [99.0, 5230.0], [99.1, 5230.0], [99.2, 5230.0], [99.3, 5230.0], [99.4, 5230.0], [99.5, 5230.0], [99.6, 5230.0], [99.7, 5230.0], [99.8, 5230.0], [99.9, 5230.0]], "isOverall": false, "label": "userAvatars", "isController": false}, {"data": [[0.0, 278.0], [0.1, 278.0], [0.2, 278.0], [0.3, 278.0], [0.4, 278.0], [0.5, 278.0], [0.6, 278.0], [0.7, 278.0], [0.8, 278.0], [0.9, 278.0], [1.0, 325.0], [1.1, 325.0], [1.2, 325.0], [1.3, 325.0], [1.4, 325.0], [1.5, 325.0], [1.6, 325.0], [1.7, 325.0], [1.8, 325.0], [1.9, 325.0], [2.0, 331.0], [2.1, 331.0], [2.2, 331.0], [2.3, 331.0], [2.4, 331.0], [2.5, 331.0], [2.6, 331.0], [2.7, 331.0], [2.8, 331.0], [2.9, 331.0], [3.0, 359.0], [3.1, 359.0], [3.2, 359.0], [3.3, 359.0], [3.4, 359.0], [3.5, 359.0], [3.6, 359.0], [3.7, 359.0], [3.8, 359.0], [3.9, 359.0], [4.0, 420.0], [4.1, 420.0], [4.2, 420.0], [4.3, 420.0], [4.4, 420.0], [4.5, 420.0], [4.6, 420.0], [4.7, 420.0], [4.8, 420.0], [4.9, 420.0], [5.0, 422.0], [5.1, 422.0], [5.2, 422.0], [5.3, 422.0], [5.4, 422.0], [5.5, 422.0], [5.6, 422.0], [5.7, 422.0], [5.8, 422.0], [5.9, 422.0], [6.0, 426.0], [6.1, 426.0], [6.2, 426.0], [6.3, 426.0], [6.4, 426.0], [6.5, 426.0], [6.6, 426.0], [6.7, 426.0], [6.8, 426.0], [6.9, 426.0], [7.0, 427.0], [7.1, 427.0], [7.2, 427.0], [7.3, 427.0], [7.4, 427.0], [7.5, 427.0], [7.6, 427.0], [7.7, 427.0], [7.8, 427.0], [7.9, 427.0], [8.0, 464.0], [8.1, 464.0], [8.2, 464.0], [8.3, 464.0], [8.4, 464.0], [8.5, 464.0], [8.6, 464.0], [8.7, 464.0], [8.8, 464.0], [8.9, 464.0], [9.0, 494.0], [9.1, 494.0], [9.2, 494.0], [9.3, 494.0], [9.4, 494.0], [9.5, 494.0], [9.6, 494.0], [9.7, 494.0], [9.8, 494.0], [9.9, 494.0], [10.0, 513.0], [10.1, 513.0], [10.2, 513.0], [10.3, 513.0], [10.4, 513.0], [10.5, 513.0], [10.6, 513.0], [10.7, 513.0], [10.8, 513.0], [10.9, 513.0], [11.0, 516.0], [11.1, 516.0], [11.2, 516.0], [11.3, 516.0], [11.4, 516.0], [11.5, 516.0], [11.6, 516.0], [11.7, 516.0], [11.8, 516.0], [11.9, 516.0], [12.0, 524.0], [12.1, 524.0], [12.2, 524.0], [12.3, 524.0], [12.4, 524.0], [12.5, 524.0], [12.6, 524.0], [12.7, 524.0], [12.8, 524.0], [12.9, 524.0], [13.0, 570.0], [13.1, 570.0], [13.2, 570.0], [13.3, 570.0], [13.4, 570.0], [13.5, 570.0], [13.6, 570.0], [13.7, 570.0], [13.8, 570.0], [13.9, 570.0], [14.0, 571.0], [14.1, 571.0], [14.2, 571.0], [14.3, 571.0], [14.4, 571.0], [14.5, 571.0], [14.6, 571.0], [14.7, 571.0], [14.8, 571.0], [14.9, 571.0], [15.0, 575.0], [15.1, 575.0], [15.2, 575.0], [15.3, 575.0], [15.4, 575.0], [15.5, 575.0], [15.6, 575.0], [15.7, 575.0], [15.8, 575.0], [15.9, 575.0], [16.0, 618.0], [16.1, 618.0], [16.2, 618.0], [16.3, 618.0], [16.4, 618.0], [16.5, 618.0], [16.6, 618.0], [16.7, 618.0], [16.8, 618.0], [16.9, 618.0], [17.0, 650.0], [17.1, 650.0], [17.2, 650.0], [17.3, 650.0], [17.4, 650.0], [17.5, 650.0], [17.6, 650.0], [17.7, 650.0], [17.8, 650.0], [17.9, 650.0], [18.0, 654.0], [18.1, 654.0], [18.2, 654.0], [18.3, 654.0], [18.4, 654.0], [18.5, 654.0], [18.6, 654.0], [18.7, 654.0], [18.8, 654.0], [18.9, 654.0], [19.0, 706.0], [19.1, 706.0], [19.2, 706.0], [19.3, 706.0], [19.4, 706.0], [19.5, 706.0], [19.6, 706.0], [19.7, 706.0], [19.8, 706.0], [19.9, 706.0], [20.0, 734.0], [20.1, 734.0], [20.2, 734.0], [20.3, 734.0], [20.4, 734.0], [20.5, 734.0], [20.6, 734.0], [20.7, 734.0], [20.8, 734.0], [20.9, 734.0], [21.0, 739.0], [21.1, 739.0], [21.2, 739.0], [21.3, 739.0], [21.4, 739.0], [21.5, 739.0], [21.6, 739.0], [21.7, 739.0], [21.8, 739.0], [21.9, 739.0], [22.0, 775.0], [22.1, 775.0], [22.2, 775.0], [22.3, 775.0], [22.4, 775.0], [22.5, 775.0], [22.6, 775.0], [22.7, 775.0], [22.8, 775.0], [22.9, 775.0], [23.0, 824.0], [23.1, 824.0], [23.2, 824.0], [23.3, 824.0], [23.4, 824.0], [23.5, 824.0], [23.6, 824.0], [23.7, 824.0], [23.8, 824.0], [23.9, 824.0], [24.0, 852.0], [24.1, 852.0], [24.2, 852.0], [24.3, 852.0], [24.4, 852.0], [24.5, 852.0], [24.6, 852.0], [24.7, 852.0], [24.8, 852.0], [24.9, 852.0], [25.0, 861.0], [25.1, 861.0], [25.2, 861.0], [25.3, 861.0], [25.4, 861.0], [25.5, 861.0], [25.6, 861.0], [25.7, 861.0], [25.8, 861.0], [25.9, 861.0], [26.0, 935.0], [26.1, 935.0], [26.2, 935.0], [26.3, 935.0], [26.4, 935.0], [26.5, 935.0], [26.6, 935.0], [26.7, 935.0], [26.8, 935.0], [26.9, 935.0], [27.0, 954.0], [27.1, 954.0], [27.2, 954.0], [27.3, 954.0], [27.4, 954.0], [27.5, 954.0], [27.6, 954.0], [27.7, 954.0], [27.8, 954.0], [27.9, 954.0], [28.0, 983.0], [28.1, 983.0], [28.2, 983.0], [28.3, 983.0], [28.4, 983.0], [28.5, 983.0], [28.6, 983.0], [28.7, 983.0], [28.8, 983.0], [28.9, 983.0], [29.0, 1012.0], [29.1, 1012.0], [29.2, 1012.0], [29.3, 1012.0], [29.4, 1012.0], [29.5, 1012.0], [29.6, 1012.0], [29.7, 1012.0], [29.8, 1012.0], [29.9, 1012.0], [30.0, 1022.0], [30.1, 1022.0], [30.2, 1022.0], [30.3, 1022.0], [30.4, 1022.0], [30.5, 1022.0], [30.6, 1022.0], [30.7, 1022.0], [30.8, 1022.0], [30.9, 1022.0], [31.0, 1023.0], [31.1, 1023.0], [31.2, 1023.0], [31.3, 1023.0], [31.4, 1023.0], [31.5, 1023.0], [31.6, 1023.0], [31.7, 1023.0], [31.8, 1023.0], [31.9, 1023.0], [32.0, 1027.0], [32.1, 1027.0], [32.2, 1027.0], [32.3, 1027.0], [32.4, 1027.0], [32.5, 1027.0], [32.6, 1027.0], [32.7, 1027.0], [32.8, 1027.0], [32.9, 1027.0], [33.0, 1036.0], [33.1, 1036.0], [33.2, 1036.0], [33.3, 1036.0], [33.4, 1036.0], [33.5, 1036.0], [33.6, 1036.0], [33.7, 1036.0], [33.8, 1036.0], [33.9, 1036.0], [34.0, 1098.0], [34.1, 1098.0], [34.2, 1098.0], [34.3, 1098.0], [34.4, 1098.0], [34.5, 1098.0], [34.6, 1098.0], [34.7, 1098.0], [34.8, 1098.0], [34.9, 1098.0], [35.0, 1113.0], [35.1, 1113.0], [35.2, 1113.0], [35.3, 1113.0], [35.4, 1113.0], [35.5, 1113.0], [35.6, 1113.0], [35.7, 1113.0], [35.8, 1113.0], [35.9, 1113.0], [36.0, 1367.0], [36.1, 1367.0], [36.2, 1367.0], [36.3, 1367.0], [36.4, 1367.0], [36.5, 1367.0], [36.6, 1367.0], [36.7, 1367.0], [36.8, 1367.0], [36.9, 1367.0], [37.0, 16605.0], [37.1, 16605.0], [37.2, 16605.0], [37.3, 16605.0], [37.4, 16605.0], [37.5, 16605.0], [37.6, 16605.0], [37.7, 16605.0], [37.8, 16605.0], [37.9, 16605.0], [38.0, 17422.0], [38.1, 17422.0], [38.2, 17422.0], [38.3, 17422.0], [38.4, 17422.0], [38.5, 17422.0], [38.6, 17422.0], [38.7, 17422.0], [38.8, 17422.0], [38.9, 17422.0], [39.0, 17606.0], [39.1, 17606.0], [39.2, 17606.0], [39.3, 17606.0], [39.4, 17606.0], [39.5, 17606.0], [39.6, 17606.0], [39.7, 17606.0], [39.8, 17606.0], [39.9, 17606.0], [40.0, 17608.0], [40.1, 17608.0], [40.2, 17608.0], [40.3, 17608.0], [40.4, 17608.0], [40.5, 17608.0], [40.6, 17608.0], [40.7, 17608.0], [40.8, 17608.0], [40.9, 17608.0], [41.0, 17618.0], [41.1, 17618.0], [41.2, 17618.0], [41.3, 17618.0], [41.4, 17618.0], [41.5, 17618.0], [41.6, 17618.0], [41.7, 17618.0], [41.8, 17618.0], [41.9, 17618.0], [42.0, 17661.0], [42.1, 17661.0], [42.2, 17661.0], [42.3, 17661.0], [42.4, 17661.0], [42.5, 17661.0], [42.6, 17661.0], [42.7, 17661.0], [42.8, 17661.0], [42.9, 17661.0], [43.0, 17757.0], [43.1, 17757.0], [43.2, 17757.0], [43.3, 17757.0], [43.4, 17757.0], [43.5, 17757.0], [43.6, 17757.0], [43.7, 17757.0], [43.8, 17757.0], [43.9, 17757.0], [44.0, 17788.0], [44.1, 17788.0], [44.2, 17788.0], [44.3, 17788.0], [44.4, 17788.0], [44.5, 17788.0], [44.6, 17788.0], [44.7, 17788.0], [44.8, 17788.0], [44.9, 17788.0], [45.0, 17805.0], [45.1, 17805.0], [45.2, 17805.0], [45.3, 17805.0], [45.4, 17805.0], [45.5, 17805.0], [45.6, 17805.0], [45.7, 17805.0], [45.8, 17805.0], [45.9, 17805.0], [46.0, 17809.0], [46.1, 17809.0], [46.2, 17809.0], [46.3, 17809.0], [46.4, 17809.0], [46.5, 17809.0], [46.6, 17809.0], [46.7, 17809.0], [46.8, 17809.0], [46.9, 17809.0], [47.0, 17828.0], [47.1, 17828.0], [47.2, 17828.0], [47.3, 17828.0], [47.4, 17828.0], [47.5, 17828.0], [47.6, 17828.0], [47.7, 17828.0], [47.8, 17828.0], [47.9, 17828.0], [48.0, 17831.0], [48.1, 17831.0], [48.2, 17831.0], [48.3, 17831.0], [48.4, 17831.0], [48.5, 17831.0], [48.6, 17831.0], [48.7, 17831.0], [48.8, 17831.0], [48.9, 17831.0], [49.0, 17927.0], [49.1, 17927.0], [49.2, 17927.0], [49.3, 17927.0], [49.4, 17927.0], [49.5, 17927.0], [49.6, 17927.0], [49.7, 17927.0], [49.8, 17927.0], [49.9, 17927.0], [50.0, 17930.0], [50.1, 17930.0], [50.2, 17930.0], [50.3, 17930.0], [50.4, 17930.0], [50.5, 17930.0], [50.6, 17930.0], [50.7, 17930.0], [50.8, 17930.0], [50.9, 17930.0], [51.0, 17953.0], [51.1, 17953.0], [51.2, 17953.0], [51.3, 17953.0], [51.4, 17953.0], [51.5, 17953.0], [51.6, 17953.0], [51.7, 17953.0], [51.8, 17953.0], [51.9, 17953.0], [52.0, 17964.0], [52.1, 17964.0], [52.2, 17964.0], [52.3, 17964.0], [52.4, 17964.0], [52.5, 17964.0], [52.6, 17964.0], [52.7, 17964.0], [52.8, 17964.0], [52.9, 17964.0], [53.0, 18029.0], [53.1, 18029.0], [53.2, 18029.0], [53.3, 18029.0], [53.4, 18029.0], [53.5, 18029.0], [53.6, 18029.0], [53.7, 18029.0], [53.8, 18029.0], [53.9, 18029.0], [54.0, 18127.0], [54.1, 18127.0], [54.2, 18127.0], [54.3, 18127.0], [54.4, 18127.0], [54.5, 18127.0], [54.6, 18127.0], [54.7, 18127.0], [54.8, 18127.0], [54.9, 18127.0], [55.0, 18132.0], [55.1, 18132.0], [55.2, 18132.0], [55.3, 18132.0], [55.4, 18132.0], [55.5, 18132.0], [55.6, 18132.0], [55.7, 18132.0], [55.8, 18132.0], [55.9, 18132.0], [56.0, 18148.0], [56.1, 18148.0], [56.2, 18148.0], [56.3, 18148.0], [56.4, 18148.0], [56.5, 18148.0], [56.6, 18148.0], [56.7, 18148.0], [56.8, 18148.0], [56.9, 18148.0], [57.0, 18150.0], [57.1, 18150.0], [57.2, 18150.0], [57.3, 18150.0], [57.4, 18150.0], [57.5, 18150.0], [57.6, 18150.0], [57.7, 18150.0], [57.8, 18150.0], [57.9, 18150.0], [58.0, 18289.0], [58.1, 18289.0], [58.2, 18289.0], [58.3, 18289.0], [58.4, 18289.0], [58.5, 18289.0], [58.6, 18289.0], [58.7, 18289.0], [58.8, 18289.0], [58.9, 18289.0], [59.0, 18419.0], [59.1, 18419.0], [59.2, 18419.0], [59.3, 18419.0], [59.4, 18419.0], [59.5, 18419.0], [59.6, 18419.0], [59.7, 18419.0], [59.8, 18419.0], [59.9, 18419.0], [60.0, 18492.0], [60.1, 18492.0], [60.2, 18492.0], [60.3, 18492.0], [60.4, 18492.0], [60.5, 18492.0], [60.6, 18492.0], [60.7, 18492.0], [60.8, 18492.0], [60.9, 18492.0], [61.0, 18794.0], [61.1, 18794.0], [61.2, 18794.0], [61.3, 18794.0], [61.4, 18794.0], [61.5, 18794.0], [61.6, 18794.0], [61.7, 18794.0], [61.8, 18794.0], [61.9, 18794.0], [62.0, 18814.0], [62.1, 18814.0], [62.2, 18814.0], [62.3, 18814.0], [62.4, 18814.0], [62.5, 18814.0], [62.6, 18814.0], [62.7, 18814.0], [62.8, 18814.0], [62.9, 18814.0], [63.0, 18828.0], [63.1, 18828.0], [63.2, 18828.0], [63.3, 18828.0], [63.4, 18828.0], [63.5, 18828.0], [63.6, 18828.0], [63.7, 18828.0], [63.8, 18828.0], [63.9, 18828.0], [64.0, 18924.0], [64.1, 18924.0], [64.2, 18924.0], [64.3, 18924.0], [64.4, 18924.0], [64.5, 18924.0], [64.6, 18924.0], [64.7, 18924.0], [64.8, 18924.0], [64.9, 18924.0], [65.0, 18960.0], [65.1, 18960.0], [65.2, 18960.0], [65.3, 18960.0], [65.4, 18960.0], [65.5, 18960.0], [65.6, 18960.0], [65.7, 18960.0], [65.8, 18960.0], [65.9, 18960.0], [66.0, 19188.0], [66.1, 19188.0], [66.2, 19188.0], [66.3, 19188.0], [66.4, 19188.0], [66.5, 19188.0], [66.6, 19188.0], [66.7, 19188.0], [66.8, 19188.0], [66.9, 19188.0], [67.0, 19239.0], [67.1, 19239.0], [67.2, 19239.0], [67.3, 19239.0], [67.4, 19239.0], [67.5, 19239.0], [67.6, 19239.0], [67.7, 19239.0], [67.8, 19239.0], [67.9, 19239.0], [68.0, 19245.0], [68.1, 19245.0], [68.2, 19245.0], [68.3, 19245.0], [68.4, 19245.0], [68.5, 19245.0], [68.6, 19245.0], [68.7, 19245.0], [68.8, 19245.0], [68.9, 19245.0], [69.0, 19262.0], [69.1, 19262.0], [69.2, 19262.0], [69.3, 19262.0], [69.4, 19262.0], [69.5, 19262.0], [69.6, 19262.0], [69.7, 19262.0], [69.8, 19262.0], [69.9, 19262.0], [70.0, 19266.0], [70.1, 19266.0], [70.2, 19266.0], [70.3, 19266.0], [70.4, 19266.0], [70.5, 19266.0], [70.6, 19266.0], [70.7, 19266.0], [70.8, 19266.0], [70.9, 19266.0], [71.0, 19296.0], [71.1, 19296.0], [71.2, 19296.0], [71.3, 19296.0], [71.4, 19296.0], [71.5, 19296.0], [71.6, 19296.0], [71.7, 19296.0], [71.8, 19296.0], [71.9, 19296.0], [72.0, 19301.0], [72.1, 19301.0], [72.2, 19301.0], [72.3, 19301.0], [72.4, 19301.0], [72.5, 19301.0], [72.6, 19301.0], [72.7, 19301.0], [72.8, 19301.0], [72.9, 19301.0], [73.0, 19334.0], [73.1, 19334.0], [73.2, 19334.0], [73.3, 19334.0], [73.4, 19334.0], [73.5, 19334.0], [73.6, 19334.0], [73.7, 19334.0], [73.8, 19334.0], [73.9, 19334.0], [74.0, 19578.0], [74.1, 19578.0], [74.2, 19578.0], [74.3, 19578.0], [74.4, 19578.0], [74.5, 19578.0], [74.6, 19578.0], [74.7, 19578.0], [74.8, 19578.0], [74.9, 19578.0], [75.0, 19774.0], [75.1, 19774.0], [75.2, 19774.0], [75.3, 19774.0], [75.4, 19774.0], [75.5, 19774.0], [75.6, 19774.0], [75.7, 19774.0], [75.8, 19774.0], [75.9, 19774.0], [76.0, 19774.0], [76.1, 19774.0], [76.2, 19774.0], [76.3, 19774.0], [76.4, 19774.0], [76.5, 19774.0], [76.6, 19774.0], [76.7, 19774.0], [76.8, 19774.0], [76.9, 19774.0], [77.0, 19854.0], [77.1, 19854.0], [77.2, 19854.0], [77.3, 19854.0], [77.4, 19854.0], [77.5, 19854.0], [77.6, 19854.0], [77.7, 19854.0], [77.8, 19854.0], [77.9, 19854.0], [78.0, 19955.0], [78.1, 19955.0], [78.2, 19955.0], [78.3, 19955.0], [78.4, 19955.0], [78.5, 19955.0], [78.6, 19955.0], [78.7, 19955.0], [78.8, 19955.0], [78.9, 19955.0], [79.0, 20128.0], [79.1, 20128.0], [79.2, 20128.0], [79.3, 20128.0], [79.4, 20128.0], [79.5, 20128.0], [79.6, 20128.0], [79.7, 20128.0], [79.8, 20128.0], [79.9, 20128.0], [80.0, 20129.0], [80.1, 20129.0], [80.2, 20129.0], [80.3, 20129.0], [80.4, 20129.0], [80.5, 20129.0], [80.6, 20129.0], [80.7, 20129.0], [80.8, 20129.0], [80.9, 20129.0], [81.0, 20215.0], [81.1, 20215.0], [81.2, 20215.0], [81.3, 20215.0], [81.4, 20215.0], [81.5, 20215.0], [81.6, 20215.0], [81.7, 20215.0], [81.8, 20215.0], [81.9, 20215.0], [82.0, 20338.0], [82.1, 20338.0], [82.2, 20338.0], [82.3, 20338.0], [82.4, 20338.0], [82.5, 20338.0], [82.6, 20338.0], [82.7, 20338.0], [82.8, 20338.0], [82.9, 20338.0], [83.0, 20410.0], [83.1, 20410.0], [83.2, 20410.0], [83.3, 20410.0], [83.4, 20410.0], [83.5, 20410.0], [83.6, 20410.0], [83.7, 20410.0], [83.8, 20410.0], [83.9, 20410.0], [84.0, 20512.0], [84.1, 20512.0], [84.2, 20512.0], [84.3, 20512.0], [84.4, 20512.0], [84.5, 20512.0], [84.6, 20512.0], [84.7, 20512.0], [84.8, 20512.0], [84.9, 20512.0], [85.0, 20546.0], [85.1, 20546.0], [85.2, 20546.0], [85.3, 20546.0], [85.4, 20546.0], [85.5, 20546.0], [85.6, 20546.0], [85.7, 20546.0], [85.8, 20546.0], [85.9, 20546.0], [86.0, 20576.0], [86.1, 20576.0], [86.2, 20576.0], [86.3, 20576.0], [86.4, 20576.0], [86.5, 20576.0], [86.6, 20576.0], [86.7, 20576.0], [86.8, 20576.0], [86.9, 20576.0], [87.0, 20892.0], [87.1, 20892.0], [87.2, 20892.0], [87.3, 20892.0], [87.4, 20892.0], [87.5, 20892.0], [87.6, 20892.0], [87.7, 20892.0], [87.8, 20892.0], [87.9, 20892.0], [88.0, 20919.0], [88.1, 20919.0], [88.2, 20919.0], [88.3, 20919.0], [88.4, 20919.0], [88.5, 20919.0], [88.6, 20919.0], [88.7, 20919.0], [88.8, 20919.0], [88.9, 20919.0], [89.0, 20997.0], [89.1, 20997.0], [89.2, 20997.0], [89.3, 20997.0], [89.4, 20997.0], [89.5, 20997.0], [89.6, 20997.0], [89.7, 20997.0], [89.8, 20997.0], [89.9, 20997.0], [90.0, 21078.0], [90.1, 21078.0], [90.2, 21078.0], [90.3, 21078.0], [90.4, 21078.0], [90.5, 21078.0], [90.6, 21078.0], [90.7, 21078.0], [90.8, 21078.0], [90.9, 21078.0], [91.0, 21091.0], [91.1, 21091.0], [91.2, 21091.0], [91.3, 21091.0], [91.4, 21091.0], [91.5, 21091.0], [91.6, 21091.0], [91.7, 21091.0], [91.8, 21091.0], [91.9, 21091.0], [92.0, 21145.0], [92.1, 21145.0], [92.2, 21145.0], [92.3, 21145.0], [92.4, 21145.0], [92.5, 21145.0], [92.6, 21145.0], [92.7, 21145.0], [92.8, 21145.0], [92.9, 21145.0], [93.0, 21198.0], [93.1, 21198.0], [93.2, 21198.0], [93.3, 21198.0], [93.4, 21198.0], [93.5, 21198.0], [93.6, 21198.0], [93.7, 21198.0], [93.8, 21198.0], [93.9, 21198.0], [94.0, 21246.0], [94.1, 21246.0], [94.2, 21246.0], [94.3, 21246.0], [94.4, 21246.0], [94.5, 21246.0], [94.6, 21246.0], [94.7, 21246.0], [94.8, 21246.0], [94.9, 21246.0], [95.0, 21396.0], [95.1, 21396.0], [95.2, 21396.0], [95.3, 21396.0], [95.4, 21396.0], [95.5, 21396.0], [95.6, 21396.0], [95.7, 21396.0], [95.8, 21396.0], [95.9, 21396.0], [96.0, 21507.0], [96.1, 21507.0], [96.2, 21507.0], [96.3, 21507.0], [96.4, 21507.0], [96.5, 21507.0], [96.6, 21507.0], [96.7, 21507.0], [96.8, 21507.0], [96.9, 21507.0], [97.0, 21662.0], [97.1, 21662.0], [97.2, 21662.0], [97.3, 21662.0], [97.4, 21662.0], [97.5, 21662.0], [97.6, 21662.0], [97.7, 21662.0], [97.8, 21662.0], [97.9, 21662.0], [98.0, 21776.0], [98.1, 21776.0], [98.2, 21776.0], [98.3, 21776.0], [98.4, 21776.0], [98.5, 21776.0], [98.6, 21776.0], [98.7, 21776.0], [98.8, 21776.0], [98.9, 21776.0], [99.0, 22020.0], [99.1, 22020.0], [99.2, 22020.0], [99.3, 22020.0], [99.4, 22020.0], [99.5, 22020.0], [99.6, 22020.0], [99.7, 22020.0], [99.8, 22020.0], [99.9, 22020.0]], "isOverall": false, "label": "challengeProfile", "isController": false}, {"data": [[0.0, 128.0], [0.1, 128.0], [0.2, 128.0], [0.3, 128.0], [0.4, 128.0], [0.5, 128.0], [0.6, 128.0], [0.7, 128.0], [0.8, 128.0], [0.9, 128.0], [1.0, 131.0], [1.1, 131.0], [1.2, 131.0], [1.3, 131.0], [1.4, 131.0], [1.5, 131.0], [1.6, 131.0], [1.7, 131.0], [1.8, 131.0], [1.9, 131.0], [2.0, 137.0], [2.1, 137.0], [2.2, 137.0], [2.3, 137.0], [2.4, 137.0], [2.5, 137.0], [2.6, 137.0], [2.7, 137.0], [2.8, 137.0], [2.9, 137.0], [3.0, 141.0], [3.1, 141.0], [3.2, 141.0], [3.3, 141.0], [3.4, 141.0], [3.5, 141.0], [3.6, 141.0], [3.7, 141.0], [3.8, 141.0], [3.9, 141.0], [4.0, 144.0], [4.1, 144.0], [4.2, 144.0], [4.3, 144.0], [4.4, 144.0], [4.5, 144.0], [4.6, 144.0], [4.7, 144.0], [4.8, 144.0], [4.9, 144.0], [5.0, 155.0], [5.1, 155.0], [5.2, 155.0], [5.3, 155.0], [5.4, 155.0], [5.5, 155.0], [5.6, 155.0], [5.7, 155.0], [5.8, 155.0], [5.9, 155.0], [6.0, 157.0], [6.1, 157.0], [6.2, 157.0], [6.3, 157.0], [6.4, 157.0], [6.5, 157.0], [6.6, 157.0], [6.7, 157.0], [6.8, 157.0], [6.9, 157.0], [7.0, 166.0], [7.1, 166.0], [7.2, 166.0], [7.3, 166.0], [7.4, 166.0], [7.5, 166.0], [7.6, 166.0], [7.7, 166.0], [7.8, 166.0], [7.9, 166.0], [8.0, 171.0], [8.1, 171.0], [8.2, 171.0], [8.3, 171.0], [8.4, 171.0], [8.5, 171.0], [8.6, 171.0], [8.7, 171.0], [8.8, 171.0], [8.9, 171.0], [9.0, 178.0], [9.1, 178.0], [9.2, 178.0], [9.3, 178.0], [9.4, 178.0], [9.5, 178.0], [9.6, 178.0], [9.7, 178.0], [9.8, 178.0], [9.9, 178.0], [10.0, 179.0], [10.1, 179.0], [10.2, 179.0], [10.3, 179.0], [10.4, 179.0], [10.5, 179.0], [10.6, 179.0], [10.7, 179.0], [10.8, 179.0], [10.9, 179.0], [11.0, 185.0], [11.1, 185.0], [11.2, 185.0], [11.3, 185.0], [11.4, 185.0], [11.5, 185.0], [11.6, 185.0], [11.7, 185.0], [11.8, 185.0], [11.9, 185.0], [12.0, 191.0], [12.1, 191.0], [12.2, 191.0], [12.3, 191.0], [12.4, 191.0], [12.5, 191.0], [12.6, 191.0], [12.7, 191.0], [12.8, 191.0], [12.9, 191.0], [13.0, 195.0], [13.1, 195.0], [13.2, 195.0], [13.3, 195.0], [13.4, 195.0], [13.5, 195.0], [13.6, 195.0], [13.7, 195.0], [13.8, 195.0], [13.9, 195.0], [14.0, 196.0], [14.1, 196.0], [14.2, 196.0], [14.3, 196.0], [14.4, 196.0], [14.5, 196.0], [14.6, 196.0], [14.7, 196.0], [14.8, 196.0], [14.9, 196.0], [15.0, 196.0], [15.1, 196.0], [15.2, 196.0], [15.3, 196.0], [15.4, 196.0], [15.5, 196.0], [15.6, 196.0], [15.7, 196.0], [15.8, 196.0], [15.9, 196.0], [16.0, 201.0], [16.1, 201.0], [16.2, 201.0], [16.3, 201.0], [16.4, 201.0], [16.5, 201.0], [16.6, 201.0], [16.7, 201.0], [16.8, 201.0], [16.9, 201.0], [17.0, 220.0], [17.1, 220.0], [17.2, 220.0], [17.3, 220.0], [17.4, 220.0], [17.5, 220.0], [17.6, 220.0], [17.7, 220.0], [17.8, 220.0], [17.9, 220.0], [18.0, 222.0], [18.1, 222.0], [18.2, 222.0], [18.3, 222.0], [18.4, 222.0], [18.5, 222.0], [18.6, 222.0], [18.7, 222.0], [18.8, 222.0], [18.9, 222.0], [19.0, 224.0], [19.1, 224.0], [19.2, 224.0], [19.3, 224.0], [19.4, 224.0], [19.5, 224.0], [19.6, 224.0], [19.7, 224.0], [19.8, 224.0], [19.9, 224.0], [20.0, 235.0], [20.1, 235.0], [20.2, 235.0], [20.3, 235.0], [20.4, 235.0], [20.5, 235.0], [20.6, 235.0], [20.7, 235.0], [20.8, 235.0], [20.9, 235.0], [21.0, 236.0], [21.1, 236.0], [21.2, 236.0], [21.3, 236.0], [21.4, 236.0], [21.5, 236.0], [21.6, 236.0], [21.7, 236.0], [21.8, 236.0], [21.9, 236.0], [22.0, 252.0], [22.1, 252.0], [22.2, 252.0], [22.3, 252.0], [22.4, 252.0], [22.5, 252.0], [22.6, 252.0], [22.7, 252.0], [22.8, 252.0], [22.9, 252.0], [23.0, 270.0], [23.1, 270.0], [23.2, 270.0], [23.3, 270.0], [23.4, 270.0], [23.5, 270.0], [23.6, 270.0], [23.7, 270.0], [23.8, 270.0], [23.9, 270.0], [24.0, 318.0], [24.1, 318.0], [24.2, 318.0], [24.3, 318.0], [24.4, 318.0], [24.5, 318.0], [24.6, 318.0], [24.7, 318.0], [24.8, 318.0], [24.9, 318.0], [25.0, 360.0], [25.1, 360.0], [25.2, 360.0], [25.3, 360.0], [25.4, 360.0], [25.5, 360.0], [25.6, 360.0], [25.7, 360.0], [25.8, 360.0], [25.9, 360.0], [26.0, 364.0], [26.1, 364.0], [26.2, 364.0], [26.3, 364.0], [26.4, 364.0], [26.5, 364.0], [26.6, 364.0], [26.7, 364.0], [26.8, 364.0], [26.9, 364.0], [27.0, 436.0], [27.1, 436.0], [27.2, 436.0], [27.3, 436.0], [27.4, 436.0], [27.5, 436.0], [27.6, 436.0], [27.7, 436.0], [27.8, 436.0], [27.9, 436.0], [28.0, 458.0], [28.1, 458.0], [28.2, 458.0], [28.3, 458.0], [28.4, 458.0], [28.5, 458.0], [28.6, 458.0], [28.7, 458.0], [28.8, 458.0], [28.9, 458.0], [29.0, 494.0], [29.1, 494.0], [29.2, 494.0], [29.3, 494.0], [29.4, 494.0], [29.5, 494.0], [29.6, 494.0], [29.7, 494.0], [29.8, 494.0], [29.9, 494.0], [30.0, 542.0], [30.1, 542.0], [30.2, 542.0], [30.3, 542.0], [30.4, 542.0], [30.5, 542.0], [30.6, 542.0], [30.7, 542.0], [30.8, 542.0], [30.9, 542.0], [31.0, 2266.0], [31.1, 2266.0], [31.2, 2266.0], [31.3, 2266.0], [31.4, 2266.0], [31.5, 2266.0], [31.6, 2266.0], [31.7, 2266.0], [31.8, 2266.0], [31.9, 2266.0], [32.0, 2709.0], [32.1, 2709.0], [32.2, 2709.0], [32.3, 2709.0], [32.4, 2709.0], [32.5, 2709.0], [32.6, 2709.0], [32.7, 2709.0], [32.8, 2709.0], [32.9, 2709.0], [33.0, 3096.0], [33.1, 3096.0], [33.2, 3096.0], [33.3, 3096.0], [33.4, 3096.0], [33.5, 3096.0], [33.6, 3096.0], [33.7, 3096.0], [33.8, 3096.0], [33.9, 3096.0], [34.0, 3254.0], [34.1, 3254.0], [34.2, 3254.0], [34.3, 3254.0], [34.4, 3254.0], [34.5, 3254.0], [34.6, 3254.0], [34.7, 3254.0], [34.8, 3254.0], [34.9, 3254.0], [35.0, 3552.0], [35.1, 3552.0], [35.2, 3552.0], [35.3, 3552.0], [35.4, 3552.0], [35.5, 3552.0], [35.6, 3552.0], [35.7, 3552.0], [35.8, 3552.0], [35.9, 3552.0], [36.0, 3602.0], [36.1, 3602.0], [36.2, 3602.0], [36.3, 3602.0], [36.4, 3602.0], [36.5, 3602.0], [36.6, 3602.0], [36.7, 3602.0], [36.8, 3602.0], [36.9, 3602.0], [37.0, 3723.0], [37.1, 3723.0], [37.2, 3723.0], [37.3, 3723.0], [37.4, 3723.0], [37.5, 3723.0], [37.6, 3723.0], [37.7, 3723.0], [37.8, 3723.0], [37.9, 3723.0], [38.0, 4074.0], [38.1, 4074.0], [38.2, 4074.0], [38.3, 4074.0], [38.4, 4074.0], [38.5, 4074.0], [38.6, 4074.0], [38.7, 4074.0], [38.8, 4074.0], [38.9, 4074.0], [39.0, 4121.0], [39.1, 4121.0], [39.2, 4121.0], [39.3, 4121.0], [39.4, 4121.0], [39.5, 4121.0], [39.6, 4121.0], [39.7, 4121.0], [39.8, 4121.0], [39.9, 4121.0], [40.0, 4134.0], [40.1, 4134.0], [40.2, 4134.0], [40.3, 4134.0], [40.4, 4134.0], [40.5, 4134.0], [40.6, 4134.0], [40.7, 4134.0], [40.8, 4134.0], [40.9, 4134.0], [41.0, 4401.0], [41.1, 4401.0], [41.2, 4401.0], [41.3, 4401.0], [41.4, 4401.0], [41.5, 4401.0], [41.6, 4401.0], [41.7, 4401.0], [41.8, 4401.0], [41.9, 4401.0], [42.0, 4588.0], [42.1, 4588.0], [42.2, 4588.0], [42.3, 4588.0], [42.4, 4588.0], [42.5, 4588.0], [42.6, 4588.0], [42.7, 4588.0], [42.8, 4588.0], [42.9, 4588.0], [43.0, 4965.0], [43.1, 4965.0], [43.2, 4965.0], [43.3, 4965.0], [43.4, 4965.0], [43.5, 4965.0], [43.6, 4965.0], [43.7, 4965.0], [43.8, 4965.0], [43.9, 4965.0], [44.0, 5068.0], [44.1, 5068.0], [44.2, 5068.0], [44.3, 5068.0], [44.4, 5068.0], [44.5, 5068.0], [44.6, 5068.0], [44.7, 5068.0], [44.8, 5068.0], [44.9, 5068.0], [45.0, 5821.0], [45.1, 5821.0], [45.2, 5821.0], [45.3, 5821.0], [45.4, 5821.0], [45.5, 5821.0], [45.6, 5821.0], [45.7, 5821.0], [45.8, 5821.0], [45.9, 5821.0], [46.0, 5922.0], [46.1, 5922.0], [46.2, 5922.0], [46.3, 5922.0], [46.4, 5922.0], [46.5, 5922.0], [46.6, 5922.0], [46.7, 5922.0], [46.8, 5922.0], [46.9, 5922.0], [47.0, 6327.0], [47.1, 6327.0], [47.2, 6327.0], [47.3, 6327.0], [47.4, 6327.0], [47.5, 6327.0], [47.6, 6327.0], [47.7, 6327.0], [47.8, 6327.0], [47.9, 6327.0], [48.0, 6835.0], [48.1, 6835.0], [48.2, 6835.0], [48.3, 6835.0], [48.4, 6835.0], [48.5, 6835.0], [48.6, 6835.0], [48.7, 6835.0], [48.8, 6835.0], [48.9, 6835.0], [49.0, 6919.0], [49.1, 6919.0], [49.2, 6919.0], [49.3, 6919.0], [49.4, 6919.0], [49.5, 6919.0], [49.6, 6919.0], [49.7, 6919.0], [49.8, 6919.0], [49.9, 6919.0], [50.0, 7020.0], [50.1, 7020.0], [50.2, 7020.0], [50.3, 7020.0], [50.4, 7020.0], [50.5, 7020.0], [50.6, 7020.0], [50.7, 7020.0], [50.8, 7020.0], [50.9, 7020.0], [51.0, 8069.0], [51.1, 8069.0], [51.2, 8069.0], [51.3, 8069.0], [51.4, 8069.0], [51.5, 8069.0], [51.6, 8069.0], [51.7, 8069.0], [51.8, 8069.0], [51.9, 8069.0], [52.0, 8125.0], [52.1, 8125.0], [52.2, 8125.0], [52.3, 8125.0], [52.4, 8125.0], [52.5, 8125.0], [52.6, 8125.0], [52.7, 8125.0], [52.8, 8125.0], [52.9, 8125.0], [53.0, 8231.0], [53.1, 8231.0], [53.2, 8231.0], [53.3, 8231.0], [53.4, 8231.0], [53.5, 8231.0], [53.6, 8231.0], [53.7, 8231.0], [53.8, 8231.0], [53.9, 8231.0], [54.0, 8346.0], [54.1, 8346.0], [54.2, 8346.0], [54.3, 8346.0], [54.4, 8346.0], [54.5, 8346.0], [54.6, 8346.0], [54.7, 8346.0], [54.8, 8346.0], [54.9, 8346.0], [55.0, 8444.0], [55.1, 8444.0], [55.2, 8444.0], [55.3, 8444.0], [55.4, 8444.0], [55.5, 8444.0], [55.6, 8444.0], [55.7, 8444.0], [55.8, 8444.0], [55.9, 8444.0], [56.0, 8650.0], [56.1, 8650.0], [56.2, 8650.0], [56.3, 8650.0], [56.4, 8650.0], [56.5, 8650.0], [56.6, 8650.0], [56.7, 8650.0], [56.8, 8650.0], [56.9, 8650.0], [57.0, 8829.0], [57.1, 8829.0], [57.2, 8829.0], [57.3, 8829.0], [57.4, 8829.0], [57.5, 8829.0], [57.6, 8829.0], [57.7, 8829.0], [57.8, 8829.0], [57.9, 8829.0], [58.0, 8972.0], [58.1, 8972.0], [58.2, 8972.0], [58.3, 8972.0], [58.4, 8972.0], [58.5, 8972.0], [58.6, 8972.0], [58.7, 8972.0], [58.8, 8972.0], [58.9, 8972.0], [59.0, 8981.0], [59.1, 8981.0], [59.2, 8981.0], [59.3, 8981.0], [59.4, 8981.0], [59.5, 8981.0], [59.6, 8981.0], [59.7, 8981.0], [59.8, 8981.0], [59.9, 8981.0], [60.0, 9249.0], [60.1, 9249.0], [60.2, 9249.0], [60.3, 9249.0], [60.4, 9249.0], [60.5, 9249.0], [60.6, 9249.0], [60.7, 9249.0], [60.8, 9249.0], [60.9, 9249.0], [61.0, 9565.0], [61.1, 9565.0], [61.2, 9565.0], [61.3, 9565.0], [61.4, 9565.0], [61.5, 9565.0], [61.6, 9565.0], [61.7, 9565.0], [61.8, 9565.0], [61.9, 9565.0], [62.0, 9572.0], [62.1, 9572.0], [62.2, 9572.0], [62.3, 9572.0], [62.4, 9572.0], [62.5, 9572.0], [62.6, 9572.0], [62.7, 9572.0], [62.8, 9572.0], [62.9, 9572.0], [63.0, 9717.0], [63.1, 9717.0], [63.2, 9717.0], [63.3, 9717.0], [63.4, 9717.0], [63.5, 9717.0], [63.6, 9717.0], [63.7, 9717.0], [63.8, 9717.0], [63.9, 9717.0], [64.0, 9760.0], [64.1, 9760.0], [64.2, 9760.0], [64.3, 9760.0], [64.4, 9760.0], [64.5, 9760.0], [64.6, 9760.0], [64.7, 9760.0], [64.8, 9760.0], [64.9, 9760.0], [65.0, 9789.0], [65.1, 9789.0], [65.2, 9789.0], [65.3, 9789.0], [65.4, 9789.0], [65.5, 9789.0], [65.6, 9789.0], [65.7, 9789.0], [65.8, 9789.0], [65.9, 9789.0], [66.0, 9887.0], [66.1, 9887.0], [66.2, 9887.0], [66.3, 9887.0], [66.4, 9887.0], [66.5, 9887.0], [66.6, 9887.0], [66.7, 9887.0], [66.8, 9887.0], [66.9, 9887.0], [67.0, 9925.0], [67.1, 9925.0], [67.2, 9925.0], [67.3, 9925.0], [67.4, 9925.0], [67.5, 9925.0], [67.6, 9925.0], [67.7, 9925.0], [67.8, 9925.0], [67.9, 9925.0], [68.0, 10089.0], [68.1, 10089.0], [68.2, 10089.0], [68.3, 10089.0], [68.4, 10089.0], [68.5, 10089.0], [68.6, 10089.0], [68.7, 10089.0], [68.8, 10089.0], [68.9, 10089.0], [69.0, 10099.0], [69.1, 10099.0], [69.2, 10099.0], [69.3, 10099.0], [69.4, 10099.0], [69.5, 10099.0], [69.6, 10099.0], [69.7, 10099.0], [69.8, 10099.0], [69.9, 10099.0], [70.0, 10105.0], [70.1, 10105.0], [70.2, 10105.0], [70.3, 10105.0], [70.4, 10105.0], [70.5, 10105.0], [70.6, 10105.0], [70.7, 10105.0], [70.8, 10105.0], [70.9, 10105.0], [71.0, 10142.0], [71.1, 10142.0], [71.2, 10142.0], [71.3, 10142.0], [71.4, 10142.0], [71.5, 10142.0], [71.6, 10142.0], [71.7, 10142.0], [71.8, 10142.0], [71.9, 10142.0], [72.0, 10245.0], [72.1, 10245.0], [72.2, 10245.0], [72.3, 10245.0], [72.4, 10245.0], [72.5, 10245.0], [72.6, 10245.0], [72.7, 10245.0], [72.8, 10245.0], [72.9, 10245.0], [73.0, 10671.0], [73.1, 10671.0], [73.2, 10671.0], [73.3, 10671.0], [73.4, 10671.0], [73.5, 10671.0], [73.6, 10671.0], [73.7, 10671.0], [73.8, 10671.0], [73.9, 10671.0], [74.0, 10685.0], [74.1, 10685.0], [74.2, 10685.0], [74.3, 10685.0], [74.4, 10685.0], [74.5, 10685.0], [74.6, 10685.0], [74.7, 10685.0], [74.8, 10685.0], [74.9, 10685.0], [75.0, 10808.0], [75.1, 10808.0], [75.2, 10808.0], [75.3, 10808.0], [75.4, 10808.0], [75.5, 10808.0], [75.6, 10808.0], [75.7, 10808.0], [75.8, 10808.0], [75.9, 10808.0], [76.0, 10811.0], [76.1, 10811.0], [76.2, 10811.0], [76.3, 10811.0], [76.4, 10811.0], [76.5, 10811.0], [76.6, 10811.0], [76.7, 10811.0], [76.8, 10811.0], [76.9, 10811.0], [77.0, 10919.0], [77.1, 10919.0], [77.2, 10919.0], [77.3, 10919.0], [77.4, 10919.0], [77.5, 10919.0], [77.6, 10919.0], [77.7, 10919.0], [77.8, 10919.0], [77.9, 10919.0], [78.0, 11204.0], [78.1, 11204.0], [78.2, 11204.0], [78.3, 11204.0], [78.4, 11204.0], [78.5, 11204.0], [78.6, 11204.0], [78.7, 11204.0], [78.8, 11204.0], [78.9, 11204.0], [79.0, 11359.0], [79.1, 11359.0], [79.2, 11359.0], [79.3, 11359.0], [79.4, 11359.0], [79.5, 11359.0], [79.6, 11359.0], [79.7, 11359.0], [79.8, 11359.0], [79.9, 11359.0], [80.0, 11472.0], [80.1, 11472.0], [80.2, 11472.0], [80.3, 11472.0], [80.4, 11472.0], [80.5, 11472.0], [80.6, 11472.0], [80.7, 11472.0], [80.8, 11472.0], [80.9, 11472.0], [81.0, 11560.0], [81.1, 11560.0], [81.2, 11560.0], [81.3, 11560.0], [81.4, 11560.0], [81.5, 11560.0], [81.6, 11560.0], [81.7, 11560.0], [81.8, 11560.0], [81.9, 11560.0], [82.0, 11756.0], [82.1, 11756.0], [82.2, 11756.0], [82.3, 11756.0], [82.4, 11756.0], [82.5, 11756.0], [82.6, 11756.0], [82.7, 11756.0], [82.8, 11756.0], [82.9, 11756.0], [83.0, 11955.0], [83.1, 11955.0], [83.2, 11955.0], [83.3, 11955.0], [83.4, 11955.0], [83.5, 11955.0], [83.6, 11955.0], [83.7, 11955.0], [83.8, 11955.0], [83.9, 11955.0], [84.0, 11996.0], [84.1, 11996.0], [84.2, 11996.0], [84.3, 11996.0], [84.4, 11996.0], [84.5, 11996.0], [84.6, 11996.0], [84.7, 11996.0], [84.8, 11996.0], [84.9, 11996.0], [85.0, 12013.0], [85.1, 12013.0], [85.2, 12013.0], [85.3, 12013.0], [85.4, 12013.0], [85.5, 12013.0], [85.6, 12013.0], [85.7, 12013.0], [85.8, 12013.0], [85.9, 12013.0], [86.0, 12123.0], [86.1, 12123.0], [86.2, 12123.0], [86.3, 12123.0], [86.4, 12123.0], [86.5, 12123.0], [86.6, 12123.0], [86.7, 12123.0], [86.8, 12123.0], [86.9, 12123.0], [87.0, 12240.0], [87.1, 12240.0], [87.2, 12240.0], [87.3, 12240.0], [87.4, 12240.0], [87.5, 12240.0], [87.6, 12240.0], [87.7, 12240.0], [87.8, 12240.0], [87.9, 12240.0], [88.0, 12341.0], [88.1, 12341.0], [88.2, 12341.0], [88.3, 12341.0], [88.4, 12341.0], [88.5, 12341.0], [88.6, 12341.0], [88.7, 12341.0], [88.8, 12341.0], [88.9, 12341.0], [89.0, 12371.0], [89.1, 12371.0], [89.2, 12371.0], [89.3, 12371.0], [89.4, 12371.0], [89.5, 12371.0], [89.6, 12371.0], [89.7, 12371.0], [89.8, 12371.0], [89.9, 12371.0], [90.0, 12402.0], [90.1, 12402.0], [90.2, 12402.0], [90.3, 12402.0], [90.4, 12402.0], [90.5, 12402.0], [90.6, 12402.0], [90.7, 12402.0], [90.8, 12402.0], [90.9, 12402.0], [91.0, 12448.0], [91.1, 12448.0], [91.2, 12448.0], [91.3, 12448.0], [91.4, 12448.0], [91.5, 12448.0], [91.6, 12448.0], [91.7, 12448.0], [91.8, 12448.0], [91.9, 12448.0], [92.0, 12648.0], [92.1, 12648.0], [92.2, 12648.0], [92.3, 12648.0], [92.4, 12648.0], [92.5, 12648.0], [92.6, 12648.0], [92.7, 12648.0], [92.8, 12648.0], [92.9, 12648.0], [93.0, 12710.0], [93.1, 12710.0], [93.2, 12710.0], [93.3, 12710.0], [93.4, 12710.0], [93.5, 12710.0], [93.6, 12710.0], [93.7, 12710.0], [93.8, 12710.0], [93.9, 12710.0], [94.0, 12720.0], [94.1, 12720.0], [94.2, 12720.0], [94.3, 12720.0], [94.4, 12720.0], [94.5, 12720.0], [94.6, 12720.0], [94.7, 12720.0], [94.8, 12720.0], [94.9, 12720.0], [95.0, 12747.0], [95.1, 12747.0], [95.2, 12747.0], [95.3, 12747.0], [95.4, 12747.0], [95.5, 12747.0], [95.6, 12747.0], [95.7, 12747.0], [95.8, 12747.0], [95.9, 12747.0], [96.0, 13372.0], [96.1, 13372.0], [96.2, 13372.0], [96.3, 13372.0], [96.4, 13372.0], [96.5, 13372.0], [96.6, 13372.0], [96.7, 13372.0], [96.8, 13372.0], [96.9, 13372.0], [97.0, 13557.0], [97.1, 13557.0], [97.2, 13557.0], [97.3, 13557.0], [97.4, 13557.0], [97.5, 13557.0], [97.6, 13557.0], [97.7, 13557.0], [97.8, 13557.0], [97.9, 13557.0], [98.0, 14662.0], [98.1, 14662.0], [98.2, 14662.0], [98.3, 14662.0], [98.4, 14662.0], [98.5, 14662.0], [98.6, 14662.0], [98.7, 14662.0], [98.8, 14662.0], [98.9, 14662.0], [99.0, 15428.0], [99.1, 15428.0], [99.2, 15428.0], [99.3, 15428.0], [99.4, 15428.0], [99.5, 15428.0], [99.6, 15428.0], [99.7, 15428.0], [99.8, 15428.0], [99.9, 15428.0]], "isOverall": false, "label": "challenges ", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 100.0, "maxY": 31.0, "series": [{"data": [[5600.0, 1.0], [5700.0, 1.0], [5900.0, 1.0], [6000.0, 3.0], [6200.0, 2.0], [6300.0, 2.0], [6400.0, 1.0], [6600.0, 4.0], [6500.0, 2.0], [6700.0, 3.0], [6800.0, 4.0], [6900.0, 1.0], [7000.0, 1.0], [7100.0, 2.0], [7300.0, 2.0], [7400.0, 2.0], [7500.0, 1.0], [8100.0, 1.0], [10100.0, 1.0], [10200.0, 1.0], [10400.0, 1.0], [10500.0, 1.0], [11400.0, 1.0], [11500.0, 2.0], [11600.0, 1.0], [12100.0, 1.0], [12200.0, 1.0], [12300.0, 1.0], [12400.0, 1.0], [12700.0, 3.0], [12600.0, 1.0], [12900.0, 2.0], [13000.0, 1.0], [13100.0, 3.0], [12800.0, 1.0], [13200.0, 1.0], [13300.0, 2.0], [13500.0, 2.0], [13400.0, 3.0], [13600.0, 2.0], [13700.0, 4.0], [13800.0, 2.0], [13900.0, 3.0], [14000.0, 4.0], [14100.0, 1.0], [14300.0, 3.0], [14200.0, 1.0], [14400.0, 2.0], [14600.0, 1.0], [14500.0, 2.0], [14700.0, 2.0], [15000.0, 2.0], [15100.0, 1.0], [15500.0, 2.0], [15400.0, 1.0], [15900.0, 1.0], [16100.0, 1.0]], "isOverall": false, "label": "challengeUserIds", "isController": false}, {"data": [[600.0, 1.0], [700.0, 1.0], [900.0, 1.0], [1000.0, 1.0], [1200.0, 2.0], [1300.0, 2.0], [1400.0, 2.0], [1500.0, 2.0], [100.0, 31.0], [1600.0, 4.0], [1900.0, 1.0], [2000.0, 2.0], [2100.0, 1.0], [2400.0, 1.0], [2600.0, 1.0], [2800.0, 1.0], [3000.0, 2.0], [3100.0, 2.0], [200.0, 4.0], [3300.0, 1.0], [3700.0, 2.0], [3600.0, 1.0], [3800.0, 2.0], [3900.0, 1.0], [4100.0, 1.0], [4600.0, 2.0], [4400.0, 1.0], [4700.0, 1.0], [4800.0, 2.0], [300.0, 2.0], [5100.0, 3.0], [4900.0, 1.0], [5000.0, 3.0], [5300.0, 2.0], [5400.0, 1.0], [5600.0, 1.0], [5500.0, 1.0], [6000.0, 2.0], [5900.0, 2.0], [6100.0, 2.0], [6200.0, 1.0], [6300.0, 1.0], [400.0, 1.0], [500.0, 1.0]], "isOverall": false, "label": "ecoverseUserIds", "isController": false}, {"data": [[600.0, 1.0], [800.0, 2.0], [900.0, 3.0], [1100.0, 1.0], [1200.0, 1.0], [1500.0, 1.0], [100.0, 10.0], [2500.0, 2.0], [2600.0, 3.0], [2800.0, 6.0], [2900.0, 3.0], [3000.0, 2.0], [3100.0, 3.0], [200.0, 12.0], [3300.0, 8.0], [3200.0, 3.0], [3400.0, 2.0], [3500.0, 4.0], [3600.0, 3.0], [3700.0, 4.0], [3900.0, 3.0], [4200.0, 2.0], [4300.0, 5.0], [4100.0, 1.0], [4400.0, 4.0], [4500.0, 1.0], [300.0, 2.0], [4800.0, 3.0], [4700.0, 1.0], [5200.0, 2.0], [400.0, 1.0], [500.0, 1.0]], "isOverall": false, "label": "userAvatars", "isController": false}, {"data": [[600.0, 3.0], [700.0, 4.0], [800.0, 3.0], [900.0, 3.0], [1000.0, 6.0], [16600.0, 1.0], [17400.0, 1.0], [1100.0, 1.0], [17600.0, 4.0], [17800.0, 4.0], [18000.0, 1.0], [18100.0, 4.0], [18400.0, 2.0], [17700.0, 2.0], [18200.0, 1.0], [17900.0, 4.0], [19300.0, 2.0], [18700.0, 1.0], [18800.0, 2.0], [18900.0, 2.0], [19200.0, 5.0], [19100.0, 1.0], [19500.0, 1.0], [20400.0, 1.0], [20100.0, 2.0], [20300.0, 1.0], [19900.0, 1.0], [20200.0, 1.0], [19800.0, 1.0], [19700.0, 2.0], [20500.0, 3.0], [1300.0, 1.0], [21000.0, 2.0], [21300.0, 1.0], [21200.0, 1.0], [20900.0, 2.0], [20800.0, 1.0], [21100.0, 2.0], [21500.0, 1.0], [22000.0, 1.0], [21700.0, 1.0], [21600.0, 1.0], [200.0, 1.0], [300.0, 3.0], [400.0, 6.0], [500.0, 6.0]], "isOverall": false, "label": "challengeProfile", "isController": false}, {"data": [[2200.0, 1.0], [2700.0, 1.0], [3000.0, 1.0], [3200.0, 1.0], [3500.0, 1.0], [3700.0, 1.0], [3600.0, 1.0], [4000.0, 1.0], [4100.0, 2.0], [4500.0, 1.0], [4400.0, 1.0], [5000.0, 1.0], [4900.0, 1.0], [5800.0, 1.0], [5900.0, 1.0], [6300.0, 1.0], [6900.0, 1.0], [6800.0, 1.0], [7000.0, 1.0], [8100.0, 1.0], [8000.0, 1.0], [8400.0, 1.0], [8600.0, 1.0], [8300.0, 1.0], [8200.0, 1.0], [8900.0, 2.0], [9200.0, 1.0], [8800.0, 1.0], [9700.0, 3.0], [9500.0, 2.0], [9900.0, 1.0], [9800.0, 1.0], [10100.0, 2.0], [10200.0, 1.0], [10000.0, 2.0], [10600.0, 2.0], [10800.0, 2.0], [11200.0, 1.0], [10900.0, 1.0], [11700.0, 1.0], [11500.0, 1.0], [11300.0, 1.0], [11400.0, 1.0], [11900.0, 2.0], [12100.0, 1.0], [12000.0, 1.0], [12200.0, 1.0], [12700.0, 3.0], [12400.0, 2.0], [12300.0, 2.0], [12600.0, 1.0], [13300.0, 1.0], [13500.0, 1.0], [14600.0, 1.0], [15400.0, 1.0], [100.0, 16.0], [200.0, 8.0], [300.0, 3.0], [400.0, 3.0], [500.0, 1.0]], "isOverall": false, "label": "challenges ", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 22000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 349.0, "series": [{"data": [[0.0, 102.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 48.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 349.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 1.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 39.7358490566038, "minX": 1.61959854E12, "maxY": 93.5982404692082, "series": [{"data": [[1.61959854E12, 93.5982404692082], [1.6195986E12, 39.7358490566038]], "isOverall": false, "label": "CT Benchmark:  Queries - Challenge page", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6195986E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 110.0, "minX": 1.0, "maxY": 22020.0, "series": [{"data": [[99.0, 13556.111111111113], [98.0, 14040.0], [97.0, 14546.187499999998], [96.0, 15753.2], [100.0, 8814.499999999998]], "isOverall": false, "label": "challengeUserIds", "isController": false}, {"data": [[99.04000000000002, 11193.269999999999]], "isOverall": false, "label": "challengeUserIds-Aggregated", "isController": false}, {"data": [[2.0, 132.0], [3.0, 681.0], [4.0, 162.0], [5.0, 359.0], [6.0, 117.0], [7.0, 149.0], [8.0, 794.0], [9.0, 130.0], [10.0, 156.0], [11.0, 1515.0], [12.0, 1608.0], [13.0, 357.0], [14.0, 2002.0], [15.0, 110.0], [16.0, 583.0], [17.0, 1253.0], [19.0, 604.5], [20.0, 2116.0], [21.0, 1344.0], [22.0, 1285.0], [23.0, 1916.0], [24.0, 1666.0], [25.0, 2498.0], [26.0, 2043.0], [27.0, 172.0], [28.0, 115.0], [29.0, 1577.0], [30.0, 1452.0], [31.0, 1677.0], [33.0, 1479.0], [32.0, 230.0], [35.0, 1632.0], [34.0, 268.0], [37.0, 113.0], [36.0, 1387.0], [39.0, 2604.0], [38.0, 161.0], [41.0, 121.0], [40.0, 179.0], [43.0, 3094.0], [42.0, 983.0], [45.0, 3872.0], [44.0, 169.0], [47.0, 1500.5], [49.0, 3093.0], [48.0, 129.0], [51.0, 147.0], [50.0, 3743.0], [53.0, 5503.0], [52.0, 4697.0], [55.0, 6107.0], [54.0, 262.0], [57.0, 6046.0], [56.0, 5392.0], [59.0, 6324.0], [58.0, 5636.0], [61.0, 5940.0], [60.0, 6179.0], [63.0, 5949.0], [62.0, 6203.0], [67.0, 5382.0], [66.0, 4814.0], [65.0, 138.0], [64.0, 4879.0], [71.0, 167.0], [70.0, 144.0], [69.0, 5402.0], [68.0, 6076.0], [75.0, 5004.0], [74.0, 122.0], [73.0, 5151.0], [72.0, 5007.0], [79.0, 117.0], [78.0, 177.0], [77.0, 122.0], [76.0, 4725.0], [83.0, 146.0], [82.0, 4775.5], [80.0, 133.0], [87.0, 3919.0], [86.0, 4958.0], [85.0, 4114.0], [84.0, 5086.0], [91.0, 3367.0], [90.0, 120.0], [89.0, 3821.0], [88.0, 3687.0], [95.0, 3154.0], [94.0, 204.0], [93.0, 138.0], [92.0, 171.0], [99.0, 5114.0], [98.0, 4652.0], [97.0, 3177.0], [96.0, 3744.0], [100.0, 154.0], [1.0, 447.0]], "isOverall": false, "label": "ecoverseUserIds", "isController": false}, {"data": [[50.52999999999998, 2271.0499999999997]], "isOverall": false, "label": "ecoverseUserIds-Aggregated", "isController": false}, {"data": [[95.0, 3604.25], [94.0, 3397.0], [93.0, 3704.0], [99.0, 165.83333333333331], [98.0, 222.0], [97.0, 1735.3], [96.0, 3124.529411764705], [100.0, 2530.5500000000006]], "isOverall": false, "label": "userAvatars", "isController": false}, {"data": [[97.83000000000003, 2513.85]], "isOverall": false, "label": "userAvatars-Aggregated", "isController": false}, {"data": [[35.0, 21145.0], [37.0, 21507.0], [38.0, 21091.0], [45.0, 19774.0], [44.0, 21545.333333333332], [49.0, 19774.0], [48.0, 22020.0], [51.0, 20090.5], [53.0, 20129.0], [52.0, 20997.0], [55.0, 21051.333333333332], [54.0, 20905.5], [58.0, 20812.0], [61.0, 20576.0], [63.0, 19624.75], [62.0, 20128.0], [67.0, 19239.0], [66.0, 19174.333333333332], [65.0, 19001.0], [71.0, 17958.5], [70.0, 17831.0], [68.0, 19296.0], [75.0, 17930.0], [79.0, 18628.333333333332], [78.0, 18208.75], [77.0, 18006.0], [76.0, 17606.0], [83.0, 18100.75], [80.0, 18492.0], [87.0, 16605.0], [84.0, 17613.0], [95.0, 1021.3333333333334], [94.0, 790.0], [93.0, 350.0], [99.0, 331.0], [97.0, 535.0], [96.0, 805.3076923076923], [100.0, 638.25]], "isOverall": false, "label": "challengeProfile", "isController": false}, {"data": [[77.05999999999999, 12422.630000000001]], "isOverall": false, "label": "challengeProfile-Aggregated", "isController": false}, {"data": [[35.0, 7530.4], [39.0, 11359.0], [38.0, 7934.5], [41.0, 11560.0], [40.0, 13557.0], [42.0, 7362.666666666666], [44.0, 8915.833333333334], [48.0, 13270.333333333334], [51.0, 196.0], [52.0, 137.0], [55.0, 171.0], [58.0, 220.0], [61.0, 270.0], [63.0, 5468.666666666666], [66.0, 191.0], [65.0, 235.0], [4.0, 3096.0], [71.0, 9337.5], [70.0, 12497.0], [75.0, 178.0], [79.0, 5142.0], [78.0, 7599.0], [77.0, 6386.75], [76.0, 6268.5], [83.0, 179.0], [80.0, 10403.0], [84.0, 5065.25], [90.0, 8659.0], [95.0, 9789.0], [94.0, 3851.3333333333335], [93.0, 5060.5], [92.0, 8996.0], [97.0, 201.0], [96.0, 411.0], [6.0, 2709.0], [100.0, 261.0], [7.0, 4267.5], [8.0, 4588.0], [9.0, 4965.0], [11.0, 5821.0], [12.0, 5495.0], [16.0, 2266.0], [17.0, 6835.0], [18.0, 8231.0], [20.0, 9464.0], [27.0, 3403.0], [28.0, 6615.75]], "isOverall": false, "label": "challenges ", "isController": false}, {"data": [[57.889999999999986, 6336.479999999999]], "isOverall": false, "label": "challenges -Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 1149.8, "minX": 1.61959854E12, "maxY": 18184.65, "series": [{"data": [[1.61959854E12, 18184.65], [1.6195986E12, 16907.1]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.61959854E12, 2450.266666666667], [1.6195986E12, 1149.8]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6195986E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 2101.471428571427, "minX": 1.61959854E12, "maxY": 20322.485714285707, "series": [{"data": [[1.61959854E12, 11193.269999999999]], "isOverall": false, "label": "challengeUserIds", "isController": false}, {"data": [[1.61959854E12, 2666.733333333333], [1.6195986E12, 2101.471428571427]], "isOverall": false, "label": "ecoverseUserIds", "isController": false}, {"data": [[1.61959854E12, 2513.85]], "isOverall": false, "label": "userAvatars", "isController": false}, {"data": [[1.61959854E12, 8168.86153846154], [1.6195986E12, 20322.485714285707]], "isOverall": false, "label": "challengeProfile", "isController": false}, {"data": [[1.61959854E12, 6181.065217391304], [1.6195986E12, 6468.87037037037]], "isOverall": false, "label": "challenges ", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6195986E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 2094.9285714285716, "minX": 1.61959854E12, "maxY": 20310.17142857143, "series": [{"data": [[1.61959854E12, 11193.130000000001]], "isOverall": false, "label": "challengeUserIds", "isController": false}, {"data": [[1.61959854E12, 2659.5000000000005], [1.6195986E12, 2094.9285714285716]], "isOverall": false, "label": "ecoverseUserIds", "isController": false}, {"data": [[1.61959854E12, 2513.7499999999977]], "isOverall": false, "label": "userAvatars", "isController": false}, {"data": [[1.61959854E12, 8159.615384615387], [1.6195986E12, 20310.17142857143]], "isOverall": false, "label": "challengeProfile", "isController": false}, {"data": [[1.61959854E12, 6175.304347826087], [1.6195986E12, 6453.037037037038]], "isOverall": false, "label": "challenges ", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6195986E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61959854E12, "maxY": 2988.4699999999993, "series": [{"data": [[1.61959854E12, 2988.4699999999993]], "isOverall": false, "label": "challengeUserIds", "isController": false}, {"data": [[1.61959854E12, 0.0], [1.6195986E12, 0.0]], "isOverall": false, "label": "ecoverseUserIds", "isController": false}, {"data": [[1.61959854E12, 0.0]], "isOverall": false, "label": "userAvatars", "isController": false}, {"data": [[1.61959854E12, 0.0], [1.6195986E12, 0.0]], "isOverall": false, "label": "challengeProfile", "isController": false}, {"data": [[1.61959854E12, 0.0], [1.6195986E12, 0.0]], "isOverall": false, "label": "challenges ", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6195986E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 110.0, "minX": 1.61959854E12, "maxY": 22020.0, "series": [{"data": [[1.61959854E12, 19334.0], [1.6195986E12, 22020.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.61959854E12, 15106.600000000002], [1.6195986E12, 20512.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.61959854E12, 18814.059999999998], [1.6195986E12, 21873.600000000002]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.61959854E12, 17830.85], [1.6195986E12, 21145.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.61959854E12, 117.0], [1.6195986E12, 110.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.61959854E12, 4526.0], [1.6195986E12, 4879.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6195986E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 196.0, "minX": 2.0, "maxY": 18960.0, "series": [{"data": [[8.0, 8972.0], [32.0, 13223.5], [2.0, 6168.5], [34.0, 9434.5], [9.0, 8940.0], [11.0, 18960.0], [3.0, 4114.0], [12.0, 6112.5], [13.0, 3769.0], [14.0, 2986.0], [15.0, 3577.0], [16.0, 2126.0], [4.0, 8663.5], [17.0, 3381.0], [18.0, 2818.5], [19.0, 6357.0], [20.0, 5016.5], [21.0, 3339.0], [22.0, 3898.5], [23.0, 6842.0], [6.0, 12416.5], [7.0, 3405.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[8.0, 196.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 34.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 196.0, "minX": 2.0, "maxY": 18959.0, "series": [{"data": [[8.0, 8927.0], [32.0, 13223.5], [2.0, 6168.0], [34.0, 9434.0], [9.0, 8939.5], [11.0, 18959.0], [3.0, 4113.0], [12.0, 6068.0], [13.0, 3766.0], [14.0, 2958.5], [15.0, 3577.0], [16.0, 2125.0], [4.0, 8663.5], [17.0, 3380.5], [18.0, 2818.0], [19.0, 6357.0], [20.0, 4995.5], [21.0, 3339.0], [22.0, 3854.0], [23.0, 6842.0], [6.0, 12416.5], [7.0, 3405.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[8.0, 196.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 34.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 1.4833333333333334, "minX": 1.61959854E12, "maxY": 6.85, "series": [{"data": [[1.61959854E12, 6.85], [1.6195986E12, 1.4833333333333334]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6195986E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.61959854E12, "maxY": 5.666666666666667, "series": [{"data": [[1.61959854E12, 5.666666666666667], [1.6195986E12, 2.65]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.61959854E12, 0.016666666666666666]], "isOverall": false, "label": "502", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6195986E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.61959854E12, "maxY": 1.6666666666666667, "series": [{"data": [[1.61959854E12, 0.75], [1.6195986E12, 0.9]], "isOverall": false, "label": "challenges -success", "isController": false}, {"data": [[1.61959854E12, 0.016666666666666666]], "isOverall": false, "label": "challenges -failure", "isController": false}, {"data": [[1.61959854E12, 0.5], [1.6195986E12, 1.1666666666666667]], "isOverall": false, "label": "ecoverseUserIds-success", "isController": false}, {"data": [[1.61959854E12, 1.0833333333333333], [1.6195986E12, 0.5833333333333334]], "isOverall": false, "label": "challengeProfile-success", "isController": false}, {"data": [[1.61959854E12, 1.6666666666666667]], "isOverall": false, "label": "challengeUserIds-success", "isController": false}, {"data": [[1.61959854E12, 1.6666666666666667]], "isOverall": false, "label": "userAvatars-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6195986E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.61959854E12, "maxY": 5.666666666666667, "series": [{"data": [[1.61959854E12, 5.666666666666667], [1.6195986E12, 2.65]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.61959854E12, 0.016666666666666666]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6195986E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

