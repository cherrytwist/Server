/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 59.0, "minX": 0.0, "maxY": 21780.0, "series": [{"data": [[0.0, 5045.0], [0.1, 5045.0], [0.2, 5045.0], [0.3, 5045.0], [0.4, 5045.0], [0.5, 5045.0], [0.6, 5045.0], [0.7, 5045.0], [0.8, 5045.0], [0.9, 5045.0], [1.0, 5045.0], [1.1, 5045.0], [1.2, 5045.0], [1.3, 5045.0], [1.4, 5045.0], [1.5, 5045.0], [1.6, 5045.0], [1.7, 5045.0], [1.8, 5045.0], [1.9, 5045.0], [2.0, 5077.0], [2.1, 5077.0], [2.2, 5077.0], [2.3, 5077.0], [2.4, 5077.0], [2.5, 5077.0], [2.6, 5077.0], [2.7, 5077.0], [2.8, 5077.0], [2.9, 5077.0], [3.0, 5077.0], [3.1, 5077.0], [3.2, 5077.0], [3.3, 5077.0], [3.4, 5077.0], [3.5, 5077.0], [3.6, 5077.0], [3.7, 5077.0], [3.8, 5077.0], [3.9, 5077.0], [4.0, 5253.0], [4.1, 5253.0], [4.2, 5253.0], [4.3, 5253.0], [4.4, 5253.0], [4.5, 5253.0], [4.6, 5253.0], [4.7, 5253.0], [4.8, 5253.0], [4.9, 5253.0], [5.0, 5253.0], [5.1, 5253.0], [5.2, 5253.0], [5.3, 5253.0], [5.4, 5253.0], [5.5, 5253.0], [5.6, 5253.0], [5.7, 5253.0], [5.8, 5253.0], [5.9, 5253.0], [6.0, 5532.0], [6.1, 5532.0], [6.2, 5532.0], [6.3, 5532.0], [6.4, 5532.0], [6.5, 5532.0], [6.6, 5532.0], [6.7, 5532.0], [6.8, 5532.0], [6.9, 5532.0], [7.0, 5532.0], [7.1, 5532.0], [7.2, 5532.0], [7.3, 5532.0], [7.4, 5532.0], [7.5, 5532.0], [7.6, 5532.0], [7.7, 5532.0], [7.8, 5532.0], [7.9, 5532.0], [8.0, 5935.0], [8.1, 5935.0], [8.2, 5935.0], [8.3, 5935.0], [8.4, 5935.0], [8.5, 5935.0], [8.6, 5935.0], [8.7, 5935.0], [8.8, 5935.0], [8.9, 5935.0], [9.0, 5935.0], [9.1, 5935.0], [9.2, 5935.0], [9.3, 5935.0], [9.4, 5935.0], [9.5, 5935.0], [9.6, 5935.0], [9.7, 5935.0], [9.8, 5935.0], [9.9, 5935.0], [10.0, 6093.0], [10.1, 6093.0], [10.2, 6093.0], [10.3, 6093.0], [10.4, 6093.0], [10.5, 6093.0], [10.6, 6093.0], [10.7, 6093.0], [10.8, 6093.0], [10.9, 6093.0], [11.0, 6093.0], [11.1, 6093.0], [11.2, 6093.0], [11.3, 6093.0], [11.4, 6093.0], [11.5, 6093.0], [11.6, 6093.0], [11.7, 6093.0], [11.8, 6093.0], [11.9, 6093.0], [12.0, 6143.0], [12.1, 6143.0], [12.2, 6143.0], [12.3, 6143.0], [12.4, 6143.0], [12.5, 6143.0], [12.6, 6143.0], [12.7, 6143.0], [12.8, 6143.0], [12.9, 6143.0], [13.0, 6143.0], [13.1, 6143.0], [13.2, 6143.0], [13.3, 6143.0], [13.4, 6143.0], [13.5, 6143.0], [13.6, 6143.0], [13.7, 6143.0], [13.8, 6143.0], [13.9, 6143.0], [14.0, 6864.0], [14.1, 6864.0], [14.2, 6864.0], [14.3, 6864.0], [14.4, 6864.0], [14.5, 6864.0], [14.6, 6864.0], [14.7, 6864.0], [14.8, 6864.0], [14.9, 6864.0], [15.0, 6864.0], [15.1, 6864.0], [15.2, 6864.0], [15.3, 6864.0], [15.4, 6864.0], [15.5, 6864.0], [15.6, 6864.0], [15.7, 6864.0], [15.8, 6864.0], [15.9, 6864.0], [16.0, 7007.0], [16.1, 7007.0], [16.2, 7007.0], [16.3, 7007.0], [16.4, 7007.0], [16.5, 7007.0], [16.6, 7007.0], [16.7, 7007.0], [16.8, 7007.0], [16.9, 7007.0], [17.0, 7007.0], [17.1, 7007.0], [17.2, 7007.0], [17.3, 7007.0], [17.4, 7007.0], [17.5, 7007.0], [17.6, 7007.0], [17.7, 7007.0], [17.8, 7007.0], [17.9, 7007.0], [18.0, 7312.0], [18.1, 7312.0], [18.2, 7312.0], [18.3, 7312.0], [18.4, 7312.0], [18.5, 7312.0], [18.6, 7312.0], [18.7, 7312.0], [18.8, 7312.0], [18.9, 7312.0], [19.0, 7312.0], [19.1, 7312.0], [19.2, 7312.0], [19.3, 7312.0], [19.4, 7312.0], [19.5, 7312.0], [19.6, 7312.0], [19.7, 7312.0], [19.8, 7312.0], [19.9, 7312.0], [20.0, 7500.0], [20.1, 7500.0], [20.2, 7500.0], [20.3, 7500.0], [20.4, 7500.0], [20.5, 7500.0], [20.6, 7500.0], [20.7, 7500.0], [20.8, 7500.0], [20.9, 7500.0], [21.0, 7500.0], [21.1, 7500.0], [21.2, 7500.0], [21.3, 7500.0], [21.4, 7500.0], [21.5, 7500.0], [21.6, 7500.0], [21.7, 7500.0], [21.8, 7500.0], [21.9, 7500.0], [22.0, 7915.0], [22.1, 7915.0], [22.2, 7915.0], [22.3, 7915.0], [22.4, 7915.0], [22.5, 7915.0], [22.6, 7915.0], [22.7, 7915.0], [22.8, 7915.0], [22.9, 7915.0], [23.0, 7915.0], [23.1, 7915.0], [23.2, 7915.0], [23.3, 7915.0], [23.4, 7915.0], [23.5, 7915.0], [23.6, 7915.0], [23.7, 7915.0], [23.8, 7915.0], [23.9, 7915.0], [24.0, 8227.0], [24.1, 8227.0], [24.2, 8227.0], [24.3, 8227.0], [24.4, 8227.0], [24.5, 8227.0], [24.6, 8227.0], [24.7, 8227.0], [24.8, 8227.0], [24.9, 8227.0], [25.0, 8227.0], [25.1, 8227.0], [25.2, 8227.0], [25.3, 8227.0], [25.4, 8227.0], [25.5, 8227.0], [25.6, 8227.0], [25.7, 8227.0], [25.8, 8227.0], [25.9, 8227.0], [26.0, 8488.0], [26.1, 8488.0], [26.2, 8488.0], [26.3, 8488.0], [26.4, 8488.0], [26.5, 8488.0], [26.6, 8488.0], [26.7, 8488.0], [26.8, 8488.0], [26.9, 8488.0], [27.0, 8488.0], [27.1, 8488.0], [27.2, 8488.0], [27.3, 8488.0], [27.4, 8488.0], [27.5, 8488.0], [27.6, 8488.0], [27.7, 8488.0], [27.8, 8488.0], [27.9, 8488.0], [28.0, 8611.0], [28.1, 8611.0], [28.2, 8611.0], [28.3, 8611.0], [28.4, 8611.0], [28.5, 8611.0], [28.6, 8611.0], [28.7, 8611.0], [28.8, 8611.0], [28.9, 8611.0], [29.0, 8611.0], [29.1, 8611.0], [29.2, 8611.0], [29.3, 8611.0], [29.4, 8611.0], [29.5, 8611.0], [29.6, 8611.0], [29.7, 8611.0], [29.8, 8611.0], [29.9, 8611.0], [30.0, 8623.0], [30.1, 8623.0], [30.2, 8623.0], [30.3, 8623.0], [30.4, 8623.0], [30.5, 8623.0], [30.6, 8623.0], [30.7, 8623.0], [30.8, 8623.0], [30.9, 8623.0], [31.0, 8623.0], [31.1, 8623.0], [31.2, 8623.0], [31.3, 8623.0], [31.4, 8623.0], [31.5, 8623.0], [31.6, 8623.0], [31.7, 8623.0], [31.8, 8623.0], [31.9, 8623.0], [32.0, 8854.0], [32.1, 8854.0], [32.2, 8854.0], [32.3, 8854.0], [32.4, 8854.0], [32.5, 8854.0], [32.6, 8854.0], [32.7, 8854.0], [32.8, 8854.0], [32.9, 8854.0], [33.0, 8854.0], [33.1, 8854.0], [33.2, 8854.0], [33.3, 8854.0], [33.4, 8854.0], [33.5, 8854.0], [33.6, 8854.0], [33.7, 8854.0], [33.8, 8854.0], [33.9, 8854.0], [34.0, 9044.0], [34.1, 9044.0], [34.2, 9044.0], [34.3, 9044.0], [34.4, 9044.0], [34.5, 9044.0], [34.6, 9044.0], [34.7, 9044.0], [34.8, 9044.0], [34.9, 9044.0], [35.0, 9044.0], [35.1, 9044.0], [35.2, 9044.0], [35.3, 9044.0], [35.4, 9044.0], [35.5, 9044.0], [35.6, 9044.0], [35.7, 9044.0], [35.8, 9044.0], [35.9, 9044.0], [36.0, 9259.0], [36.1, 9259.0], [36.2, 9259.0], [36.3, 9259.0], [36.4, 9259.0], [36.5, 9259.0], [36.6, 9259.0], [36.7, 9259.0], [36.8, 9259.0], [36.9, 9259.0], [37.0, 9259.0], [37.1, 9259.0], [37.2, 9259.0], [37.3, 9259.0], [37.4, 9259.0], [37.5, 9259.0], [37.6, 9259.0], [37.7, 9259.0], [37.8, 9259.0], [37.9, 9259.0], [38.0, 9336.0], [38.1, 9336.0], [38.2, 9336.0], [38.3, 9336.0], [38.4, 9336.0], [38.5, 9336.0], [38.6, 9336.0], [38.7, 9336.0], [38.8, 9336.0], [38.9, 9336.0], [39.0, 9336.0], [39.1, 9336.0], [39.2, 9336.0], [39.3, 9336.0], [39.4, 9336.0], [39.5, 9336.0], [39.6, 9336.0], [39.7, 9336.0], [39.8, 9336.0], [39.9, 9336.0], [40.0, 10471.0], [40.1, 10471.0], [40.2, 10471.0], [40.3, 10471.0], [40.4, 10471.0], [40.5, 10471.0], [40.6, 10471.0], [40.7, 10471.0], [40.8, 10471.0], [40.9, 10471.0], [41.0, 10471.0], [41.1, 10471.0], [41.2, 10471.0], [41.3, 10471.0], [41.4, 10471.0], [41.5, 10471.0], [41.6, 10471.0], [41.7, 10471.0], [41.8, 10471.0], [41.9, 10471.0], [42.0, 10886.0], [42.1, 10886.0], [42.2, 10886.0], [42.3, 10886.0], [42.4, 10886.0], [42.5, 10886.0], [42.6, 10886.0], [42.7, 10886.0], [42.8, 10886.0], [42.9, 10886.0], [43.0, 10886.0], [43.1, 10886.0], [43.2, 10886.0], [43.3, 10886.0], [43.4, 10886.0], [43.5, 10886.0], [43.6, 10886.0], [43.7, 10886.0], [43.8, 10886.0], [43.9, 10886.0], [44.0, 11039.0], [44.1, 11039.0], [44.2, 11039.0], [44.3, 11039.0], [44.4, 11039.0], [44.5, 11039.0], [44.6, 11039.0], [44.7, 11039.0], [44.8, 11039.0], [44.9, 11039.0], [45.0, 11039.0], [45.1, 11039.0], [45.2, 11039.0], [45.3, 11039.0], [45.4, 11039.0], [45.5, 11039.0], [45.6, 11039.0], [45.7, 11039.0], [45.8, 11039.0], [45.9, 11039.0], [46.0, 11114.0], [46.1, 11114.0], [46.2, 11114.0], [46.3, 11114.0], [46.4, 11114.0], [46.5, 11114.0], [46.6, 11114.0], [46.7, 11114.0], [46.8, 11114.0], [46.9, 11114.0], [47.0, 11114.0], [47.1, 11114.0], [47.2, 11114.0], [47.3, 11114.0], [47.4, 11114.0], [47.5, 11114.0], [47.6, 11114.0], [47.7, 11114.0], [47.8, 11114.0], [47.9, 11114.0], [48.0, 11521.0], [48.1, 11521.0], [48.2, 11521.0], [48.3, 11521.0], [48.4, 11521.0], [48.5, 11521.0], [48.6, 11521.0], [48.7, 11521.0], [48.8, 11521.0], [48.9, 11521.0], [49.0, 11521.0], [49.1, 11521.0], [49.2, 11521.0], [49.3, 11521.0], [49.4, 11521.0], [49.5, 11521.0], [49.6, 11521.0], [49.7, 11521.0], [49.8, 11521.0], [49.9, 11521.0], [50.0, 11750.0], [50.1, 11750.0], [50.2, 11750.0], [50.3, 11750.0], [50.4, 11750.0], [50.5, 11750.0], [50.6, 11750.0], [50.7, 11750.0], [50.8, 11750.0], [50.9, 11750.0], [51.0, 11750.0], [51.1, 11750.0], [51.2, 11750.0], [51.3, 11750.0], [51.4, 11750.0], [51.5, 11750.0], [51.6, 11750.0], [51.7, 11750.0], [51.8, 11750.0], [51.9, 11750.0], [52.0, 12243.0], [52.1, 12243.0], [52.2, 12243.0], [52.3, 12243.0], [52.4, 12243.0], [52.5, 12243.0], [52.6, 12243.0], [52.7, 12243.0], [52.8, 12243.0], [52.9, 12243.0], [53.0, 12243.0], [53.1, 12243.0], [53.2, 12243.0], [53.3, 12243.0], [53.4, 12243.0], [53.5, 12243.0], [53.6, 12243.0], [53.7, 12243.0], [53.8, 12243.0], [53.9, 12243.0], [54.0, 12989.0], [54.1, 12989.0], [54.2, 12989.0], [54.3, 12989.0], [54.4, 12989.0], [54.5, 12989.0], [54.6, 12989.0], [54.7, 12989.0], [54.8, 12989.0], [54.9, 12989.0], [55.0, 12989.0], [55.1, 12989.0], [55.2, 12989.0], [55.3, 12989.0], [55.4, 12989.0], [55.5, 12989.0], [55.6, 12989.0], [55.7, 12989.0], [55.8, 12989.0], [55.9, 12989.0], [56.0, 13037.0], [56.1, 13037.0], [56.2, 13037.0], [56.3, 13037.0], [56.4, 13037.0], [56.5, 13037.0], [56.6, 13037.0], [56.7, 13037.0], [56.8, 13037.0], [56.9, 13037.0], [57.0, 13037.0], [57.1, 13037.0], [57.2, 13037.0], [57.3, 13037.0], [57.4, 13037.0], [57.5, 13037.0], [57.6, 13037.0], [57.7, 13037.0], [57.8, 13037.0], [57.9, 13037.0], [58.0, 13563.0], [58.1, 13563.0], [58.2, 13563.0], [58.3, 13563.0], [58.4, 13563.0], [58.5, 13563.0], [58.6, 13563.0], [58.7, 13563.0], [58.8, 13563.0], [58.9, 13563.0], [59.0, 13563.0], [59.1, 13563.0], [59.2, 13563.0], [59.3, 13563.0], [59.4, 13563.0], [59.5, 13563.0], [59.6, 13563.0], [59.7, 13563.0], [59.8, 13563.0], [59.9, 13563.0], [60.0, 13843.0], [60.1, 13843.0], [60.2, 13843.0], [60.3, 13843.0], [60.4, 13843.0], [60.5, 13843.0], [60.6, 13843.0], [60.7, 13843.0], [60.8, 13843.0], [60.9, 13843.0], [61.0, 13843.0], [61.1, 13843.0], [61.2, 13843.0], [61.3, 13843.0], [61.4, 13843.0], [61.5, 13843.0], [61.6, 13843.0], [61.7, 13843.0], [61.8, 13843.0], [61.9, 13843.0], [62.0, 14438.0], [62.1, 14438.0], [62.2, 14438.0], [62.3, 14438.0], [62.4, 14438.0], [62.5, 14438.0], [62.6, 14438.0], [62.7, 14438.0], [62.8, 14438.0], [62.9, 14438.0], [63.0, 14438.0], [63.1, 14438.0], [63.2, 14438.0], [63.3, 14438.0], [63.4, 14438.0], [63.5, 14438.0], [63.6, 14438.0], [63.7, 14438.0], [63.8, 14438.0], [63.9, 14438.0], [64.0, 14823.0], [64.1, 14823.0], [64.2, 14823.0], [64.3, 14823.0], [64.4, 14823.0], [64.5, 14823.0], [64.6, 14823.0], [64.7, 14823.0], [64.8, 14823.0], [64.9, 14823.0], [65.0, 14823.0], [65.1, 14823.0], [65.2, 14823.0], [65.3, 14823.0], [65.4, 14823.0], [65.5, 14823.0], [65.6, 14823.0], [65.7, 14823.0], [65.8, 14823.0], [65.9, 14823.0], [66.0, 14965.0], [66.1, 14965.0], [66.2, 14965.0], [66.3, 14965.0], [66.4, 14965.0], [66.5, 14965.0], [66.6, 14965.0], [66.7, 14965.0], [66.8, 14965.0], [66.9, 14965.0], [67.0, 14965.0], [67.1, 14965.0], [67.2, 14965.0], [67.3, 14965.0], [67.4, 14965.0], [67.5, 14965.0], [67.6, 14965.0], [67.7, 14965.0], [67.8, 14965.0], [67.9, 14965.0], [68.0, 14987.0], [68.1, 14987.0], [68.2, 14987.0], [68.3, 14987.0], [68.4, 14987.0], [68.5, 14987.0], [68.6, 14987.0], [68.7, 14987.0], [68.8, 14987.0], [68.9, 14987.0], [69.0, 14987.0], [69.1, 14987.0], [69.2, 14987.0], [69.3, 14987.0], [69.4, 14987.0], [69.5, 14987.0], [69.6, 14987.0], [69.7, 14987.0], [69.8, 14987.0], [69.9, 14987.0], [70.0, 15145.0], [70.1, 15145.0], [70.2, 15145.0], [70.3, 15145.0], [70.4, 15145.0], [70.5, 15145.0], [70.6, 15145.0], [70.7, 15145.0], [70.8, 15145.0], [70.9, 15145.0], [71.0, 15145.0], [71.1, 15145.0], [71.2, 15145.0], [71.3, 15145.0], [71.4, 15145.0], [71.5, 15145.0], [71.6, 15145.0], [71.7, 15145.0], [71.8, 15145.0], [71.9, 15145.0], [72.0, 15588.0], [72.1, 15588.0], [72.2, 15588.0], [72.3, 15588.0], [72.4, 15588.0], [72.5, 15588.0], [72.6, 15588.0], [72.7, 15588.0], [72.8, 15588.0], [72.9, 15588.0], [73.0, 15588.0], [73.1, 15588.0], [73.2, 15588.0], [73.3, 15588.0], [73.4, 15588.0], [73.5, 15588.0], [73.6, 15588.0], [73.7, 15588.0], [73.8, 15588.0], [73.9, 15588.0], [74.0, 16506.0], [74.1, 16506.0], [74.2, 16506.0], [74.3, 16506.0], [74.4, 16506.0], [74.5, 16506.0], [74.6, 16506.0], [74.7, 16506.0], [74.8, 16506.0], [74.9, 16506.0], [75.0, 16506.0], [75.1, 16506.0], [75.2, 16506.0], [75.3, 16506.0], [75.4, 16506.0], [75.5, 16506.0], [75.6, 16506.0], [75.7, 16506.0], [75.8, 16506.0], [75.9, 16506.0], [76.0, 16555.0], [76.1, 16555.0], [76.2, 16555.0], [76.3, 16555.0], [76.4, 16555.0], [76.5, 16555.0], [76.6, 16555.0], [76.7, 16555.0], [76.8, 16555.0], [76.9, 16555.0], [77.0, 16555.0], [77.1, 16555.0], [77.2, 16555.0], [77.3, 16555.0], [77.4, 16555.0], [77.5, 16555.0], [77.6, 16555.0], [77.7, 16555.0], [77.8, 16555.0], [77.9, 16555.0], [78.0, 16578.0], [78.1, 16578.0], [78.2, 16578.0], [78.3, 16578.0], [78.4, 16578.0], [78.5, 16578.0], [78.6, 16578.0], [78.7, 16578.0], [78.8, 16578.0], [78.9, 16578.0], [79.0, 16578.0], [79.1, 16578.0], [79.2, 16578.0], [79.3, 16578.0], [79.4, 16578.0], [79.5, 16578.0], [79.6, 16578.0], [79.7, 16578.0], [79.8, 16578.0], [79.9, 16578.0], [80.0, 17016.0], [80.1, 17016.0], [80.2, 17016.0], [80.3, 17016.0], [80.4, 17016.0], [80.5, 17016.0], [80.6, 17016.0], [80.7, 17016.0], [80.8, 17016.0], [80.9, 17016.0], [81.0, 17016.0], [81.1, 17016.0], [81.2, 17016.0], [81.3, 17016.0], [81.4, 17016.0], [81.5, 17016.0], [81.6, 17016.0], [81.7, 17016.0], [81.8, 17016.0], [81.9, 17016.0], [82.0, 17198.0], [82.1, 17198.0], [82.2, 17198.0], [82.3, 17198.0], [82.4, 17198.0], [82.5, 17198.0], [82.6, 17198.0], [82.7, 17198.0], [82.8, 17198.0], [82.9, 17198.0], [83.0, 17198.0], [83.1, 17198.0], [83.2, 17198.0], [83.3, 17198.0], [83.4, 17198.0], [83.5, 17198.0], [83.6, 17198.0], [83.7, 17198.0], [83.8, 17198.0], [83.9, 17198.0], [84.0, 18428.0], [84.1, 18428.0], [84.2, 18428.0], [84.3, 18428.0], [84.4, 18428.0], [84.5, 18428.0], [84.6, 18428.0], [84.7, 18428.0], [84.8, 18428.0], [84.9, 18428.0], [85.0, 18428.0], [85.1, 18428.0], [85.2, 18428.0], [85.3, 18428.0], [85.4, 18428.0], [85.5, 18428.0], [85.6, 18428.0], [85.7, 18428.0], [85.8, 18428.0], [85.9, 18428.0], [86.0, 18622.0], [86.1, 18622.0], [86.2, 18622.0], [86.3, 18622.0], [86.4, 18622.0], [86.5, 18622.0], [86.6, 18622.0], [86.7, 18622.0], [86.8, 18622.0], [86.9, 18622.0], [87.0, 18622.0], [87.1, 18622.0], [87.2, 18622.0], [87.3, 18622.0], [87.4, 18622.0], [87.5, 18622.0], [87.6, 18622.0], [87.7, 18622.0], [87.8, 18622.0], [87.9, 18622.0], [88.0, 18958.0], [88.1, 18958.0], [88.2, 18958.0], [88.3, 18958.0], [88.4, 18958.0], [88.5, 18958.0], [88.6, 18958.0], [88.7, 18958.0], [88.8, 18958.0], [88.9, 18958.0], [89.0, 18958.0], [89.1, 18958.0], [89.2, 18958.0], [89.3, 18958.0], [89.4, 18958.0], [89.5, 18958.0], [89.6, 18958.0], [89.7, 18958.0], [89.8, 18958.0], [89.9, 18958.0], [90.0, 19170.0], [90.1, 19170.0], [90.2, 19170.0], [90.3, 19170.0], [90.4, 19170.0], [90.5, 19170.0], [90.6, 19170.0], [90.7, 19170.0], [90.8, 19170.0], [90.9, 19170.0], [91.0, 19170.0], [91.1, 19170.0], [91.2, 19170.0], [91.3, 19170.0], [91.4, 19170.0], [91.5, 19170.0], [91.6, 19170.0], [91.7, 19170.0], [91.8, 19170.0], [91.9, 19170.0], [92.0, 19767.0], [92.1, 19767.0], [92.2, 19767.0], [92.3, 19767.0], [92.4, 19767.0], [92.5, 19767.0], [92.6, 19767.0], [92.7, 19767.0], [92.8, 19767.0], [92.9, 19767.0], [93.0, 19767.0], [93.1, 19767.0], [93.2, 19767.0], [93.3, 19767.0], [93.4, 19767.0], [93.5, 19767.0], [93.6, 19767.0], [93.7, 19767.0], [93.8, 19767.0], [93.9, 19767.0], [94.0, 20189.0], [94.1, 20189.0], [94.2, 20189.0], [94.3, 20189.0], [94.4, 20189.0], [94.5, 20189.0], [94.6, 20189.0], [94.7, 20189.0], [94.8, 20189.0], [94.9, 20189.0], [95.0, 20189.0], [95.1, 20189.0], [95.2, 20189.0], [95.3, 20189.0], [95.4, 20189.0], [95.5, 20189.0], [95.6, 20189.0], [95.7, 20189.0], [95.8, 20189.0], [95.9, 20189.0], [96.0, 20890.0], [96.1, 20890.0], [96.2, 20890.0], [96.3, 20890.0], [96.4, 20890.0], [96.5, 20890.0], [96.6, 20890.0], [96.7, 20890.0], [96.8, 20890.0], [96.9, 20890.0], [97.0, 20890.0], [97.1, 20890.0], [97.2, 20890.0], [97.3, 20890.0], [97.4, 20890.0], [97.5, 20890.0], [97.6, 20890.0], [97.7, 20890.0], [97.8, 20890.0], [97.9, 20890.0], [98.0, 21780.0], [98.1, 21780.0], [98.2, 21780.0], [98.3, 21780.0], [98.4, 21780.0], [98.5, 21780.0], [98.6, 21780.0], [98.7, 21780.0], [98.8, 21780.0], [98.9, 21780.0], [99.0, 21780.0], [99.1, 21780.0], [99.2, 21780.0], [99.3, 21780.0], [99.4, 21780.0], [99.5, 21780.0], [99.6, 21780.0], [99.7, 21780.0], [99.8, 21780.0], [99.9, 21780.0]], "isOverall": false, "label": "ecoverseCommunity", "isController": false}, {"data": [[0.0, 109.0], [0.1, 109.0], [0.2, 109.0], [0.3, 109.0], [0.4, 109.0], [0.5, 109.0], [0.6, 109.0], [0.7, 109.0], [0.8, 109.0], [0.9, 109.0], [1.0, 109.0], [1.1, 109.0], [1.2, 109.0], [1.3, 109.0], [1.4, 109.0], [1.5, 109.0], [1.6, 109.0], [1.7, 109.0], [1.8, 109.0], [1.9, 109.0], [2.0, 113.0], [2.1, 113.0], [2.2, 113.0], [2.3, 113.0], [2.4, 113.0], [2.5, 113.0], [2.6, 113.0], [2.7, 113.0], [2.8, 113.0], [2.9, 113.0], [3.0, 113.0], [3.1, 113.0], [3.2, 113.0], [3.3, 113.0], [3.4, 113.0], [3.5, 113.0], [3.6, 113.0], [3.7, 113.0], [3.8, 113.0], [3.9, 113.0], [4.0, 115.0], [4.1, 115.0], [4.2, 115.0], [4.3, 115.0], [4.4, 115.0], [4.5, 115.0], [4.6, 115.0], [4.7, 115.0], [4.8, 115.0], [4.9, 115.0], [5.0, 115.0], [5.1, 115.0], [5.2, 115.0], [5.3, 115.0], [5.4, 115.0], [5.5, 115.0], [5.6, 115.0], [5.7, 115.0], [5.8, 115.0], [5.9, 115.0], [6.0, 121.0], [6.1, 121.0], [6.2, 121.0], [6.3, 121.0], [6.4, 121.0], [6.5, 121.0], [6.6, 121.0], [6.7, 121.0], [6.8, 121.0], [6.9, 121.0], [7.0, 121.0], [7.1, 121.0], [7.2, 121.0], [7.3, 121.0], [7.4, 121.0], [7.5, 121.0], [7.6, 121.0], [7.7, 121.0], [7.8, 121.0], [7.9, 121.0], [8.0, 122.0], [8.1, 122.0], [8.2, 122.0], [8.3, 122.0], [8.4, 122.0], [8.5, 122.0], [8.6, 122.0], [8.7, 122.0], [8.8, 122.0], [8.9, 122.0], [9.0, 122.0], [9.1, 122.0], [9.2, 122.0], [9.3, 122.0], [9.4, 122.0], [9.5, 122.0], [9.6, 122.0], [9.7, 122.0], [9.8, 122.0], [9.9, 122.0], [10.0, 125.0], [10.1, 125.0], [10.2, 125.0], [10.3, 125.0], [10.4, 125.0], [10.5, 125.0], [10.6, 125.0], [10.7, 125.0], [10.8, 125.0], [10.9, 125.0], [11.0, 125.0], [11.1, 125.0], [11.2, 125.0], [11.3, 125.0], [11.4, 125.0], [11.5, 125.0], [11.6, 125.0], [11.7, 125.0], [11.8, 125.0], [11.9, 125.0], [12.0, 125.0], [12.1, 125.0], [12.2, 125.0], [12.3, 125.0], [12.4, 125.0], [12.5, 125.0], [12.6, 125.0], [12.7, 125.0], [12.8, 125.0], [12.9, 125.0], [13.0, 125.0], [13.1, 125.0], [13.2, 125.0], [13.3, 125.0], [13.4, 125.0], [13.5, 125.0], [13.6, 125.0], [13.7, 125.0], [13.8, 125.0], [13.9, 125.0], [14.0, 130.0], [14.1, 130.0], [14.2, 130.0], [14.3, 130.0], [14.4, 130.0], [14.5, 130.0], [14.6, 130.0], [14.7, 130.0], [14.8, 130.0], [14.9, 130.0], [15.0, 130.0], [15.1, 130.0], [15.2, 130.0], [15.3, 130.0], [15.4, 130.0], [15.5, 130.0], [15.6, 130.0], [15.7, 130.0], [15.8, 130.0], [15.9, 130.0], [16.0, 139.0], [16.1, 139.0], [16.2, 139.0], [16.3, 139.0], [16.4, 139.0], [16.5, 139.0], [16.6, 139.0], [16.7, 139.0], [16.8, 139.0], [16.9, 139.0], [17.0, 139.0], [17.1, 139.0], [17.2, 139.0], [17.3, 139.0], [17.4, 139.0], [17.5, 139.0], [17.6, 139.0], [17.7, 139.0], [17.8, 139.0], [17.9, 139.0], [18.0, 140.0], [18.1, 140.0], [18.2, 140.0], [18.3, 140.0], [18.4, 140.0], [18.5, 140.0], [18.6, 140.0], [18.7, 140.0], [18.8, 140.0], [18.9, 140.0], [19.0, 140.0], [19.1, 140.0], [19.2, 140.0], [19.3, 140.0], [19.4, 140.0], [19.5, 140.0], [19.6, 140.0], [19.7, 140.0], [19.8, 140.0], [19.9, 140.0], [20.0, 141.0], [20.1, 141.0], [20.2, 141.0], [20.3, 141.0], [20.4, 141.0], [20.5, 141.0], [20.6, 141.0], [20.7, 141.0], [20.8, 141.0], [20.9, 141.0], [21.0, 141.0], [21.1, 141.0], [21.2, 141.0], [21.3, 141.0], [21.4, 141.0], [21.5, 141.0], [21.6, 141.0], [21.7, 141.0], [21.8, 141.0], [21.9, 141.0], [22.0, 154.0], [22.1, 154.0], [22.2, 154.0], [22.3, 154.0], [22.4, 154.0], [22.5, 154.0], [22.6, 154.0], [22.7, 154.0], [22.8, 154.0], [22.9, 154.0], [23.0, 154.0], [23.1, 154.0], [23.2, 154.0], [23.3, 154.0], [23.4, 154.0], [23.5, 154.0], [23.6, 154.0], [23.7, 154.0], [23.8, 154.0], [23.9, 154.0], [24.0, 169.0], [24.1, 169.0], [24.2, 169.0], [24.3, 169.0], [24.4, 169.0], [24.5, 169.0], [24.6, 169.0], [24.7, 169.0], [24.8, 169.0], [24.9, 169.0], [25.0, 169.0], [25.1, 169.0], [25.2, 169.0], [25.3, 169.0], [25.4, 169.0], [25.5, 169.0], [25.6, 169.0], [25.7, 169.0], [25.8, 169.0], [25.9, 169.0], [26.0, 186.0], [26.1, 186.0], [26.2, 186.0], [26.3, 186.0], [26.4, 186.0], [26.5, 186.0], [26.6, 186.0], [26.7, 186.0], [26.8, 186.0], [26.9, 186.0], [27.0, 186.0], [27.1, 186.0], [27.2, 186.0], [27.3, 186.0], [27.4, 186.0], [27.5, 186.0], [27.6, 186.0], [27.7, 186.0], [27.8, 186.0], [27.9, 186.0], [28.0, 358.0], [28.1, 358.0], [28.2, 358.0], [28.3, 358.0], [28.4, 358.0], [28.5, 358.0], [28.6, 358.0], [28.7, 358.0], [28.8, 358.0], [28.9, 358.0], [29.0, 358.0], [29.1, 358.0], [29.2, 358.0], [29.3, 358.0], [29.4, 358.0], [29.5, 358.0], [29.6, 358.0], [29.7, 358.0], [29.8, 358.0], [29.9, 358.0], [30.0, 730.0], [30.1, 730.0], [30.2, 730.0], [30.3, 730.0], [30.4, 730.0], [30.5, 730.0], [30.6, 730.0], [30.7, 730.0], [30.8, 730.0], [30.9, 730.0], [31.0, 730.0], [31.1, 730.0], [31.2, 730.0], [31.3, 730.0], [31.4, 730.0], [31.5, 730.0], [31.6, 730.0], [31.7, 730.0], [31.8, 730.0], [31.9, 730.0], [32.0, 3285.0], [32.1, 3285.0], [32.2, 3285.0], [32.3, 3285.0], [32.4, 3285.0], [32.5, 3285.0], [32.6, 3285.0], [32.7, 3285.0], [32.8, 3285.0], [32.9, 3285.0], [33.0, 3285.0], [33.1, 3285.0], [33.2, 3285.0], [33.3, 3285.0], [33.4, 3285.0], [33.5, 3285.0], [33.6, 3285.0], [33.7, 3285.0], [33.8, 3285.0], [33.9, 3285.0], [34.0, 5783.0], [34.1, 5783.0], [34.2, 5783.0], [34.3, 5783.0], [34.4, 5783.0], [34.5, 5783.0], [34.6, 5783.0], [34.7, 5783.0], [34.8, 5783.0], [34.9, 5783.0], [35.0, 5783.0], [35.1, 5783.0], [35.2, 5783.0], [35.3, 5783.0], [35.4, 5783.0], [35.5, 5783.0], [35.6, 5783.0], [35.7, 5783.0], [35.8, 5783.0], [35.9, 5783.0], [36.0, 6666.0], [36.1, 6666.0], [36.2, 6666.0], [36.3, 6666.0], [36.4, 6666.0], [36.5, 6666.0], [36.6, 6666.0], [36.7, 6666.0], [36.8, 6666.0], [36.9, 6666.0], [37.0, 6666.0], [37.1, 6666.0], [37.2, 6666.0], [37.3, 6666.0], [37.4, 6666.0], [37.5, 6666.0], [37.6, 6666.0], [37.7, 6666.0], [37.8, 6666.0], [37.9, 6666.0], [38.0, 6956.0], [38.1, 6956.0], [38.2, 6956.0], [38.3, 6956.0], [38.4, 6956.0], [38.5, 6956.0], [38.6, 6956.0], [38.7, 6956.0], [38.8, 6956.0], [38.9, 6956.0], [39.0, 6956.0], [39.1, 6956.0], [39.2, 6956.0], [39.3, 6956.0], [39.4, 6956.0], [39.5, 6956.0], [39.6, 6956.0], [39.7, 6956.0], [39.8, 6956.0], [39.9, 6956.0], [40.0, 7231.0], [40.1, 7231.0], [40.2, 7231.0], [40.3, 7231.0], [40.4, 7231.0], [40.5, 7231.0], [40.6, 7231.0], [40.7, 7231.0], [40.8, 7231.0], [40.9, 7231.0], [41.0, 7231.0], [41.1, 7231.0], [41.2, 7231.0], [41.3, 7231.0], [41.4, 7231.0], [41.5, 7231.0], [41.6, 7231.0], [41.7, 7231.0], [41.8, 7231.0], [41.9, 7231.0], [42.0, 7258.0], [42.1, 7258.0], [42.2, 7258.0], [42.3, 7258.0], [42.4, 7258.0], [42.5, 7258.0], [42.6, 7258.0], [42.7, 7258.0], [42.8, 7258.0], [42.9, 7258.0], [43.0, 7258.0], [43.1, 7258.0], [43.2, 7258.0], [43.3, 7258.0], [43.4, 7258.0], [43.5, 7258.0], [43.6, 7258.0], [43.7, 7258.0], [43.8, 7258.0], [43.9, 7258.0], [44.0, 7289.0], [44.1, 7289.0], [44.2, 7289.0], [44.3, 7289.0], [44.4, 7289.0], [44.5, 7289.0], [44.6, 7289.0], [44.7, 7289.0], [44.8, 7289.0], [44.9, 7289.0], [45.0, 7289.0], [45.1, 7289.0], [45.2, 7289.0], [45.3, 7289.0], [45.4, 7289.0], [45.5, 7289.0], [45.6, 7289.0], [45.7, 7289.0], [45.8, 7289.0], [45.9, 7289.0], [46.0, 7688.0], [46.1, 7688.0], [46.2, 7688.0], [46.3, 7688.0], [46.4, 7688.0], [46.5, 7688.0], [46.6, 7688.0], [46.7, 7688.0], [46.8, 7688.0], [46.9, 7688.0], [47.0, 7688.0], [47.1, 7688.0], [47.2, 7688.0], [47.3, 7688.0], [47.4, 7688.0], [47.5, 7688.0], [47.6, 7688.0], [47.7, 7688.0], [47.8, 7688.0], [47.9, 7688.0], [48.0, 7764.0], [48.1, 7764.0], [48.2, 7764.0], [48.3, 7764.0], [48.4, 7764.0], [48.5, 7764.0], [48.6, 7764.0], [48.7, 7764.0], [48.8, 7764.0], [48.9, 7764.0], [49.0, 7764.0], [49.1, 7764.0], [49.2, 7764.0], [49.3, 7764.0], [49.4, 7764.0], [49.5, 7764.0], [49.6, 7764.0], [49.7, 7764.0], [49.8, 7764.0], [49.9, 7764.0], [50.0, 8195.0], [50.1, 8195.0], [50.2, 8195.0], [50.3, 8195.0], [50.4, 8195.0], [50.5, 8195.0], [50.6, 8195.0], [50.7, 8195.0], [50.8, 8195.0], [50.9, 8195.0], [51.0, 8195.0], [51.1, 8195.0], [51.2, 8195.0], [51.3, 8195.0], [51.4, 8195.0], [51.5, 8195.0], [51.6, 8195.0], [51.7, 8195.0], [51.8, 8195.0], [51.9, 8195.0], [52.0, 8474.0], [52.1, 8474.0], [52.2, 8474.0], [52.3, 8474.0], [52.4, 8474.0], [52.5, 8474.0], [52.6, 8474.0], [52.7, 8474.0], [52.8, 8474.0], [52.9, 8474.0], [53.0, 8474.0], [53.1, 8474.0], [53.2, 8474.0], [53.3, 8474.0], [53.4, 8474.0], [53.5, 8474.0], [53.6, 8474.0], [53.7, 8474.0], [53.8, 8474.0], [53.9, 8474.0], [54.0, 8531.0], [54.1, 8531.0], [54.2, 8531.0], [54.3, 8531.0], [54.4, 8531.0], [54.5, 8531.0], [54.6, 8531.0], [54.7, 8531.0], [54.8, 8531.0], [54.9, 8531.0], [55.0, 8531.0], [55.1, 8531.0], [55.2, 8531.0], [55.3, 8531.0], [55.4, 8531.0], [55.5, 8531.0], [55.6, 8531.0], [55.7, 8531.0], [55.8, 8531.0], [55.9, 8531.0], [56.0, 8617.0], [56.1, 8617.0], [56.2, 8617.0], [56.3, 8617.0], [56.4, 8617.0], [56.5, 8617.0], [56.6, 8617.0], [56.7, 8617.0], [56.8, 8617.0], [56.9, 8617.0], [57.0, 8617.0], [57.1, 8617.0], [57.2, 8617.0], [57.3, 8617.0], [57.4, 8617.0], [57.5, 8617.0], [57.6, 8617.0], [57.7, 8617.0], [57.8, 8617.0], [57.9, 8617.0], [58.0, 8652.0], [58.1, 8652.0], [58.2, 8652.0], [58.3, 8652.0], [58.4, 8652.0], [58.5, 8652.0], [58.6, 8652.0], [58.7, 8652.0], [58.8, 8652.0], [58.9, 8652.0], [59.0, 8652.0], [59.1, 8652.0], [59.2, 8652.0], [59.3, 8652.0], [59.4, 8652.0], [59.5, 8652.0], [59.6, 8652.0], [59.7, 8652.0], [59.8, 8652.0], [59.9, 8652.0], [60.0, 8730.0], [60.1, 8730.0], [60.2, 8730.0], [60.3, 8730.0], [60.4, 8730.0], [60.5, 8730.0], [60.6, 8730.0], [60.7, 8730.0], [60.8, 8730.0], [60.9, 8730.0], [61.0, 8730.0], [61.1, 8730.0], [61.2, 8730.0], [61.3, 8730.0], [61.4, 8730.0], [61.5, 8730.0], [61.6, 8730.0], [61.7, 8730.0], [61.8, 8730.0], [61.9, 8730.0], [62.0, 8836.0], [62.1, 8836.0], [62.2, 8836.0], [62.3, 8836.0], [62.4, 8836.0], [62.5, 8836.0], [62.6, 8836.0], [62.7, 8836.0], [62.8, 8836.0], [62.9, 8836.0], [63.0, 8836.0], [63.1, 8836.0], [63.2, 8836.0], [63.3, 8836.0], [63.4, 8836.0], [63.5, 8836.0], [63.6, 8836.0], [63.7, 8836.0], [63.8, 8836.0], [63.9, 8836.0], [64.0, 8901.0], [64.1, 8901.0], [64.2, 8901.0], [64.3, 8901.0], [64.4, 8901.0], [64.5, 8901.0], [64.6, 8901.0], [64.7, 8901.0], [64.8, 8901.0], [64.9, 8901.0], [65.0, 8901.0], [65.1, 8901.0], [65.2, 8901.0], [65.3, 8901.0], [65.4, 8901.0], [65.5, 8901.0], [65.6, 8901.0], [65.7, 8901.0], [65.8, 8901.0], [65.9, 8901.0], [66.0, 9088.0], [66.1, 9088.0], [66.2, 9088.0], [66.3, 9088.0], [66.4, 9088.0], [66.5, 9088.0], [66.6, 9088.0], [66.7, 9088.0], [66.8, 9088.0], [66.9, 9088.0], [67.0, 9088.0], [67.1, 9088.0], [67.2, 9088.0], [67.3, 9088.0], [67.4, 9088.0], [67.5, 9088.0], [67.6, 9088.0], [67.7, 9088.0], [67.8, 9088.0], [67.9, 9088.0], [68.0, 9461.0], [68.1, 9461.0], [68.2, 9461.0], [68.3, 9461.0], [68.4, 9461.0], [68.5, 9461.0], [68.6, 9461.0], [68.7, 9461.0], [68.8, 9461.0], [68.9, 9461.0], [69.0, 9461.0], [69.1, 9461.0], [69.2, 9461.0], [69.3, 9461.0], [69.4, 9461.0], [69.5, 9461.0], [69.6, 9461.0], [69.7, 9461.0], [69.8, 9461.0], [69.9, 9461.0], [70.0, 9505.0], [70.1, 9505.0], [70.2, 9505.0], [70.3, 9505.0], [70.4, 9505.0], [70.5, 9505.0], [70.6, 9505.0], [70.7, 9505.0], [70.8, 9505.0], [70.9, 9505.0], [71.0, 9505.0], [71.1, 9505.0], [71.2, 9505.0], [71.3, 9505.0], [71.4, 9505.0], [71.5, 9505.0], [71.6, 9505.0], [71.7, 9505.0], [71.8, 9505.0], [71.9, 9505.0], [72.0, 10210.0], [72.1, 10210.0], [72.2, 10210.0], [72.3, 10210.0], [72.4, 10210.0], [72.5, 10210.0], [72.6, 10210.0], [72.7, 10210.0], [72.8, 10210.0], [72.9, 10210.0], [73.0, 10210.0], [73.1, 10210.0], [73.2, 10210.0], [73.3, 10210.0], [73.4, 10210.0], [73.5, 10210.0], [73.6, 10210.0], [73.7, 10210.0], [73.8, 10210.0], [73.9, 10210.0], [74.0, 11043.0], [74.1, 11043.0], [74.2, 11043.0], [74.3, 11043.0], [74.4, 11043.0], [74.5, 11043.0], [74.6, 11043.0], [74.7, 11043.0], [74.8, 11043.0], [74.9, 11043.0], [75.0, 11043.0], [75.1, 11043.0], [75.2, 11043.0], [75.3, 11043.0], [75.4, 11043.0], [75.5, 11043.0], [75.6, 11043.0], [75.7, 11043.0], [75.8, 11043.0], [75.9, 11043.0], [76.0, 11629.0], [76.1, 11629.0], [76.2, 11629.0], [76.3, 11629.0], [76.4, 11629.0], [76.5, 11629.0], [76.6, 11629.0], [76.7, 11629.0], [76.8, 11629.0], [76.9, 11629.0], [77.0, 11629.0], [77.1, 11629.0], [77.2, 11629.0], [77.3, 11629.0], [77.4, 11629.0], [77.5, 11629.0], [77.6, 11629.0], [77.7, 11629.0], [77.8, 11629.0], [77.9, 11629.0], [78.0, 12245.0], [78.1, 12245.0], [78.2, 12245.0], [78.3, 12245.0], [78.4, 12245.0], [78.5, 12245.0], [78.6, 12245.0], [78.7, 12245.0], [78.8, 12245.0], [78.9, 12245.0], [79.0, 12245.0], [79.1, 12245.0], [79.2, 12245.0], [79.3, 12245.0], [79.4, 12245.0], [79.5, 12245.0], [79.6, 12245.0], [79.7, 12245.0], [79.8, 12245.0], [79.9, 12245.0], [80.0, 12767.0], [80.1, 12767.0], [80.2, 12767.0], [80.3, 12767.0], [80.4, 12767.0], [80.5, 12767.0], [80.6, 12767.0], [80.7, 12767.0], [80.8, 12767.0], [80.9, 12767.0], [81.0, 12767.0], [81.1, 12767.0], [81.2, 12767.0], [81.3, 12767.0], [81.4, 12767.0], [81.5, 12767.0], [81.6, 12767.0], [81.7, 12767.0], [81.8, 12767.0], [81.9, 12767.0], [82.0, 12771.0], [82.1, 12771.0], [82.2, 12771.0], [82.3, 12771.0], [82.4, 12771.0], [82.5, 12771.0], [82.6, 12771.0], [82.7, 12771.0], [82.8, 12771.0], [82.9, 12771.0], [83.0, 12771.0], [83.1, 12771.0], [83.2, 12771.0], [83.3, 12771.0], [83.4, 12771.0], [83.5, 12771.0], [83.6, 12771.0], [83.7, 12771.0], [83.8, 12771.0], [83.9, 12771.0], [84.0, 12862.0], [84.1, 12862.0], [84.2, 12862.0], [84.3, 12862.0], [84.4, 12862.0], [84.5, 12862.0], [84.6, 12862.0], [84.7, 12862.0], [84.8, 12862.0], [84.9, 12862.0], [85.0, 12862.0], [85.1, 12862.0], [85.2, 12862.0], [85.3, 12862.0], [85.4, 12862.0], [85.5, 12862.0], [85.6, 12862.0], [85.7, 12862.0], [85.8, 12862.0], [85.9, 12862.0], [86.0, 13350.0], [86.1, 13350.0], [86.2, 13350.0], [86.3, 13350.0], [86.4, 13350.0], [86.5, 13350.0], [86.6, 13350.0], [86.7, 13350.0], [86.8, 13350.0], [86.9, 13350.0], [87.0, 13350.0], [87.1, 13350.0], [87.2, 13350.0], [87.3, 13350.0], [87.4, 13350.0], [87.5, 13350.0], [87.6, 13350.0], [87.7, 13350.0], [87.8, 13350.0], [87.9, 13350.0], [88.0, 14018.0], [88.1, 14018.0], [88.2, 14018.0], [88.3, 14018.0], [88.4, 14018.0], [88.5, 14018.0], [88.6, 14018.0], [88.7, 14018.0], [88.8, 14018.0], [88.9, 14018.0], [89.0, 14018.0], [89.1, 14018.0], [89.2, 14018.0], [89.3, 14018.0], [89.4, 14018.0], [89.5, 14018.0], [89.6, 14018.0], [89.7, 14018.0], [89.8, 14018.0], [89.9, 14018.0], [90.0, 15126.0], [90.1, 15126.0], [90.2, 15126.0], [90.3, 15126.0], [90.4, 15126.0], [90.5, 15126.0], [90.6, 15126.0], [90.7, 15126.0], [90.8, 15126.0], [90.9, 15126.0], [91.0, 15126.0], [91.1, 15126.0], [91.2, 15126.0], [91.3, 15126.0], [91.4, 15126.0], [91.5, 15126.0], [91.6, 15126.0], [91.7, 15126.0], [91.8, 15126.0], [91.9, 15126.0], [92.0, 15448.0], [92.1, 15448.0], [92.2, 15448.0], [92.3, 15448.0], [92.4, 15448.0], [92.5, 15448.0], [92.6, 15448.0], [92.7, 15448.0], [92.8, 15448.0], [92.9, 15448.0], [93.0, 15448.0], [93.1, 15448.0], [93.2, 15448.0], [93.3, 15448.0], [93.4, 15448.0], [93.5, 15448.0], [93.6, 15448.0], [93.7, 15448.0], [93.8, 15448.0], [93.9, 15448.0], [94.0, 15917.0], [94.1, 15917.0], [94.2, 15917.0], [94.3, 15917.0], [94.4, 15917.0], [94.5, 15917.0], [94.6, 15917.0], [94.7, 15917.0], [94.8, 15917.0], [94.9, 15917.0], [95.0, 15917.0], [95.1, 15917.0], [95.2, 15917.0], [95.3, 15917.0], [95.4, 15917.0], [95.5, 15917.0], [95.6, 15917.0], [95.7, 15917.0], [95.8, 15917.0], [95.9, 15917.0], [96.0, 16585.0], [96.1, 16585.0], [96.2, 16585.0], [96.3, 16585.0], [96.4, 16585.0], [96.5, 16585.0], [96.6, 16585.0], [96.7, 16585.0], [96.8, 16585.0], [96.9, 16585.0], [97.0, 16585.0], [97.1, 16585.0], [97.2, 16585.0], [97.3, 16585.0], [97.4, 16585.0], [97.5, 16585.0], [97.6, 16585.0], [97.7, 16585.0], [97.8, 16585.0], [97.9, 16585.0], [98.0, 16904.0], [98.1, 16904.0], [98.2, 16904.0], [98.3, 16904.0], [98.4, 16904.0], [98.5, 16904.0], [98.6, 16904.0], [98.7, 16904.0], [98.8, 16904.0], [98.9, 16904.0], [99.0, 16904.0], [99.1, 16904.0], [99.2, 16904.0], [99.3, 16904.0], [99.4, 16904.0], [99.5, 16904.0], [99.6, 16904.0], [99.7, 16904.0], [99.8, 16904.0], [99.9, 16904.0]], "isOverall": false, "label": "groupMembers", "isController": false}, {"data": [[0.0, 59.0], [0.1, 59.0], [0.2, 59.0], [0.3, 59.0], [0.4, 59.0], [0.5, 59.0], [0.6, 59.0], [0.7, 59.0], [0.8, 59.0], [0.9, 59.0], [1.0, 59.0], [1.1, 59.0], [1.2, 59.0], [1.3, 59.0], [1.4, 59.0], [1.5, 59.0], [1.6, 59.0], [1.7, 59.0], [1.8, 59.0], [1.9, 59.0], [2.0, 62.0], [2.1, 62.0], [2.2, 62.0], [2.3, 62.0], [2.4, 62.0], [2.5, 62.0], [2.6, 62.0], [2.7, 62.0], [2.8, 62.0], [2.9, 62.0], [3.0, 62.0], [3.1, 62.0], [3.2, 62.0], [3.3, 62.0], [3.4, 62.0], [3.5, 62.0], [3.6, 62.0], [3.7, 62.0], [3.8, 62.0], [3.9, 62.0], [4.0, 62.0], [4.1, 62.0], [4.2, 62.0], [4.3, 62.0], [4.4, 62.0], [4.5, 62.0], [4.6, 62.0], [4.7, 62.0], [4.8, 62.0], [4.9, 62.0], [5.0, 62.0], [5.1, 62.0], [5.2, 62.0], [5.3, 62.0], [5.4, 62.0], [5.5, 62.0], [5.6, 62.0], [5.7, 62.0], [5.8, 62.0], [5.9, 62.0], [6.0, 62.0], [6.1, 62.0], [6.2, 62.0], [6.3, 62.0], [6.4, 62.0], [6.5, 62.0], [6.6, 62.0], [6.7, 62.0], [6.8, 62.0], [6.9, 62.0], [7.0, 62.0], [7.1, 62.0], [7.2, 62.0], [7.3, 62.0], [7.4, 62.0], [7.5, 62.0], [7.6, 62.0], [7.7, 62.0], [7.8, 62.0], [7.9, 62.0], [8.0, 63.0], [8.1, 63.0], [8.2, 63.0], [8.3, 63.0], [8.4, 63.0], [8.5, 63.0], [8.6, 63.0], [8.7, 63.0], [8.8, 63.0], [8.9, 63.0], [9.0, 63.0], [9.1, 63.0], [9.2, 63.0], [9.3, 63.0], [9.4, 63.0], [9.5, 63.0], [9.6, 63.0], [9.7, 63.0], [9.8, 63.0], [9.9, 63.0], [10.0, 64.0], [10.1, 64.0], [10.2, 64.0], [10.3, 64.0], [10.4, 64.0], [10.5, 64.0], [10.6, 64.0], [10.7, 64.0], [10.8, 64.0], [10.9, 64.0], [11.0, 64.0], [11.1, 64.0], [11.2, 64.0], [11.3, 64.0], [11.4, 64.0], [11.5, 64.0], [11.6, 64.0], [11.7, 64.0], [11.8, 64.0], [11.9, 64.0], [12.0, 67.0], [12.1, 67.0], [12.2, 67.0], [12.3, 67.0], [12.4, 67.0], [12.5, 67.0], [12.6, 67.0], [12.7, 67.0], [12.8, 67.0], [12.9, 67.0], [13.0, 67.0], [13.1, 67.0], [13.2, 67.0], [13.3, 67.0], [13.4, 67.0], [13.5, 67.0], [13.6, 67.0], [13.7, 67.0], [13.8, 67.0], [13.9, 67.0], [14.0, 68.0], [14.1, 68.0], [14.2, 68.0], [14.3, 68.0], [14.4, 68.0], [14.5, 68.0], [14.6, 68.0], [14.7, 68.0], [14.8, 68.0], [14.9, 68.0], [15.0, 68.0], [15.1, 68.0], [15.2, 68.0], [15.3, 68.0], [15.4, 68.0], [15.5, 68.0], [15.6, 68.0], [15.7, 68.0], [15.8, 68.0], [15.9, 68.0], [16.0, 68.0], [16.1, 68.0], [16.2, 68.0], [16.3, 68.0], [16.4, 68.0], [16.5, 68.0], [16.6, 68.0], [16.7, 68.0], [16.8, 68.0], [16.9, 68.0], [17.0, 68.0], [17.1, 68.0], [17.2, 68.0], [17.3, 68.0], [17.4, 68.0], [17.5, 68.0], [17.6, 68.0], [17.7, 68.0], [17.8, 68.0], [17.9, 68.0], [18.0, 71.0], [18.1, 71.0], [18.2, 71.0], [18.3, 71.0], [18.4, 71.0], [18.5, 71.0], [18.6, 71.0], [18.7, 71.0], [18.8, 71.0], [18.9, 71.0], [19.0, 71.0], [19.1, 71.0], [19.2, 71.0], [19.3, 71.0], [19.4, 71.0], [19.5, 71.0], [19.6, 71.0], [19.7, 71.0], [19.8, 71.0], [19.9, 71.0], [20.0, 72.0], [20.1, 72.0], [20.2, 72.0], [20.3, 72.0], [20.4, 72.0], [20.5, 72.0], [20.6, 72.0], [20.7, 72.0], [20.8, 72.0], [20.9, 72.0], [21.0, 72.0], [21.1, 72.0], [21.2, 72.0], [21.3, 72.0], [21.4, 72.0], [21.5, 72.0], [21.6, 72.0], [21.7, 72.0], [21.8, 72.0], [21.9, 72.0], [22.0, 76.0], [22.1, 76.0], [22.2, 76.0], [22.3, 76.0], [22.4, 76.0], [22.5, 76.0], [22.6, 76.0], [22.7, 76.0], [22.8, 76.0], [22.9, 76.0], [23.0, 76.0], [23.1, 76.0], [23.2, 76.0], [23.3, 76.0], [23.4, 76.0], [23.5, 76.0], [23.6, 76.0], [23.7, 76.0], [23.8, 76.0], [23.9, 76.0], [24.0, 85.0], [24.1, 85.0], [24.2, 85.0], [24.3, 85.0], [24.4, 85.0], [24.5, 85.0], [24.6, 85.0], [24.7, 85.0], [24.8, 85.0], [24.9, 85.0], [25.0, 85.0], [25.1, 85.0], [25.2, 85.0], [25.3, 85.0], [25.4, 85.0], [25.5, 85.0], [25.6, 85.0], [25.7, 85.0], [25.8, 85.0], [25.9, 85.0], [26.0, 154.0], [26.1, 154.0], [26.2, 154.0], [26.3, 154.0], [26.4, 154.0], [26.5, 154.0], [26.6, 154.0], [26.7, 154.0], [26.8, 154.0], [26.9, 154.0], [27.0, 154.0], [27.1, 154.0], [27.2, 154.0], [27.3, 154.0], [27.4, 154.0], [27.5, 154.0], [27.6, 154.0], [27.7, 154.0], [27.8, 154.0], [27.9, 154.0], [28.0, 201.0], [28.1, 201.0], [28.2, 201.0], [28.3, 201.0], [28.4, 201.0], [28.5, 201.0], [28.6, 201.0], [28.7, 201.0], [28.8, 201.0], [28.9, 201.0], [29.0, 201.0], [29.1, 201.0], [29.2, 201.0], [29.3, 201.0], [29.4, 201.0], [29.5, 201.0], [29.6, 201.0], [29.7, 201.0], [29.8, 201.0], [29.9, 201.0], [30.0, 310.0], [30.1, 310.0], [30.2, 310.0], [30.3, 310.0], [30.4, 310.0], [30.5, 310.0], [30.6, 310.0], [30.7, 310.0], [30.8, 310.0], [30.9, 310.0], [31.0, 310.0], [31.1, 310.0], [31.2, 310.0], [31.3, 310.0], [31.4, 310.0], [31.5, 310.0], [31.6, 310.0], [31.7, 310.0], [31.8, 310.0], [31.9, 310.0], [32.0, 338.0], [32.1, 338.0], [32.2, 338.0], [32.3, 338.0], [32.4, 338.0], [32.5, 338.0], [32.6, 338.0], [32.7, 338.0], [32.8, 338.0], [32.9, 338.0], [33.0, 338.0], [33.1, 338.0], [33.2, 338.0], [33.3, 338.0], [33.4, 338.0], [33.5, 338.0], [33.6, 338.0], [33.7, 338.0], [33.8, 338.0], [33.9, 338.0], [34.0, 383.0], [34.1, 383.0], [34.2, 383.0], [34.3, 383.0], [34.4, 383.0], [34.5, 383.0], [34.6, 383.0], [34.7, 383.0], [34.8, 383.0], [34.9, 383.0], [35.0, 383.0], [35.1, 383.0], [35.2, 383.0], [35.3, 383.0], [35.4, 383.0], [35.5, 383.0], [35.6, 383.0], [35.7, 383.0], [35.8, 383.0], [35.9, 383.0], [36.0, 423.0], [36.1, 423.0], [36.2, 423.0], [36.3, 423.0], [36.4, 423.0], [36.5, 423.0], [36.6, 423.0], [36.7, 423.0], [36.8, 423.0], [36.9, 423.0], [37.0, 423.0], [37.1, 423.0], [37.2, 423.0], [37.3, 423.0], [37.4, 423.0], [37.5, 423.0], [37.6, 423.0], [37.7, 423.0], [37.8, 423.0], [37.9, 423.0], [38.0, 477.0], [38.1, 477.0], [38.2, 477.0], [38.3, 477.0], [38.4, 477.0], [38.5, 477.0], [38.6, 477.0], [38.7, 477.0], [38.8, 477.0], [38.9, 477.0], [39.0, 477.0], [39.1, 477.0], [39.2, 477.0], [39.3, 477.0], [39.4, 477.0], [39.5, 477.0], [39.6, 477.0], [39.7, 477.0], [39.8, 477.0], [39.9, 477.0], [40.0, 522.0], [40.1, 522.0], [40.2, 522.0], [40.3, 522.0], [40.4, 522.0], [40.5, 522.0], [40.6, 522.0], [40.7, 522.0], [40.8, 522.0], [40.9, 522.0], [41.0, 522.0], [41.1, 522.0], [41.2, 522.0], [41.3, 522.0], [41.4, 522.0], [41.5, 522.0], [41.6, 522.0], [41.7, 522.0], [41.8, 522.0], [41.9, 522.0], [42.0, 758.0], [42.1, 758.0], [42.2, 758.0], [42.3, 758.0], [42.4, 758.0], [42.5, 758.0], [42.6, 758.0], [42.7, 758.0], [42.8, 758.0], [42.9, 758.0], [43.0, 758.0], [43.1, 758.0], [43.2, 758.0], [43.3, 758.0], [43.4, 758.0], [43.5, 758.0], [43.6, 758.0], [43.7, 758.0], [43.8, 758.0], [43.9, 758.0], [44.0, 790.0], [44.1, 790.0], [44.2, 790.0], [44.3, 790.0], [44.4, 790.0], [44.5, 790.0], [44.6, 790.0], [44.7, 790.0], [44.8, 790.0], [44.9, 790.0], [45.0, 790.0], [45.1, 790.0], [45.2, 790.0], [45.3, 790.0], [45.4, 790.0], [45.5, 790.0], [45.6, 790.0], [45.7, 790.0], [45.8, 790.0], [45.9, 790.0], [46.0, 942.0], [46.1, 942.0], [46.2, 942.0], [46.3, 942.0], [46.4, 942.0], [46.5, 942.0], [46.6, 942.0], [46.7, 942.0], [46.8, 942.0], [46.9, 942.0], [47.0, 942.0], [47.1, 942.0], [47.2, 942.0], [47.3, 942.0], [47.4, 942.0], [47.5, 942.0], [47.6, 942.0], [47.7, 942.0], [47.8, 942.0], [47.9, 942.0], [48.0, 982.0], [48.1, 982.0], [48.2, 982.0], [48.3, 982.0], [48.4, 982.0], [48.5, 982.0], [48.6, 982.0], [48.7, 982.0], [48.8, 982.0], [48.9, 982.0], [49.0, 982.0], [49.1, 982.0], [49.2, 982.0], [49.3, 982.0], [49.4, 982.0], [49.5, 982.0], [49.6, 982.0], [49.7, 982.0], [49.8, 982.0], [49.9, 982.0], [50.0, 1201.0], [50.1, 1201.0], [50.2, 1201.0], [50.3, 1201.0], [50.4, 1201.0], [50.5, 1201.0], [50.6, 1201.0], [50.7, 1201.0], [50.8, 1201.0], [50.9, 1201.0], [51.0, 1201.0], [51.1, 1201.0], [51.2, 1201.0], [51.3, 1201.0], [51.4, 1201.0], [51.5, 1201.0], [51.6, 1201.0], [51.7, 1201.0], [51.8, 1201.0], [51.9, 1201.0], [52.0, 1294.0], [52.1, 1294.0], [52.2, 1294.0], [52.3, 1294.0], [52.4, 1294.0], [52.5, 1294.0], [52.6, 1294.0], [52.7, 1294.0], [52.8, 1294.0], [52.9, 1294.0], [53.0, 1294.0], [53.1, 1294.0], [53.2, 1294.0], [53.3, 1294.0], [53.4, 1294.0], [53.5, 1294.0], [53.6, 1294.0], [53.7, 1294.0], [53.8, 1294.0], [53.9, 1294.0], [54.0, 1359.0], [54.1, 1359.0], [54.2, 1359.0], [54.3, 1359.0], [54.4, 1359.0], [54.5, 1359.0], [54.6, 1359.0], [54.7, 1359.0], [54.8, 1359.0], [54.9, 1359.0], [55.0, 1359.0], [55.1, 1359.0], [55.2, 1359.0], [55.3, 1359.0], [55.4, 1359.0], [55.5, 1359.0], [55.6, 1359.0], [55.7, 1359.0], [55.8, 1359.0], [55.9, 1359.0], [56.0, 1370.0], [56.1, 1370.0], [56.2, 1370.0], [56.3, 1370.0], [56.4, 1370.0], [56.5, 1370.0], [56.6, 1370.0], [56.7, 1370.0], [56.8, 1370.0], [56.9, 1370.0], [57.0, 1370.0], [57.1, 1370.0], [57.2, 1370.0], [57.3, 1370.0], [57.4, 1370.0], [57.5, 1370.0], [57.6, 1370.0], [57.7, 1370.0], [57.8, 1370.0], [57.9, 1370.0], [58.0, 1492.0], [58.1, 1492.0], [58.2, 1492.0], [58.3, 1492.0], [58.4, 1492.0], [58.5, 1492.0], [58.6, 1492.0], [58.7, 1492.0], [58.8, 1492.0], [58.9, 1492.0], [59.0, 1492.0], [59.1, 1492.0], [59.2, 1492.0], [59.3, 1492.0], [59.4, 1492.0], [59.5, 1492.0], [59.6, 1492.0], [59.7, 1492.0], [59.8, 1492.0], [59.9, 1492.0], [60.0, 1500.0], [60.1, 1500.0], [60.2, 1500.0], [60.3, 1500.0], [60.4, 1500.0], [60.5, 1500.0], [60.6, 1500.0], [60.7, 1500.0], [60.8, 1500.0], [60.9, 1500.0], [61.0, 1500.0], [61.1, 1500.0], [61.2, 1500.0], [61.3, 1500.0], [61.4, 1500.0], [61.5, 1500.0], [61.6, 1500.0], [61.7, 1500.0], [61.8, 1500.0], [61.9, 1500.0], [62.0, 1558.0], [62.1, 1558.0], [62.2, 1558.0], [62.3, 1558.0], [62.4, 1558.0], [62.5, 1558.0], [62.6, 1558.0], [62.7, 1558.0], [62.8, 1558.0], [62.9, 1558.0], [63.0, 1558.0], [63.1, 1558.0], [63.2, 1558.0], [63.3, 1558.0], [63.4, 1558.0], [63.5, 1558.0], [63.6, 1558.0], [63.7, 1558.0], [63.8, 1558.0], [63.9, 1558.0], [64.0, 1746.0], [64.1, 1746.0], [64.2, 1746.0], [64.3, 1746.0], [64.4, 1746.0], [64.5, 1746.0], [64.6, 1746.0], [64.7, 1746.0], [64.8, 1746.0], [64.9, 1746.0], [65.0, 1746.0], [65.1, 1746.0], [65.2, 1746.0], [65.3, 1746.0], [65.4, 1746.0], [65.5, 1746.0], [65.6, 1746.0], [65.7, 1746.0], [65.8, 1746.0], [65.9, 1746.0], [66.0, 1907.0], [66.1, 1907.0], [66.2, 1907.0], [66.3, 1907.0], [66.4, 1907.0], [66.5, 1907.0], [66.6, 1907.0], [66.7, 1907.0], [66.8, 1907.0], [66.9, 1907.0], [67.0, 1907.0], [67.1, 1907.0], [67.2, 1907.0], [67.3, 1907.0], [67.4, 1907.0], [67.5, 1907.0], [67.6, 1907.0], [67.7, 1907.0], [67.8, 1907.0], [67.9, 1907.0], [68.0, 2014.0], [68.1, 2014.0], [68.2, 2014.0], [68.3, 2014.0], [68.4, 2014.0], [68.5, 2014.0], [68.6, 2014.0], [68.7, 2014.0], [68.8, 2014.0], [68.9, 2014.0], [69.0, 2014.0], [69.1, 2014.0], [69.2, 2014.0], [69.3, 2014.0], [69.4, 2014.0], [69.5, 2014.0], [69.6, 2014.0], [69.7, 2014.0], [69.8, 2014.0], [69.9, 2014.0], [70.0, 2142.0], [70.1, 2142.0], [70.2, 2142.0], [70.3, 2142.0], [70.4, 2142.0], [70.5, 2142.0], [70.6, 2142.0], [70.7, 2142.0], [70.8, 2142.0], [70.9, 2142.0], [71.0, 2142.0], [71.1, 2142.0], [71.2, 2142.0], [71.3, 2142.0], [71.4, 2142.0], [71.5, 2142.0], [71.6, 2142.0], [71.7, 2142.0], [71.8, 2142.0], [71.9, 2142.0], [72.0, 2160.0], [72.1, 2160.0], [72.2, 2160.0], [72.3, 2160.0], [72.4, 2160.0], [72.5, 2160.0], [72.6, 2160.0], [72.7, 2160.0], [72.8, 2160.0], [72.9, 2160.0], [73.0, 2160.0], [73.1, 2160.0], [73.2, 2160.0], [73.3, 2160.0], [73.4, 2160.0], [73.5, 2160.0], [73.6, 2160.0], [73.7, 2160.0], [73.8, 2160.0], [73.9, 2160.0], [74.0, 2232.0], [74.1, 2232.0], [74.2, 2232.0], [74.3, 2232.0], [74.4, 2232.0], [74.5, 2232.0], [74.6, 2232.0], [74.7, 2232.0], [74.8, 2232.0], [74.9, 2232.0], [75.0, 2232.0], [75.1, 2232.0], [75.2, 2232.0], [75.3, 2232.0], [75.4, 2232.0], [75.5, 2232.0], [75.6, 2232.0], [75.7, 2232.0], [75.8, 2232.0], [75.9, 2232.0], [76.0, 2264.0], [76.1, 2264.0], [76.2, 2264.0], [76.3, 2264.0], [76.4, 2264.0], [76.5, 2264.0], [76.6, 2264.0], [76.7, 2264.0], [76.8, 2264.0], [76.9, 2264.0], [77.0, 2264.0], [77.1, 2264.0], [77.2, 2264.0], [77.3, 2264.0], [77.4, 2264.0], [77.5, 2264.0], [77.6, 2264.0], [77.7, 2264.0], [77.8, 2264.0], [77.9, 2264.0], [78.0, 2304.0], [78.1, 2304.0], [78.2, 2304.0], [78.3, 2304.0], [78.4, 2304.0], [78.5, 2304.0], [78.6, 2304.0], [78.7, 2304.0], [78.8, 2304.0], [78.9, 2304.0], [79.0, 2304.0], [79.1, 2304.0], [79.2, 2304.0], [79.3, 2304.0], [79.4, 2304.0], [79.5, 2304.0], [79.6, 2304.0], [79.7, 2304.0], [79.8, 2304.0], [79.9, 2304.0], [80.0, 2379.0], [80.1, 2379.0], [80.2, 2379.0], [80.3, 2379.0], [80.4, 2379.0], [80.5, 2379.0], [80.6, 2379.0], [80.7, 2379.0], [80.8, 2379.0], [80.9, 2379.0], [81.0, 2379.0], [81.1, 2379.0], [81.2, 2379.0], [81.3, 2379.0], [81.4, 2379.0], [81.5, 2379.0], [81.6, 2379.0], [81.7, 2379.0], [81.8, 2379.0], [81.9, 2379.0], [82.0, 2468.0], [82.1, 2468.0], [82.2, 2468.0], [82.3, 2468.0], [82.4, 2468.0], [82.5, 2468.0], [82.6, 2468.0], [82.7, 2468.0], [82.8, 2468.0], [82.9, 2468.0], [83.0, 2468.0], [83.1, 2468.0], [83.2, 2468.0], [83.3, 2468.0], [83.4, 2468.0], [83.5, 2468.0], [83.6, 2468.0], [83.7, 2468.0], [83.8, 2468.0], [83.9, 2468.0], [84.0, 2559.0], [84.1, 2559.0], [84.2, 2559.0], [84.3, 2559.0], [84.4, 2559.0], [84.5, 2559.0], [84.6, 2559.0], [84.7, 2559.0], [84.8, 2559.0], [84.9, 2559.0], [85.0, 2559.0], [85.1, 2559.0], [85.2, 2559.0], [85.3, 2559.0], [85.4, 2559.0], [85.5, 2559.0], [85.6, 2559.0], [85.7, 2559.0], [85.8, 2559.0], [85.9, 2559.0], [86.0, 2690.0], [86.1, 2690.0], [86.2, 2690.0], [86.3, 2690.0], [86.4, 2690.0], [86.5, 2690.0], [86.6, 2690.0], [86.7, 2690.0], [86.8, 2690.0], [86.9, 2690.0], [87.0, 2690.0], [87.1, 2690.0], [87.2, 2690.0], [87.3, 2690.0], [87.4, 2690.0], [87.5, 2690.0], [87.6, 2690.0], [87.7, 2690.0], [87.8, 2690.0], [87.9, 2690.0], [88.0, 3069.0], [88.1, 3069.0], [88.2, 3069.0], [88.3, 3069.0], [88.4, 3069.0], [88.5, 3069.0], [88.6, 3069.0], [88.7, 3069.0], [88.8, 3069.0], [88.9, 3069.0], [89.0, 3069.0], [89.1, 3069.0], [89.2, 3069.0], [89.3, 3069.0], [89.4, 3069.0], [89.5, 3069.0], [89.6, 3069.0], [89.7, 3069.0], [89.8, 3069.0], [89.9, 3069.0], [90.0, 3760.0], [90.1, 3760.0], [90.2, 3760.0], [90.3, 3760.0], [90.4, 3760.0], [90.5, 3760.0], [90.6, 3760.0], [90.7, 3760.0], [90.8, 3760.0], [90.9, 3760.0], [91.0, 3760.0], [91.1, 3760.0], [91.2, 3760.0], [91.3, 3760.0], [91.4, 3760.0], [91.5, 3760.0], [91.6, 3760.0], [91.7, 3760.0], [91.8, 3760.0], [91.9, 3760.0], [92.0, 3834.0], [92.1, 3834.0], [92.2, 3834.0], [92.3, 3834.0], [92.4, 3834.0], [92.5, 3834.0], [92.6, 3834.0], [92.7, 3834.0], [92.8, 3834.0], [92.9, 3834.0], [93.0, 3834.0], [93.1, 3834.0], [93.2, 3834.0], [93.3, 3834.0], [93.4, 3834.0], [93.5, 3834.0], [93.6, 3834.0], [93.7, 3834.0], [93.8, 3834.0], [93.9, 3834.0], [94.0, 4436.0], [94.1, 4436.0], [94.2, 4436.0], [94.3, 4436.0], [94.4, 4436.0], [94.5, 4436.0], [94.6, 4436.0], [94.7, 4436.0], [94.8, 4436.0], [94.9, 4436.0], [95.0, 4436.0], [95.1, 4436.0], [95.2, 4436.0], [95.3, 4436.0], [95.4, 4436.0], [95.5, 4436.0], [95.6, 4436.0], [95.7, 4436.0], [95.8, 4436.0], [95.9, 4436.0], [96.0, 4560.0], [96.1, 4560.0], [96.2, 4560.0], [96.3, 4560.0], [96.4, 4560.0], [96.5, 4560.0], [96.6, 4560.0], [96.7, 4560.0], [96.8, 4560.0], [96.9, 4560.0], [97.0, 4560.0], [97.1, 4560.0], [97.2, 4560.0], [97.3, 4560.0], [97.4, 4560.0], [97.5, 4560.0], [97.6, 4560.0], [97.7, 4560.0], [97.8, 4560.0], [97.9, 4560.0], [98.0, 8782.0], [98.1, 8782.0], [98.2, 8782.0], [98.3, 8782.0], [98.4, 8782.0], [98.5, 8782.0], [98.6, 8782.0], [98.7, 8782.0], [98.8, 8782.0], [98.9, 8782.0], [99.0, 8782.0], [99.1, 8782.0], [99.2, 8782.0], [99.3, 8782.0], [99.4, 8782.0], [99.5, 8782.0], [99.6, 8782.0], [99.7, 8782.0], [99.8, 8782.0], [99.9, 8782.0]], "isOverall": false, "label": "organizationsList", "isController": false}, {"data": [[0.0, 404.0], [0.1, 404.0], [0.2, 404.0], [0.3, 404.0], [0.4, 404.0], [0.5, 404.0], [0.6, 404.0], [0.7, 404.0], [0.8, 404.0], [0.9, 404.0], [1.0, 404.0], [1.1, 404.0], [1.2, 404.0], [1.3, 404.0], [1.4, 404.0], [1.5, 404.0], [1.6, 404.0], [1.7, 404.0], [1.8, 404.0], [1.9, 404.0], [2.0, 427.0], [2.1, 427.0], [2.2, 427.0], [2.3, 427.0], [2.4, 427.0], [2.5, 427.0], [2.6, 427.0], [2.7, 427.0], [2.8, 427.0], [2.9, 427.0], [3.0, 427.0], [3.1, 427.0], [3.2, 427.0], [3.3, 427.0], [3.4, 427.0], [3.5, 427.0], [3.6, 427.0], [3.7, 427.0], [3.8, 427.0], [3.9, 427.0], [4.0, 432.0], [4.1, 432.0], [4.2, 432.0], [4.3, 432.0], [4.4, 432.0], [4.5, 432.0], [4.6, 432.0], [4.7, 432.0], [4.8, 432.0], [4.9, 432.0], [5.0, 432.0], [5.1, 432.0], [5.2, 432.0], [5.3, 432.0], [5.4, 432.0], [5.5, 432.0], [5.6, 432.0], [5.7, 432.0], [5.8, 432.0], [5.9, 432.0], [6.0, 458.0], [6.1, 458.0], [6.2, 458.0], [6.3, 458.0], [6.4, 458.0], [6.5, 458.0], [6.6, 458.0], [6.7, 458.0], [6.8, 458.0], [6.9, 458.0], [7.0, 458.0], [7.1, 458.0], [7.2, 458.0], [7.3, 458.0], [7.4, 458.0], [7.5, 458.0], [7.6, 458.0], [7.7, 458.0], [7.8, 458.0], [7.9, 458.0], [8.0, 527.0], [8.1, 527.0], [8.2, 527.0], [8.3, 527.0], [8.4, 527.0], [8.5, 527.0], [8.6, 527.0], [8.7, 527.0], [8.8, 527.0], [8.9, 527.0], [9.0, 527.0], [9.1, 527.0], [9.2, 527.0], [9.3, 527.0], [9.4, 527.0], [9.5, 527.0], [9.6, 527.0], [9.7, 527.0], [9.8, 527.0], [9.9, 527.0], [10.0, 554.0], [10.1, 554.0], [10.2, 554.0], [10.3, 554.0], [10.4, 554.0], [10.5, 554.0], [10.6, 554.0], [10.7, 554.0], [10.8, 554.0], [10.9, 554.0], [11.0, 554.0], [11.1, 554.0], [11.2, 554.0], [11.3, 554.0], [11.4, 554.0], [11.5, 554.0], [11.6, 554.0], [11.7, 554.0], [11.8, 554.0], [11.9, 554.0], [12.0, 561.0], [12.1, 561.0], [12.2, 561.0], [12.3, 561.0], [12.4, 561.0], [12.5, 561.0], [12.6, 561.0], [12.7, 561.0], [12.8, 561.0], [12.9, 561.0], [13.0, 561.0], [13.1, 561.0], [13.2, 561.0], [13.3, 561.0], [13.4, 561.0], [13.5, 561.0], [13.6, 561.0], [13.7, 561.0], [13.8, 561.0], [13.9, 561.0], [14.0, 820.0], [14.1, 820.0], [14.2, 820.0], [14.3, 820.0], [14.4, 820.0], [14.5, 820.0], [14.6, 820.0], [14.7, 820.0], [14.8, 820.0], [14.9, 820.0], [15.0, 820.0], [15.1, 820.0], [15.2, 820.0], [15.3, 820.0], [15.4, 820.0], [15.5, 820.0], [15.6, 820.0], [15.7, 820.0], [15.8, 820.0], [15.9, 820.0], [16.0, 827.0], [16.1, 827.0], [16.2, 827.0], [16.3, 827.0], [16.4, 827.0], [16.5, 827.0], [16.6, 827.0], [16.7, 827.0], [16.8, 827.0], [16.9, 827.0], [17.0, 827.0], [17.1, 827.0], [17.2, 827.0], [17.3, 827.0], [17.4, 827.0], [17.5, 827.0], [17.6, 827.0], [17.7, 827.0], [17.8, 827.0], [17.9, 827.0], [18.0, 956.0], [18.1, 956.0], [18.2, 956.0], [18.3, 956.0], [18.4, 956.0], [18.5, 956.0], [18.6, 956.0], [18.7, 956.0], [18.8, 956.0], [18.9, 956.0], [19.0, 956.0], [19.1, 956.0], [19.2, 956.0], [19.3, 956.0], [19.4, 956.0], [19.5, 956.0], [19.6, 956.0], [19.7, 956.0], [19.8, 956.0], [19.9, 956.0], [20.0, 990.0], [20.1, 990.0], [20.2, 990.0], [20.3, 990.0], [20.4, 990.0], [20.5, 990.0], [20.6, 990.0], [20.7, 990.0], [20.8, 990.0], [20.9, 990.0], [21.0, 990.0], [21.1, 990.0], [21.2, 990.0], [21.3, 990.0], [21.4, 990.0], [21.5, 990.0], [21.6, 990.0], [21.7, 990.0], [21.8, 990.0], [21.9, 990.0], [22.0, 1051.0], [22.1, 1051.0], [22.2, 1051.0], [22.3, 1051.0], [22.4, 1051.0], [22.5, 1051.0], [22.6, 1051.0], [22.7, 1051.0], [22.8, 1051.0], [22.9, 1051.0], [23.0, 1051.0], [23.1, 1051.0], [23.2, 1051.0], [23.3, 1051.0], [23.4, 1051.0], [23.5, 1051.0], [23.6, 1051.0], [23.7, 1051.0], [23.8, 1051.0], [23.9, 1051.0], [24.0, 1100.0], [24.1, 1100.0], [24.2, 1100.0], [24.3, 1100.0], [24.4, 1100.0], [24.5, 1100.0], [24.6, 1100.0], [24.7, 1100.0], [24.8, 1100.0], [24.9, 1100.0], [25.0, 1100.0], [25.1, 1100.0], [25.2, 1100.0], [25.3, 1100.0], [25.4, 1100.0], [25.5, 1100.0], [25.6, 1100.0], [25.7, 1100.0], [25.8, 1100.0], [25.9, 1100.0], [26.0, 6258.0], [26.1, 6258.0], [26.2, 6258.0], [26.3, 6258.0], [26.4, 6258.0], [26.5, 6258.0], [26.6, 6258.0], [26.7, 6258.0], [26.8, 6258.0], [26.9, 6258.0], [27.0, 6258.0], [27.1, 6258.0], [27.2, 6258.0], [27.3, 6258.0], [27.4, 6258.0], [27.5, 6258.0], [27.6, 6258.0], [27.7, 6258.0], [27.8, 6258.0], [27.9, 6258.0], [28.0, 6739.0], [28.1, 6739.0], [28.2, 6739.0], [28.3, 6739.0], [28.4, 6739.0], [28.5, 6739.0], [28.6, 6739.0], [28.7, 6739.0], [28.8, 6739.0], [28.9, 6739.0], [29.0, 6739.0], [29.1, 6739.0], [29.2, 6739.0], [29.3, 6739.0], [29.4, 6739.0], [29.5, 6739.0], [29.6, 6739.0], [29.7, 6739.0], [29.8, 6739.0], [29.9, 6739.0], [30.0, 6844.0], [30.1, 6844.0], [30.2, 6844.0], [30.3, 6844.0], [30.4, 6844.0], [30.5, 6844.0], [30.6, 6844.0], [30.7, 6844.0], [30.8, 6844.0], [30.9, 6844.0], [31.0, 6844.0], [31.1, 6844.0], [31.2, 6844.0], [31.3, 6844.0], [31.4, 6844.0], [31.5, 6844.0], [31.6, 6844.0], [31.7, 6844.0], [31.8, 6844.0], [31.9, 6844.0], [32.0, 6930.0], [32.1, 6930.0], [32.2, 6930.0], [32.3, 6930.0], [32.4, 6930.0], [32.5, 6930.0], [32.6, 6930.0], [32.7, 6930.0], [32.8, 6930.0], [32.9, 6930.0], [33.0, 6930.0], [33.1, 6930.0], [33.2, 6930.0], [33.3, 6930.0], [33.4, 6930.0], [33.5, 6930.0], [33.6, 6930.0], [33.7, 6930.0], [33.8, 6930.0], [33.9, 6930.0], [34.0, 7400.0], [34.1, 7400.0], [34.2, 7400.0], [34.3, 7400.0], [34.4, 7400.0], [34.5, 7400.0], [34.6, 7400.0], [34.7, 7400.0], [34.8, 7400.0], [34.9, 7400.0], [35.0, 7400.0], [35.1, 7400.0], [35.2, 7400.0], [35.3, 7400.0], [35.4, 7400.0], [35.5, 7400.0], [35.6, 7400.0], [35.7, 7400.0], [35.8, 7400.0], [35.9, 7400.0], [36.0, 7993.0], [36.1, 7993.0], [36.2, 7993.0], [36.3, 7993.0], [36.4, 7993.0], [36.5, 7993.0], [36.6, 7993.0], [36.7, 7993.0], [36.8, 7993.0], [36.9, 7993.0], [37.0, 7993.0], [37.1, 7993.0], [37.2, 7993.0], [37.3, 7993.0], [37.4, 7993.0], [37.5, 7993.0], [37.6, 7993.0], [37.7, 7993.0], [37.8, 7993.0], [37.9, 7993.0], [38.0, 8064.0], [38.1, 8064.0], [38.2, 8064.0], [38.3, 8064.0], [38.4, 8064.0], [38.5, 8064.0], [38.6, 8064.0], [38.7, 8064.0], [38.8, 8064.0], [38.9, 8064.0], [39.0, 8064.0], [39.1, 8064.0], [39.2, 8064.0], [39.3, 8064.0], [39.4, 8064.0], [39.5, 8064.0], [39.6, 8064.0], [39.7, 8064.0], [39.8, 8064.0], [39.9, 8064.0], [40.0, 8084.0], [40.1, 8084.0], [40.2, 8084.0], [40.3, 8084.0], [40.4, 8084.0], [40.5, 8084.0], [40.6, 8084.0], [40.7, 8084.0], [40.8, 8084.0], [40.9, 8084.0], [41.0, 8084.0], [41.1, 8084.0], [41.2, 8084.0], [41.3, 8084.0], [41.4, 8084.0], [41.5, 8084.0], [41.6, 8084.0], [41.7, 8084.0], [41.8, 8084.0], [41.9, 8084.0], [42.0, 8116.0], [42.1, 8116.0], [42.2, 8116.0], [42.3, 8116.0], [42.4, 8116.0], [42.5, 8116.0], [42.6, 8116.0], [42.7, 8116.0], [42.8, 8116.0], [42.9, 8116.0], [43.0, 8116.0], [43.1, 8116.0], [43.2, 8116.0], [43.3, 8116.0], [43.4, 8116.0], [43.5, 8116.0], [43.6, 8116.0], [43.7, 8116.0], [43.8, 8116.0], [43.9, 8116.0], [44.0, 8208.0], [44.1, 8208.0], [44.2, 8208.0], [44.3, 8208.0], [44.4, 8208.0], [44.5, 8208.0], [44.6, 8208.0], [44.7, 8208.0], [44.8, 8208.0], [44.9, 8208.0], [45.0, 8208.0], [45.1, 8208.0], [45.2, 8208.0], [45.3, 8208.0], [45.4, 8208.0], [45.5, 8208.0], [45.6, 8208.0], [45.7, 8208.0], [45.8, 8208.0], [45.9, 8208.0], [46.0, 8289.0], [46.1, 8289.0], [46.2, 8289.0], [46.3, 8289.0], [46.4, 8289.0], [46.5, 8289.0], [46.6, 8289.0], [46.7, 8289.0], [46.8, 8289.0], [46.9, 8289.0], [47.0, 8289.0], [47.1, 8289.0], [47.2, 8289.0], [47.3, 8289.0], [47.4, 8289.0], [47.5, 8289.0], [47.6, 8289.0], [47.7, 8289.0], [47.8, 8289.0], [47.9, 8289.0], [48.0, 8350.0], [48.1, 8350.0], [48.2, 8350.0], [48.3, 8350.0], [48.4, 8350.0], [48.5, 8350.0], [48.6, 8350.0], [48.7, 8350.0], [48.8, 8350.0], [48.9, 8350.0], [49.0, 8350.0], [49.1, 8350.0], [49.2, 8350.0], [49.3, 8350.0], [49.4, 8350.0], [49.5, 8350.0], [49.6, 8350.0], [49.7, 8350.0], [49.8, 8350.0], [49.9, 8350.0], [50.0, 8461.0], [50.1, 8461.0], [50.2, 8461.0], [50.3, 8461.0], [50.4, 8461.0], [50.5, 8461.0], [50.6, 8461.0], [50.7, 8461.0], [50.8, 8461.0], [50.9, 8461.0], [51.0, 8461.0], [51.1, 8461.0], [51.2, 8461.0], [51.3, 8461.0], [51.4, 8461.0], [51.5, 8461.0], [51.6, 8461.0], [51.7, 8461.0], [51.8, 8461.0], [51.9, 8461.0], [52.0, 8481.0], [52.1, 8481.0], [52.2, 8481.0], [52.3, 8481.0], [52.4, 8481.0], [52.5, 8481.0], [52.6, 8481.0], [52.7, 8481.0], [52.8, 8481.0], [52.9, 8481.0], [53.0, 8481.0], [53.1, 8481.0], [53.2, 8481.0], [53.3, 8481.0], [53.4, 8481.0], [53.5, 8481.0], [53.6, 8481.0], [53.7, 8481.0], [53.8, 8481.0], [53.9, 8481.0], [54.0, 8507.0], [54.1, 8507.0], [54.2, 8507.0], [54.3, 8507.0], [54.4, 8507.0], [54.5, 8507.0], [54.6, 8507.0], [54.7, 8507.0], [54.8, 8507.0], [54.9, 8507.0], [55.0, 8507.0], [55.1, 8507.0], [55.2, 8507.0], [55.3, 8507.0], [55.4, 8507.0], [55.5, 8507.0], [55.6, 8507.0], [55.7, 8507.0], [55.8, 8507.0], [55.9, 8507.0], [56.0, 8734.0], [56.1, 8734.0], [56.2, 8734.0], [56.3, 8734.0], [56.4, 8734.0], [56.5, 8734.0], [56.6, 8734.0], [56.7, 8734.0], [56.8, 8734.0], [56.9, 8734.0], [57.0, 8734.0], [57.1, 8734.0], [57.2, 8734.0], [57.3, 8734.0], [57.4, 8734.0], [57.5, 8734.0], [57.6, 8734.0], [57.7, 8734.0], [57.8, 8734.0], [57.9, 8734.0], [58.0, 8786.0], [58.1, 8786.0], [58.2, 8786.0], [58.3, 8786.0], [58.4, 8786.0], [58.5, 8786.0], [58.6, 8786.0], [58.7, 8786.0], [58.8, 8786.0], [58.9, 8786.0], [59.0, 8786.0], [59.1, 8786.0], [59.2, 8786.0], [59.3, 8786.0], [59.4, 8786.0], [59.5, 8786.0], [59.6, 8786.0], [59.7, 8786.0], [59.8, 8786.0], [59.9, 8786.0], [60.0, 8812.0], [60.1, 8812.0], [60.2, 8812.0], [60.3, 8812.0], [60.4, 8812.0], [60.5, 8812.0], [60.6, 8812.0], [60.7, 8812.0], [60.8, 8812.0], [60.9, 8812.0], [61.0, 8812.0], [61.1, 8812.0], [61.2, 8812.0], [61.3, 8812.0], [61.4, 8812.0], [61.5, 8812.0], [61.6, 8812.0], [61.7, 8812.0], [61.8, 8812.0], [61.9, 8812.0], [62.0, 8831.0], [62.1, 8831.0], [62.2, 8831.0], [62.3, 8831.0], [62.4, 8831.0], [62.5, 8831.0], [62.6, 8831.0], [62.7, 8831.0], [62.8, 8831.0], [62.9, 8831.0], [63.0, 8831.0], [63.1, 8831.0], [63.2, 8831.0], [63.3, 8831.0], [63.4, 8831.0], [63.5, 8831.0], [63.6, 8831.0], [63.7, 8831.0], [63.8, 8831.0], [63.9, 8831.0], [64.0, 9020.0], [64.1, 9020.0], [64.2, 9020.0], [64.3, 9020.0], [64.4, 9020.0], [64.5, 9020.0], [64.6, 9020.0], [64.7, 9020.0], [64.8, 9020.0], [64.9, 9020.0], [65.0, 9020.0], [65.1, 9020.0], [65.2, 9020.0], [65.3, 9020.0], [65.4, 9020.0], [65.5, 9020.0], [65.6, 9020.0], [65.7, 9020.0], [65.8, 9020.0], [65.9, 9020.0], [66.0, 9038.0], [66.1, 9038.0], [66.2, 9038.0], [66.3, 9038.0], [66.4, 9038.0], [66.5, 9038.0], [66.6, 9038.0], [66.7, 9038.0], [66.8, 9038.0], [66.9, 9038.0], [67.0, 9038.0], [67.1, 9038.0], [67.2, 9038.0], [67.3, 9038.0], [67.4, 9038.0], [67.5, 9038.0], [67.6, 9038.0], [67.7, 9038.0], [67.8, 9038.0], [67.9, 9038.0], [68.0, 9044.0], [68.1, 9044.0], [68.2, 9044.0], [68.3, 9044.0], [68.4, 9044.0], [68.5, 9044.0], [68.6, 9044.0], [68.7, 9044.0], [68.8, 9044.0], [68.9, 9044.0], [69.0, 9044.0], [69.1, 9044.0], [69.2, 9044.0], [69.3, 9044.0], [69.4, 9044.0], [69.5, 9044.0], [69.6, 9044.0], [69.7, 9044.0], [69.8, 9044.0], [69.9, 9044.0], [70.0, 9286.0], [70.1, 9286.0], [70.2, 9286.0], [70.3, 9286.0], [70.4, 9286.0], [70.5, 9286.0], [70.6, 9286.0], [70.7, 9286.0], [70.8, 9286.0], [70.9, 9286.0], [71.0, 9286.0], [71.1, 9286.0], [71.2, 9286.0], [71.3, 9286.0], [71.4, 9286.0], [71.5, 9286.0], [71.6, 9286.0], [71.7, 9286.0], [71.8, 9286.0], [71.9, 9286.0], [72.0, 9362.0], [72.1, 9362.0], [72.2, 9362.0], [72.3, 9362.0], [72.4, 9362.0], [72.5, 9362.0], [72.6, 9362.0], [72.7, 9362.0], [72.8, 9362.0], [72.9, 9362.0], [73.0, 9362.0], [73.1, 9362.0], [73.2, 9362.0], [73.3, 9362.0], [73.4, 9362.0], [73.5, 9362.0], [73.6, 9362.0], [73.7, 9362.0], [73.8, 9362.0], [73.9, 9362.0], [74.0, 9428.0], [74.1, 9428.0], [74.2, 9428.0], [74.3, 9428.0], [74.4, 9428.0], [74.5, 9428.0], [74.6, 9428.0], [74.7, 9428.0], [74.8, 9428.0], [74.9, 9428.0], [75.0, 9428.0], [75.1, 9428.0], [75.2, 9428.0], [75.3, 9428.0], [75.4, 9428.0], [75.5, 9428.0], [75.6, 9428.0], [75.7, 9428.0], [75.8, 9428.0], [75.9, 9428.0], [76.0, 9525.0], [76.1, 9525.0], [76.2, 9525.0], [76.3, 9525.0], [76.4, 9525.0], [76.5, 9525.0], [76.6, 9525.0], [76.7, 9525.0], [76.8, 9525.0], [76.9, 9525.0], [77.0, 9525.0], [77.1, 9525.0], [77.2, 9525.0], [77.3, 9525.0], [77.4, 9525.0], [77.5, 9525.0], [77.6, 9525.0], [77.7, 9525.0], [77.8, 9525.0], [77.9, 9525.0], [78.0, 9600.0], [78.1, 9600.0], [78.2, 9600.0], [78.3, 9600.0], [78.4, 9600.0], [78.5, 9600.0], [78.6, 9600.0], [78.7, 9600.0], [78.8, 9600.0], [78.9, 9600.0], [79.0, 9600.0], [79.1, 9600.0], [79.2, 9600.0], [79.3, 9600.0], [79.4, 9600.0], [79.5, 9600.0], [79.6, 9600.0], [79.7, 9600.0], [79.8, 9600.0], [79.9, 9600.0], [80.0, 9699.0], [80.1, 9699.0], [80.2, 9699.0], [80.3, 9699.0], [80.4, 9699.0], [80.5, 9699.0], [80.6, 9699.0], [80.7, 9699.0], [80.8, 9699.0], [80.9, 9699.0], [81.0, 9699.0], [81.1, 9699.0], [81.2, 9699.0], [81.3, 9699.0], [81.4, 9699.0], [81.5, 9699.0], [81.6, 9699.0], [81.7, 9699.0], [81.8, 9699.0], [81.9, 9699.0], [82.0, 9982.0], [82.1, 9982.0], [82.2, 9982.0], [82.3, 9982.0], [82.4, 9982.0], [82.5, 9982.0], [82.6, 9982.0], [82.7, 9982.0], [82.8, 9982.0], [82.9, 9982.0], [83.0, 9982.0], [83.1, 9982.0], [83.2, 9982.0], [83.3, 9982.0], [83.4, 9982.0], [83.5, 9982.0], [83.6, 9982.0], [83.7, 9982.0], [83.8, 9982.0], [83.9, 9982.0], [84.0, 10005.0], [84.1, 10005.0], [84.2, 10005.0], [84.3, 10005.0], [84.4, 10005.0], [84.5, 10005.0], [84.6, 10005.0], [84.7, 10005.0], [84.8, 10005.0], [84.9, 10005.0], [85.0, 10005.0], [85.1, 10005.0], [85.2, 10005.0], [85.3, 10005.0], [85.4, 10005.0], [85.5, 10005.0], [85.6, 10005.0], [85.7, 10005.0], [85.8, 10005.0], [85.9, 10005.0], [86.0, 10063.0], [86.1, 10063.0], [86.2, 10063.0], [86.3, 10063.0], [86.4, 10063.0], [86.5, 10063.0], [86.6, 10063.0], [86.7, 10063.0], [86.8, 10063.0], [86.9, 10063.0], [87.0, 10063.0], [87.1, 10063.0], [87.2, 10063.0], [87.3, 10063.0], [87.4, 10063.0], [87.5, 10063.0], [87.6, 10063.0], [87.7, 10063.0], [87.8, 10063.0], [87.9, 10063.0], [88.0, 10281.0], [88.1, 10281.0], [88.2, 10281.0], [88.3, 10281.0], [88.4, 10281.0], [88.5, 10281.0], [88.6, 10281.0], [88.7, 10281.0], [88.8, 10281.0], [88.9, 10281.0], [89.0, 10281.0], [89.1, 10281.0], [89.2, 10281.0], [89.3, 10281.0], [89.4, 10281.0], [89.5, 10281.0], [89.6, 10281.0], [89.7, 10281.0], [89.8, 10281.0], [89.9, 10281.0], [90.0, 10549.0], [90.1, 10549.0], [90.2, 10549.0], [90.3, 10549.0], [90.4, 10549.0], [90.5, 10549.0], [90.6, 10549.0], [90.7, 10549.0], [90.8, 10549.0], [90.9, 10549.0], [91.0, 10549.0], [91.1, 10549.0], [91.2, 10549.0], [91.3, 10549.0], [91.4, 10549.0], [91.5, 10549.0], [91.6, 10549.0], [91.7, 10549.0], [91.8, 10549.0], [91.9, 10549.0], [92.0, 10568.0], [92.1, 10568.0], [92.2, 10568.0], [92.3, 10568.0], [92.4, 10568.0], [92.5, 10568.0], [92.6, 10568.0], [92.7, 10568.0], [92.8, 10568.0], [92.9, 10568.0], [93.0, 10568.0], [93.1, 10568.0], [93.2, 10568.0], [93.3, 10568.0], [93.4, 10568.0], [93.5, 10568.0], [93.6, 10568.0], [93.7, 10568.0], [93.8, 10568.0], [93.9, 10568.0], [94.0, 10571.0], [94.1, 10571.0], [94.2, 10571.0], [94.3, 10571.0], [94.4, 10571.0], [94.5, 10571.0], [94.6, 10571.0], [94.7, 10571.0], [94.8, 10571.0], [94.9, 10571.0], [95.0, 10571.0], [95.1, 10571.0], [95.2, 10571.0], [95.3, 10571.0], [95.4, 10571.0], [95.5, 10571.0], [95.6, 10571.0], [95.7, 10571.0], [95.8, 10571.0], [95.9, 10571.0], [96.0, 11019.0], [96.1, 11019.0], [96.2, 11019.0], [96.3, 11019.0], [96.4, 11019.0], [96.5, 11019.0], [96.6, 11019.0], [96.7, 11019.0], [96.8, 11019.0], [96.9, 11019.0], [97.0, 11019.0], [97.1, 11019.0], [97.2, 11019.0], [97.3, 11019.0], [97.4, 11019.0], [97.5, 11019.0], [97.6, 11019.0], [97.7, 11019.0], [97.8, 11019.0], [97.9, 11019.0], [98.0, 16077.0], [98.1, 16077.0], [98.2, 16077.0], [98.3, 16077.0], [98.4, 16077.0], [98.5, 16077.0], [98.6, 16077.0], [98.7, 16077.0], [98.8, 16077.0], [98.9, 16077.0], [99.0, 16077.0], [99.1, 16077.0], [99.2, 16077.0], [99.3, 16077.0], [99.4, 16077.0], [99.5, 16077.0], [99.6, 16077.0], [99.7, 16077.0], [99.8, 16077.0], [99.9, 16077.0]], "isOverall": false, "label": "challengesWithCommunity", "isController": false}, {"data": [[0.0, 231.0], [0.1, 231.0], [0.2, 231.0], [0.3, 231.0], [0.4, 231.0], [0.5, 231.0], [0.6, 231.0], [0.7, 231.0], [0.8, 231.0], [0.9, 231.0], [1.0, 231.0], [1.1, 231.0], [1.2, 231.0], [1.3, 231.0], [1.4, 231.0], [1.5, 231.0], [1.6, 231.0], [1.7, 231.0], [1.8, 231.0], [1.9, 231.0], [2.0, 233.0], [2.1, 233.0], [2.2, 233.0], [2.3, 233.0], [2.4, 233.0], [2.5, 233.0], [2.6, 233.0], [2.7, 233.0], [2.8, 233.0], [2.9, 233.0], [3.0, 233.0], [3.1, 233.0], [3.2, 233.0], [3.3, 233.0], [3.4, 233.0], [3.5, 233.0], [3.6, 233.0], [3.7, 233.0], [3.8, 233.0], [3.9, 233.0], [4.0, 233.0], [4.1, 233.0], [4.2, 233.0], [4.3, 233.0], [4.4, 233.0], [4.5, 233.0], [4.6, 233.0], [4.7, 233.0], [4.8, 233.0], [4.9, 233.0], [5.0, 233.0], [5.1, 233.0], [5.2, 233.0], [5.3, 233.0], [5.4, 233.0], [5.5, 233.0], [5.6, 233.0], [5.7, 233.0], [5.8, 233.0], [5.9, 233.0], [6.0, 249.0], [6.1, 249.0], [6.2, 249.0], [6.3, 249.0], [6.4, 249.0], [6.5, 249.0], [6.6, 249.0], [6.7, 249.0], [6.8, 249.0], [6.9, 249.0], [7.0, 249.0], [7.1, 249.0], [7.2, 249.0], [7.3, 249.0], [7.4, 249.0], [7.5, 249.0], [7.6, 249.0], [7.7, 249.0], [7.8, 249.0], [7.9, 249.0], [8.0, 251.0], [8.1, 251.0], [8.2, 251.0], [8.3, 251.0], [8.4, 251.0], [8.5, 251.0], [8.6, 251.0], [8.7, 251.0], [8.8, 251.0], [8.9, 251.0], [9.0, 251.0], [9.1, 251.0], [9.2, 251.0], [9.3, 251.0], [9.4, 251.0], [9.5, 251.0], [9.6, 251.0], [9.7, 251.0], [9.8, 251.0], [9.9, 251.0], [10.0, 256.0], [10.1, 256.0], [10.2, 256.0], [10.3, 256.0], [10.4, 256.0], [10.5, 256.0], [10.6, 256.0], [10.7, 256.0], [10.8, 256.0], [10.9, 256.0], [11.0, 256.0], [11.1, 256.0], [11.2, 256.0], [11.3, 256.0], [11.4, 256.0], [11.5, 256.0], [11.6, 256.0], [11.7, 256.0], [11.8, 256.0], [11.9, 256.0], [12.0, 263.0], [12.1, 263.0], [12.2, 263.0], [12.3, 263.0], [12.4, 263.0], [12.5, 263.0], [12.6, 263.0], [12.7, 263.0], [12.8, 263.0], [12.9, 263.0], [13.0, 263.0], [13.1, 263.0], [13.2, 263.0], [13.3, 263.0], [13.4, 263.0], [13.5, 263.0], [13.6, 263.0], [13.7, 263.0], [13.8, 263.0], [13.9, 263.0], [14.0, 268.0], [14.1, 268.0], [14.2, 268.0], [14.3, 268.0], [14.4, 268.0], [14.5, 268.0], [14.6, 268.0], [14.7, 268.0], [14.8, 268.0], [14.9, 268.0], [15.0, 268.0], [15.1, 268.0], [15.2, 268.0], [15.3, 268.0], [15.4, 268.0], [15.5, 268.0], [15.6, 268.0], [15.7, 268.0], [15.8, 268.0], [15.9, 268.0], [16.0, 276.0], [16.1, 276.0], [16.2, 276.0], [16.3, 276.0], [16.4, 276.0], [16.5, 276.0], [16.6, 276.0], [16.7, 276.0], [16.8, 276.0], [16.9, 276.0], [17.0, 276.0], [17.1, 276.0], [17.2, 276.0], [17.3, 276.0], [17.4, 276.0], [17.5, 276.0], [17.6, 276.0], [17.7, 276.0], [17.8, 276.0], [17.9, 276.0], [18.0, 288.0], [18.1, 288.0], [18.2, 288.0], [18.3, 288.0], [18.4, 288.0], [18.5, 288.0], [18.6, 288.0], [18.7, 288.0], [18.8, 288.0], [18.9, 288.0], [19.0, 288.0], [19.1, 288.0], [19.2, 288.0], [19.3, 288.0], [19.4, 288.0], [19.5, 288.0], [19.6, 288.0], [19.7, 288.0], [19.8, 288.0], [19.9, 288.0], [20.0, 289.0], [20.1, 289.0], [20.2, 289.0], [20.3, 289.0], [20.4, 289.0], [20.5, 289.0], [20.6, 289.0], [20.7, 289.0], [20.8, 289.0], [20.9, 289.0], [21.0, 289.0], [21.1, 289.0], [21.2, 289.0], [21.3, 289.0], [21.4, 289.0], [21.5, 289.0], [21.6, 289.0], [21.7, 289.0], [21.8, 289.0], [21.9, 289.0], [22.0, 293.0], [22.1, 293.0], [22.2, 293.0], [22.3, 293.0], [22.4, 293.0], [22.5, 293.0], [22.6, 293.0], [22.7, 293.0], [22.8, 293.0], [22.9, 293.0], [23.0, 293.0], [23.1, 293.0], [23.2, 293.0], [23.3, 293.0], [23.4, 293.0], [23.5, 293.0], [23.6, 293.0], [23.7, 293.0], [23.8, 293.0], [23.9, 293.0], [24.0, 298.0], [24.1, 298.0], [24.2, 298.0], [24.3, 298.0], [24.4, 298.0], [24.5, 298.0], [24.6, 298.0], [24.7, 298.0], [24.8, 298.0], [24.9, 298.0], [25.0, 298.0], [25.1, 298.0], [25.2, 298.0], [25.3, 298.0], [25.4, 298.0], [25.5, 298.0], [25.6, 298.0], [25.7, 298.0], [25.8, 298.0], [25.9, 298.0], [26.0, 322.0], [26.1, 322.0], [26.2, 322.0], [26.3, 322.0], [26.4, 322.0], [26.5, 322.0], [26.6, 322.0], [26.7, 322.0], [26.8, 322.0], [26.9, 322.0], [27.0, 322.0], [27.1, 322.0], [27.2, 322.0], [27.3, 322.0], [27.4, 322.0], [27.5, 322.0], [27.6, 322.0], [27.7, 322.0], [27.8, 322.0], [27.9, 322.0], [28.0, 414.0], [28.1, 414.0], [28.2, 414.0], [28.3, 414.0], [28.4, 414.0], [28.5, 414.0], [28.6, 414.0], [28.7, 414.0], [28.8, 414.0], [28.9, 414.0], [29.0, 414.0], [29.1, 414.0], [29.2, 414.0], [29.3, 414.0], [29.4, 414.0], [29.5, 414.0], [29.6, 414.0], [29.7, 414.0], [29.8, 414.0], [29.9, 414.0], [30.0, 493.0], [30.1, 493.0], [30.2, 493.0], [30.3, 493.0], [30.4, 493.0], [30.5, 493.0], [30.6, 493.0], [30.7, 493.0], [30.8, 493.0], [30.9, 493.0], [31.0, 493.0], [31.1, 493.0], [31.2, 493.0], [31.3, 493.0], [31.4, 493.0], [31.5, 493.0], [31.6, 493.0], [31.7, 493.0], [31.8, 493.0], [31.9, 493.0], [32.0, 561.0], [32.1, 561.0], [32.2, 561.0], [32.3, 561.0], [32.4, 561.0], [32.5, 561.0], [32.6, 561.0], [32.7, 561.0], [32.8, 561.0], [32.9, 561.0], [33.0, 561.0], [33.1, 561.0], [33.2, 561.0], [33.3, 561.0], [33.4, 561.0], [33.5, 561.0], [33.6, 561.0], [33.7, 561.0], [33.8, 561.0], [33.9, 561.0], [34.0, 892.0], [34.1, 892.0], [34.2, 892.0], [34.3, 892.0], [34.4, 892.0], [34.5, 892.0], [34.6, 892.0], [34.7, 892.0], [34.8, 892.0], [34.9, 892.0], [35.0, 892.0], [35.1, 892.0], [35.2, 892.0], [35.3, 892.0], [35.4, 892.0], [35.5, 892.0], [35.6, 892.0], [35.7, 892.0], [35.8, 892.0], [35.9, 892.0], [36.0, 1553.0], [36.1, 1553.0], [36.2, 1553.0], [36.3, 1553.0], [36.4, 1553.0], [36.5, 1553.0], [36.6, 1553.0], [36.7, 1553.0], [36.8, 1553.0], [36.9, 1553.0], [37.0, 1553.0], [37.1, 1553.0], [37.2, 1553.0], [37.3, 1553.0], [37.4, 1553.0], [37.5, 1553.0], [37.6, 1553.0], [37.7, 1553.0], [37.8, 1553.0], [37.9, 1553.0], [38.0, 1592.0], [38.1, 1592.0], [38.2, 1592.0], [38.3, 1592.0], [38.4, 1592.0], [38.5, 1592.0], [38.6, 1592.0], [38.7, 1592.0], [38.8, 1592.0], [38.9, 1592.0], [39.0, 1592.0], [39.1, 1592.0], [39.2, 1592.0], [39.3, 1592.0], [39.4, 1592.0], [39.5, 1592.0], [39.6, 1592.0], [39.7, 1592.0], [39.8, 1592.0], [39.9, 1592.0], [40.0, 2107.0], [40.1, 2107.0], [40.2, 2107.0], [40.3, 2107.0], [40.4, 2107.0], [40.5, 2107.0], [40.6, 2107.0], [40.7, 2107.0], [40.8, 2107.0], [40.9, 2107.0], [41.0, 2107.0], [41.1, 2107.0], [41.2, 2107.0], [41.3, 2107.0], [41.4, 2107.0], [41.5, 2107.0], [41.6, 2107.0], [41.7, 2107.0], [41.8, 2107.0], [41.9, 2107.0], [42.0, 2503.0], [42.1, 2503.0], [42.2, 2503.0], [42.3, 2503.0], [42.4, 2503.0], [42.5, 2503.0], [42.6, 2503.0], [42.7, 2503.0], [42.8, 2503.0], [42.9, 2503.0], [43.0, 2503.0], [43.1, 2503.0], [43.2, 2503.0], [43.3, 2503.0], [43.4, 2503.0], [43.5, 2503.0], [43.6, 2503.0], [43.7, 2503.0], [43.8, 2503.0], [43.9, 2503.0], [44.0, 2680.0], [44.1, 2680.0], [44.2, 2680.0], [44.3, 2680.0], [44.4, 2680.0], [44.5, 2680.0], [44.6, 2680.0], [44.7, 2680.0], [44.8, 2680.0], [44.9, 2680.0], [45.0, 2680.0], [45.1, 2680.0], [45.2, 2680.0], [45.3, 2680.0], [45.4, 2680.0], [45.5, 2680.0], [45.6, 2680.0], [45.7, 2680.0], [45.8, 2680.0], [45.9, 2680.0], [46.0, 2767.0], [46.1, 2767.0], [46.2, 2767.0], [46.3, 2767.0], [46.4, 2767.0], [46.5, 2767.0], [46.6, 2767.0], [46.7, 2767.0], [46.8, 2767.0], [46.9, 2767.0], [47.0, 2767.0], [47.1, 2767.0], [47.2, 2767.0], [47.3, 2767.0], [47.4, 2767.0], [47.5, 2767.0], [47.6, 2767.0], [47.7, 2767.0], [47.8, 2767.0], [47.9, 2767.0], [48.0, 3166.0], [48.1, 3166.0], [48.2, 3166.0], [48.3, 3166.0], [48.4, 3166.0], [48.5, 3166.0], [48.6, 3166.0], [48.7, 3166.0], [48.8, 3166.0], [48.9, 3166.0], [49.0, 3166.0], [49.1, 3166.0], [49.2, 3166.0], [49.3, 3166.0], [49.4, 3166.0], [49.5, 3166.0], [49.6, 3166.0], [49.7, 3166.0], [49.8, 3166.0], [49.9, 3166.0], [50.0, 3672.0], [50.1, 3672.0], [50.2, 3672.0], [50.3, 3672.0], [50.4, 3672.0], [50.5, 3672.0], [50.6, 3672.0], [50.7, 3672.0], [50.8, 3672.0], [50.9, 3672.0], [51.0, 3672.0], [51.1, 3672.0], [51.2, 3672.0], [51.3, 3672.0], [51.4, 3672.0], [51.5, 3672.0], [51.6, 3672.0], [51.7, 3672.0], [51.8, 3672.0], [51.9, 3672.0], [52.0, 3863.0], [52.1, 3863.0], [52.2, 3863.0], [52.3, 3863.0], [52.4, 3863.0], [52.5, 3863.0], [52.6, 3863.0], [52.7, 3863.0], [52.8, 3863.0], [52.9, 3863.0], [53.0, 3863.0], [53.1, 3863.0], [53.2, 3863.0], [53.3, 3863.0], [53.4, 3863.0], [53.5, 3863.0], [53.6, 3863.0], [53.7, 3863.0], [53.8, 3863.0], [53.9, 3863.0], [54.0, 4464.0], [54.1, 4464.0], [54.2, 4464.0], [54.3, 4464.0], [54.4, 4464.0], [54.5, 4464.0], [54.6, 4464.0], [54.7, 4464.0], [54.8, 4464.0], [54.9, 4464.0], [55.0, 4464.0], [55.1, 4464.0], [55.2, 4464.0], [55.3, 4464.0], [55.4, 4464.0], [55.5, 4464.0], [55.6, 4464.0], [55.7, 4464.0], [55.8, 4464.0], [55.9, 4464.0], [56.0, 5724.0], [56.1, 5724.0], [56.2, 5724.0], [56.3, 5724.0], [56.4, 5724.0], [56.5, 5724.0], [56.6, 5724.0], [56.7, 5724.0], [56.8, 5724.0], [56.9, 5724.0], [57.0, 5724.0], [57.1, 5724.0], [57.2, 5724.0], [57.3, 5724.0], [57.4, 5724.0], [57.5, 5724.0], [57.6, 5724.0], [57.7, 5724.0], [57.8, 5724.0], [57.9, 5724.0], [58.0, 6128.0], [58.1, 6128.0], [58.2, 6128.0], [58.3, 6128.0], [58.4, 6128.0], [58.5, 6128.0], [58.6, 6128.0], [58.7, 6128.0], [58.8, 6128.0], [58.9, 6128.0], [59.0, 6128.0], [59.1, 6128.0], [59.2, 6128.0], [59.3, 6128.0], [59.4, 6128.0], [59.5, 6128.0], [59.6, 6128.0], [59.7, 6128.0], [59.8, 6128.0], [59.9, 6128.0], [60.0, 6251.0], [60.1, 6251.0], [60.2, 6251.0], [60.3, 6251.0], [60.4, 6251.0], [60.5, 6251.0], [60.6, 6251.0], [60.7, 6251.0], [60.8, 6251.0], [60.9, 6251.0], [61.0, 6251.0], [61.1, 6251.0], [61.2, 6251.0], [61.3, 6251.0], [61.4, 6251.0], [61.5, 6251.0], [61.6, 6251.0], [61.7, 6251.0], [61.8, 6251.0], [61.9, 6251.0], [62.0, 7098.0], [62.1, 7098.0], [62.2, 7098.0], [62.3, 7098.0], [62.4, 7098.0], [62.5, 7098.0], [62.6, 7098.0], [62.7, 7098.0], [62.8, 7098.0], [62.9, 7098.0], [63.0, 7098.0], [63.1, 7098.0], [63.2, 7098.0], [63.3, 7098.0], [63.4, 7098.0], [63.5, 7098.0], [63.6, 7098.0], [63.7, 7098.0], [63.8, 7098.0], [63.9, 7098.0], [64.0, 7515.0], [64.1, 7515.0], [64.2, 7515.0], [64.3, 7515.0], [64.4, 7515.0], [64.5, 7515.0], [64.6, 7515.0], [64.7, 7515.0], [64.8, 7515.0], [64.9, 7515.0], [65.0, 7515.0], [65.1, 7515.0], [65.2, 7515.0], [65.3, 7515.0], [65.4, 7515.0], [65.5, 7515.0], [65.6, 7515.0], [65.7, 7515.0], [65.8, 7515.0], [65.9, 7515.0], [66.0, 8227.0], [66.1, 8227.0], [66.2, 8227.0], [66.3, 8227.0], [66.4, 8227.0], [66.5, 8227.0], [66.6, 8227.0], [66.7, 8227.0], [66.8, 8227.0], [66.9, 8227.0], [67.0, 8227.0], [67.1, 8227.0], [67.2, 8227.0], [67.3, 8227.0], [67.4, 8227.0], [67.5, 8227.0], [67.6, 8227.0], [67.7, 8227.0], [67.8, 8227.0], [67.9, 8227.0], [68.0, 8831.0], [68.1, 8831.0], [68.2, 8831.0], [68.3, 8831.0], [68.4, 8831.0], [68.5, 8831.0], [68.6, 8831.0], [68.7, 8831.0], [68.8, 8831.0], [68.9, 8831.0], [69.0, 8831.0], [69.1, 8831.0], [69.2, 8831.0], [69.3, 8831.0], [69.4, 8831.0], [69.5, 8831.0], [69.6, 8831.0], [69.7, 8831.0], [69.8, 8831.0], [69.9, 8831.0], [70.0, 8851.0], [70.1, 8851.0], [70.2, 8851.0], [70.3, 8851.0], [70.4, 8851.0], [70.5, 8851.0], [70.6, 8851.0], [70.7, 8851.0], [70.8, 8851.0], [70.9, 8851.0], [71.0, 8851.0], [71.1, 8851.0], [71.2, 8851.0], [71.3, 8851.0], [71.4, 8851.0], [71.5, 8851.0], [71.6, 8851.0], [71.7, 8851.0], [71.8, 8851.0], [71.9, 8851.0], [72.0, 9303.0], [72.1, 9303.0], [72.2, 9303.0], [72.3, 9303.0], [72.4, 9303.0], [72.5, 9303.0], [72.6, 9303.0], [72.7, 9303.0], [72.8, 9303.0], [72.9, 9303.0], [73.0, 9303.0], [73.1, 9303.0], [73.2, 9303.0], [73.3, 9303.0], [73.4, 9303.0], [73.5, 9303.0], [73.6, 9303.0], [73.7, 9303.0], [73.8, 9303.0], [73.9, 9303.0], [74.0, 9610.0], [74.1, 9610.0], [74.2, 9610.0], [74.3, 9610.0], [74.4, 9610.0], [74.5, 9610.0], [74.6, 9610.0], [74.7, 9610.0], [74.8, 9610.0], [74.9, 9610.0], [75.0, 9610.0], [75.1, 9610.0], [75.2, 9610.0], [75.3, 9610.0], [75.4, 9610.0], [75.5, 9610.0], [75.6, 9610.0], [75.7, 9610.0], [75.8, 9610.0], [75.9, 9610.0], [76.0, 9612.0], [76.1, 9612.0], [76.2, 9612.0], [76.3, 9612.0], [76.4, 9612.0], [76.5, 9612.0], [76.6, 9612.0], [76.7, 9612.0], [76.8, 9612.0], [76.9, 9612.0], [77.0, 9612.0], [77.1, 9612.0], [77.2, 9612.0], [77.3, 9612.0], [77.4, 9612.0], [77.5, 9612.0], [77.6, 9612.0], [77.7, 9612.0], [77.8, 9612.0], [77.9, 9612.0], [78.0, 9719.0], [78.1, 9719.0], [78.2, 9719.0], [78.3, 9719.0], [78.4, 9719.0], [78.5, 9719.0], [78.6, 9719.0], [78.7, 9719.0], [78.8, 9719.0], [78.9, 9719.0], [79.0, 9719.0], [79.1, 9719.0], [79.2, 9719.0], [79.3, 9719.0], [79.4, 9719.0], [79.5, 9719.0], [79.6, 9719.0], [79.7, 9719.0], [79.8, 9719.0], [79.9, 9719.0], [80.0, 9974.0], [80.1, 9974.0], [80.2, 9974.0], [80.3, 9974.0], [80.4, 9974.0], [80.5, 9974.0], [80.6, 9974.0], [80.7, 9974.0], [80.8, 9974.0], [80.9, 9974.0], [81.0, 9974.0], [81.1, 9974.0], [81.2, 9974.0], [81.3, 9974.0], [81.4, 9974.0], [81.5, 9974.0], [81.6, 9974.0], [81.7, 9974.0], [81.8, 9974.0], [81.9, 9974.0], [82.0, 10083.0], [82.1, 10083.0], [82.2, 10083.0], [82.3, 10083.0], [82.4, 10083.0], [82.5, 10083.0], [82.6, 10083.0], [82.7, 10083.0], [82.8, 10083.0], [82.9, 10083.0], [83.0, 10083.0], [83.1, 10083.0], [83.2, 10083.0], [83.3, 10083.0], [83.4, 10083.0], [83.5, 10083.0], [83.6, 10083.0], [83.7, 10083.0], [83.8, 10083.0], [83.9, 10083.0], [84.0, 10324.0], [84.1, 10324.0], [84.2, 10324.0], [84.3, 10324.0], [84.4, 10324.0], [84.5, 10324.0], [84.6, 10324.0], [84.7, 10324.0], [84.8, 10324.0], [84.9, 10324.0], [85.0, 10324.0], [85.1, 10324.0], [85.2, 10324.0], [85.3, 10324.0], [85.4, 10324.0], [85.5, 10324.0], [85.6, 10324.0], [85.7, 10324.0], [85.8, 10324.0], [85.9, 10324.0], [86.0, 10502.0], [86.1, 10502.0], [86.2, 10502.0], [86.3, 10502.0], [86.4, 10502.0], [86.5, 10502.0], [86.6, 10502.0], [86.7, 10502.0], [86.8, 10502.0], [86.9, 10502.0], [87.0, 10502.0], [87.1, 10502.0], [87.2, 10502.0], [87.3, 10502.0], [87.4, 10502.0], [87.5, 10502.0], [87.6, 10502.0], [87.7, 10502.0], [87.8, 10502.0], [87.9, 10502.0], [88.0, 10569.0], [88.1, 10569.0], [88.2, 10569.0], [88.3, 10569.0], [88.4, 10569.0], [88.5, 10569.0], [88.6, 10569.0], [88.7, 10569.0], [88.8, 10569.0], [88.9, 10569.0], [89.0, 10569.0], [89.1, 10569.0], [89.2, 10569.0], [89.3, 10569.0], [89.4, 10569.0], [89.5, 10569.0], [89.6, 10569.0], [89.7, 10569.0], [89.8, 10569.0], [89.9, 10569.0], [90.0, 10662.0], [90.1, 10662.0], [90.2, 10662.0], [90.3, 10662.0], [90.4, 10662.0], [90.5, 10662.0], [90.6, 10662.0], [90.7, 10662.0], [90.8, 10662.0], [90.9, 10662.0], [91.0, 10662.0], [91.1, 10662.0], [91.2, 10662.0], [91.3, 10662.0], [91.4, 10662.0], [91.5, 10662.0], [91.6, 10662.0], [91.7, 10662.0], [91.8, 10662.0], [91.9, 10662.0], [92.0, 10689.0], [92.1, 10689.0], [92.2, 10689.0], [92.3, 10689.0], [92.4, 10689.0], [92.5, 10689.0], [92.6, 10689.0], [92.7, 10689.0], [92.8, 10689.0], [92.9, 10689.0], [93.0, 10689.0], [93.1, 10689.0], [93.2, 10689.0], [93.3, 10689.0], [93.4, 10689.0], [93.5, 10689.0], [93.6, 10689.0], [93.7, 10689.0], [93.8, 10689.0], [93.9, 10689.0], [94.0, 10839.0], [94.1, 10839.0], [94.2, 10839.0], [94.3, 10839.0], [94.4, 10839.0], [94.5, 10839.0], [94.6, 10839.0], [94.7, 10839.0], [94.8, 10839.0], [94.9, 10839.0], [95.0, 10839.0], [95.1, 10839.0], [95.2, 10839.0], [95.3, 10839.0], [95.4, 10839.0], [95.5, 10839.0], [95.6, 10839.0], [95.7, 10839.0], [95.8, 10839.0], [95.9, 10839.0], [96.0, 11243.0], [96.1, 11243.0], [96.2, 11243.0], [96.3, 11243.0], [96.4, 11243.0], [96.5, 11243.0], [96.6, 11243.0], [96.7, 11243.0], [96.8, 11243.0], [96.9, 11243.0], [97.0, 11243.0], [97.1, 11243.0], [97.2, 11243.0], [97.3, 11243.0], [97.4, 11243.0], [97.5, 11243.0], [97.6, 11243.0], [97.7, 11243.0], [97.8, 11243.0], [97.9, 11243.0], [98.0, 12772.0], [98.1, 12772.0], [98.2, 12772.0], [98.3, 12772.0], [98.4, 12772.0], [98.5, 12772.0], [98.6, 12772.0], [98.7, 12772.0], [98.8, 12772.0], [98.9, 12772.0], [99.0, 12772.0], [99.1, 12772.0], [99.2, 12772.0], [99.3, 12772.0], [99.4, 12772.0], [99.5, 12772.0], [99.6, 12772.0], [99.7, 12772.0], [99.8, 12772.0], [99.9, 12772.0]], "isOverall": false, "label": "users", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 14.0, "series": [{"data": [[8200.0, 1.0], [8400.0, 1.0], [8600.0, 2.0], [8800.0, 1.0], [9000.0, 1.0], [9200.0, 1.0], [9300.0, 1.0], [10400.0, 1.0], [11000.0, 1.0], [10800.0, 1.0], [11100.0, 1.0], [11500.0, 1.0], [11700.0, 1.0], [12200.0, 1.0], [12900.0, 1.0], [13000.0, 1.0], [13800.0, 1.0], [13500.0, 1.0], [14400.0, 1.0], [14800.0, 1.0], [14900.0, 2.0], [15100.0, 1.0], [15500.0, 1.0], [16500.0, 3.0], [17000.0, 1.0], [17100.0, 1.0], [18400.0, 1.0], [18600.0, 1.0], [18900.0, 1.0], [19100.0, 1.0], [19700.0, 1.0], [20100.0, 1.0], [20800.0, 1.0], [21700.0, 1.0], [5000.0, 2.0], [5200.0, 1.0], [5500.0, 1.0], [6100.0, 1.0], [6000.0, 1.0], [5900.0, 1.0], [6800.0, 1.0], [7000.0, 1.0], [7300.0, 1.0], [7500.0, 1.0], [7900.0, 1.0]], "isOverall": false, "label": "ecoverseCommunity", "isController": false}, {"data": [[8700.0, 1.0], [8500.0, 1.0], [8600.0, 2.0], [8400.0, 1.0], [8900.0, 1.0], [8800.0, 1.0], [9000.0, 1.0], [9400.0, 1.0], [9500.0, 1.0], [10200.0, 1.0], [700.0, 1.0], [11000.0, 1.0], [11600.0, 1.0], [12200.0, 1.0], [12700.0, 2.0], [13300.0, 1.0], [12800.0, 1.0], [14000.0, 1.0], [15100.0, 1.0], [15400.0, 1.0], [15900.0, 1.0], [16900.0, 1.0], [16500.0, 1.0], [100.0, 14.0], [3200.0, 1.0], [300.0, 1.0], [5700.0, 1.0], [6600.0, 1.0], [6900.0, 1.0], [7200.0, 3.0], [7600.0, 1.0], [7700.0, 1.0], [8100.0, 1.0]], "isOverall": false, "label": "groupMembers", "isController": false}, {"data": [[8700.0, 1.0], [0.0, 13.0], [700.0, 2.0], [900.0, 2.0], [1200.0, 2.0], [1300.0, 2.0], [1400.0, 1.0], [1500.0, 2.0], [100.0, 1.0], [1700.0, 1.0], [1900.0, 1.0], [2000.0, 1.0], [2100.0, 2.0], [2200.0, 2.0], [2300.0, 2.0], [2400.0, 1.0], [2500.0, 1.0], [2600.0, 1.0], [3000.0, 1.0], [200.0, 1.0], [3700.0, 1.0], [3800.0, 1.0], [4400.0, 1.0], [4500.0, 1.0], [300.0, 3.0], [400.0, 2.0], [500.0, 1.0]], "isOverall": false, "label": "organizationsList", "isController": false}, {"data": [[8300.0, 1.0], [8700.0, 2.0], [8500.0, 1.0], [8400.0, 2.0], [8200.0, 2.0], [9000.0, 3.0], [8800.0, 2.0], [9200.0, 1.0], [9300.0, 1.0], [9400.0, 1.0], [9500.0, 1.0], [9600.0, 2.0], [10000.0, 2.0], [9900.0, 1.0], [10200.0, 1.0], [10500.0, 3.0], [11000.0, 1.0], [800.0, 2.0], [900.0, 2.0], [16000.0, 1.0], [1000.0, 1.0], [1100.0, 1.0], [6200.0, 1.0], [400.0, 4.0], [6700.0, 1.0], [6800.0, 1.0], [6900.0, 1.0], [7400.0, 1.0], [7900.0, 1.0], [500.0, 3.0], [8100.0, 1.0], [8000.0, 2.0]], "isOverall": false, "label": "challengesWithCommunity", "isController": false}, {"data": [[8200.0, 1.0], [8800.0, 2.0], [9600.0, 2.0], [9700.0, 1.0], [9300.0, 1.0], [10000.0, 1.0], [9900.0, 1.0], [10300.0, 1.0], [10500.0, 2.0], [10600.0, 2.0], [11200.0, 1.0], [10800.0, 1.0], [12700.0, 1.0], [800.0, 1.0], [1500.0, 2.0], [2100.0, 1.0], [2500.0, 1.0], [2600.0, 1.0], [2700.0, 1.0], [3100.0, 1.0], [200.0, 13.0], [3600.0, 1.0], [3800.0, 1.0], [4400.0, 1.0], [300.0, 1.0], [5700.0, 1.0], [6100.0, 1.0], [6200.0, 1.0], [400.0, 2.0], [7000.0, 1.0], [7500.0, 1.0], [500.0, 1.0]], "isOverall": false, "label": "users", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 21700.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 23.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 172.0, "series": [{"data": [[0.0, 55.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 23.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 172.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 40.21999999999998, "minX": 1.61959728E12, "maxY": 40.21999999999998, "series": [{"data": [[1.61959728E12, 40.21999999999998]], "isOverall": false, "label": "CT Benchmark:  Queries - Admin page", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61959728E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 59.0, "minX": 1.0, "maxY": 19910.857142857145, "series": [{"data": [[49.0, 19910.857142857145], [50.0, 10948.860465116282]], "isOverall": false, "label": "ecoverseCommunity", "isController": false}, {"data": [[49.86, 12203.540000000003]], "isOverall": false, "label": "ecoverseCommunity-Aggregated", "isController": false}, {"data": [[32.0, 7231.0], [36.0, 6977.5], [45.0, 8549.333333333334], [44.0, 7820.8], [47.0, 11765.692307692309], [49.0, 415.81818181818187], [48.0, 13841.5], [50.0, 281.3333333333333], [27.0, 9088.0], [30.0, 7688.0], [31.0, 5783.0]], "isOverall": false, "label": "groupMembers", "isController": false}, {"data": [[45.69999999999999, 7015.240000000001]], "isOverall": false, "label": "groupMembers-Aggregated", "isController": false}, {"data": [[33.0, 942.0], [32.0, 72.0], [2.0, 423.0], [35.0, 383.0], [34.0, 338.0], [37.0, 2232.0], [36.0, 1294.0], [39.0, 1370.0], [38.0, 1500.0], [41.0, 2142.0], [40.0, 1907.0], [43.0, 201.0], [42.0, 2468.0], [45.0, 2264.0], [44.0, 310.0], [47.0, 119.5], [49.0, 1359.0], [48.0, 68.0], [3.0, 71.0], [50.0, 8782.0], [4.0, 477.0], [6.0, 1158.0], [7.0, 2014.0], [8.0, 2379.0], [9.0, 62.0], [10.0, 522.0], [11.0, 2690.0], [12.0, 3069.0], [13.0, 3760.0], [14.0, 790.0], [16.0, 1619.0], [1.0, 64.0], [17.0, 67.0], [18.0, 2160.0], [19.0, 2559.0], [20.0, 59.0], [21.0, 62.0], [22.0, 76.0], [23.0, 4560.0], [24.0, 63.0], [25.0, 62.0], [26.0, 3834.0], [27.0, 4436.0], [28.0, 68.0], [29.0, 2304.0], [30.0, 982.0], [31.0, 1201.0]], "isOverall": false, "label": "organizationsList", "isController": false}, {"data": [[25.56000000000001, 1444.7800000000004]], "isOverall": false, "label": "organizationsList-Aggregated", "isController": false}, {"data": [[32.0, 990.0], [2.0, 10005.0], [35.0, 1051.0], [37.0, 6844.0], [41.0, 7400.0], [40.0, 6739.0], [43.0, 827.0], [45.0, 956.0], [44.0, 5158.0], [47.0, 7625.249999999999], [49.0, 427.0], [48.0, 482.5], [50.0, 527.0], [4.0, 8314.5], [8.0, 10281.0], [9.0, 8831.0], [13.0, 9600.0], [16.0, 9525.0], [18.0, 9286.0], [19.0, 9395.0], [20.0, 9915.5], [21.0, 9095.5], [22.0, 9038.0], [23.0, 9023.0], [24.0, 8947.0], [25.0, 9678.5], [29.0, 5971.0], [31.0, 554.0]], "isOverall": false, "label": "challengesWithCommunity", "isController": false}, {"data": [[30.400000000000013, 6882.220000000001]], "isOverall": false, "label": "challengesWithCommunity-Aggregated", "isController": false}, {"data": [[49.0, 5543.428571428572], [50.0, 4227.275862068966]], "isOverall": false, "label": "users", "isController": false}, {"data": [[49.58, 4780.059999999999]], "isOverall": false, "label": "users-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 50.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 1765.7666666666667, "minX": 1.61959728E12, "maxY": 341426.25, "series": [{"data": [[1.61959728E12, 341426.25]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.61959728E12, 1765.7666666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61959728E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 1444.7800000000004, "minX": 1.61959728E12, "maxY": 12203.540000000003, "series": [{"data": [[1.61959728E12, 12203.540000000003]], "isOverall": false, "label": "ecoverseCommunity", "isController": false}, {"data": [[1.61959728E12, 7015.240000000001]], "isOverall": false, "label": "groupMembers", "isController": false}, {"data": [[1.61959728E12, 1444.7800000000004]], "isOverall": false, "label": "organizationsList", "isController": false}, {"data": [[1.61959728E12, 6882.220000000001]], "isOverall": false, "label": "challengesWithCommunity", "isController": false}, {"data": [[1.61959728E12, 4780.059999999999]], "isOverall": false, "label": "users", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61959728E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 1444.7000000000003, "minX": 1.61959728E12, "maxY": 12051.859999999997, "series": [{"data": [[1.61959728E12, 12051.859999999997]], "isOverall": false, "label": "ecoverseCommunity", "isController": false}, {"data": [[1.61959728E12, 7014.959999999999]], "isOverall": false, "label": "groupMembers", "isController": false}, {"data": [[1.61959728E12, 1444.7000000000003]], "isOverall": false, "label": "organizationsList", "isController": false}, {"data": [[1.61959728E12, 6882.120000000001]], "isOverall": false, "label": "challengesWithCommunity", "isController": false}, {"data": [[1.61959728E12, 4681.499999999998]], "isOverall": false, "label": "users", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61959728E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61959728E12, "maxY": 1783.1800000000003, "series": [{"data": [[1.61959728E12, 1783.1800000000003]], "isOverall": false, "label": "ecoverseCommunity", "isController": false}, {"data": [[1.61959728E12, 0.0]], "isOverall": false, "label": "groupMembers", "isController": false}, {"data": [[1.61959728E12, 0.0]], "isOverall": false, "label": "organizationsList", "isController": false}, {"data": [[1.61959728E12, 0.0]], "isOverall": false, "label": "challengesWithCommunity", "isController": false}, {"data": [[1.61959728E12, 0.0]], "isOverall": false, "label": "users", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61959728E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 59.0, "minX": 1.61959728E12, "maxY": 21780.0, "series": [{"data": [[1.61959728E12, 21780.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.61959728E12, 14396.000000000002]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.61959728E12, 20532.490000000005]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.61959728E12, 16581.15]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.61959728E12, 59.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.61959728E12, 6981.5]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61959728E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 1907.0, "minX": 1.0, "maxY": 12191.5, "series": [{"data": [[4.0, 3906.0], [8.0, 9041.0], [16.0, 3177.0], [1.0, 9088.0], [10.0, 2028.0], [5.0, 12191.5], [21.0, 1907.0], [22.0, 7107.0], [3.0, 6093.0], [6.0, 8497.0], [13.0, 9181.0], [7.0, 8488.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 22.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 1907.0, "minX": 1.0, "maxY": 12117.5, "series": [{"data": [[4.0, 3790.0], [8.0, 9041.0], [16.0, 3177.0], [1.0, 9087.0], [10.0, 1920.0], [5.0, 12117.5], [21.0, 1907.0], [22.0, 7102.5], [3.0, 5962.0], [6.0, 8497.0], [13.0, 9181.0], [7.0, 8338.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 22.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 4.166666666666667, "minX": 1.61959728E12, "maxY": 4.166666666666667, "series": [{"data": [[1.61959728E12, 4.166666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61959728E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 4.166666666666667, "minX": 1.61959728E12, "maxY": 4.166666666666667, "series": [{"data": [[1.61959728E12, 4.166666666666667]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61959728E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.8333333333333334, "minX": 1.61959728E12, "maxY": 0.8333333333333334, "series": [{"data": [[1.61959728E12, 0.8333333333333334]], "isOverall": false, "label": "challengesWithCommunity-success", "isController": false}, {"data": [[1.61959728E12, 0.8333333333333334]], "isOverall": false, "label": "groupMembers-success", "isController": false}, {"data": [[1.61959728E12, 0.8333333333333334]], "isOverall": false, "label": "ecoverseCommunity-success", "isController": false}, {"data": [[1.61959728E12, 0.8333333333333334]], "isOverall": false, "label": "organizationsList-success", "isController": false}, {"data": [[1.61959728E12, 0.8333333333333334]], "isOverall": false, "label": "users-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61959728E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 4.166666666666667, "minX": 1.61959728E12, "maxY": 4.166666666666667, "series": [{"data": [[1.61959728E12, 4.166666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61959728E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

