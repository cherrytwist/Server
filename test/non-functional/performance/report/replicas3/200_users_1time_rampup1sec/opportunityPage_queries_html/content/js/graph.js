/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 52.0, "minX": 0.0, "maxY": 35465.0, "series": [{"data": [[0.0, 79.0], [0.1, 79.0], [0.2, 79.0], [0.3, 79.0], [0.4, 79.0], [0.5, 80.0], [0.6, 80.0], [0.7, 80.0], [0.8, 80.0], [0.9, 80.0], [1.0, 84.0], [1.1, 84.0], [1.2, 84.0], [1.3, 84.0], [1.4, 84.0], [1.5, 85.0], [1.6, 85.0], [1.7, 85.0], [1.8, 85.0], [1.9, 85.0], [2.0, 87.0], [2.1, 87.0], [2.2, 87.0], [2.3, 87.0], [2.4, 87.0], [2.5, 87.0], [2.6, 87.0], [2.7, 87.0], [2.8, 87.0], [2.9, 87.0], [3.0, 87.0], [3.1, 87.0], [3.2, 87.0], [3.3, 87.0], [3.4, 87.0], [3.5, 88.0], [3.6, 88.0], [3.7, 88.0], [3.8, 88.0], [3.9, 88.0], [4.0, 88.0], [4.1, 88.0], [4.2, 88.0], [4.3, 88.0], [4.4, 88.0], [4.5, 88.0], [4.6, 88.0], [4.7, 88.0], [4.8, 88.0], [4.9, 88.0], [5.0, 90.0], [5.1, 90.0], [5.2, 90.0], [5.3, 90.0], [5.4, 90.0], [5.5, 90.0], [5.6, 90.0], [5.7, 90.0], [5.8, 90.0], [5.9, 90.0], [6.0, 90.0], [6.1, 90.0], [6.2, 90.0], [6.3, 90.0], [6.4, 90.0], [6.5, 91.0], [6.6, 91.0], [6.7, 91.0], [6.8, 91.0], [6.9, 91.0], [7.0, 91.0], [7.1, 91.0], [7.2, 91.0], [7.3, 91.0], [7.4, 91.0], [7.5, 95.0], [7.6, 95.0], [7.7, 95.0], [7.8, 95.0], [7.9, 95.0], [8.0, 95.0], [8.1, 95.0], [8.2, 95.0], [8.3, 95.0], [8.4, 95.0], [8.5, 95.0], [8.6, 95.0], [8.7, 95.0], [8.8, 95.0], [8.9, 95.0], [9.0, 97.0], [9.1, 97.0], [9.2, 97.0], [9.3, 97.0], [9.4, 97.0], [9.5, 97.0], [9.6, 97.0], [9.7, 97.0], [9.8, 97.0], [9.9, 97.0], [10.0, 97.0], [10.1, 97.0], [10.2, 97.0], [10.3, 97.0], [10.4, 97.0], [10.5, 98.0], [10.6, 98.0], [10.7, 98.0], [10.8, 98.0], [10.9, 98.0], [11.0, 99.0], [11.1, 99.0], [11.2, 99.0], [11.3, 99.0], [11.4, 99.0], [11.5, 99.0], [11.6, 99.0], [11.7, 99.0], [11.8, 99.0], [11.9, 99.0], [12.0, 102.0], [12.1, 102.0], [12.2, 102.0], [12.3, 102.0], [12.4, 102.0], [12.5, 102.0], [12.6, 102.0], [12.7, 102.0], [12.8, 102.0], [12.9, 102.0], [13.0, 103.0], [13.1, 103.0], [13.2, 103.0], [13.3, 103.0], [13.4, 103.0], [13.5, 106.0], [13.6, 106.0], [13.7, 106.0], [13.8, 106.0], [13.9, 106.0], [14.0, 108.0], [14.1, 108.0], [14.2, 108.0], [14.3, 108.0], [14.4, 108.0], [14.5, 109.0], [14.6, 109.0], [14.7, 109.0], [14.8, 109.0], [14.9, 109.0], [15.0, 122.0], [15.1, 122.0], [15.2, 122.0], [15.3, 122.0], [15.4, 122.0], [15.5, 137.0], [15.6, 137.0], [15.7, 137.0], [15.8, 137.0], [15.9, 137.0], [16.0, 152.0], [16.1, 152.0], [16.2, 152.0], [16.3, 152.0], [16.4, 152.0], [16.5, 177.0], [16.6, 177.0], [16.7, 177.0], [16.8, 177.0], [16.9, 177.0], [17.0, 194.0], [17.1, 194.0], [17.2, 194.0], [17.3, 194.0], [17.4, 194.0], [17.5, 209.0], [17.6, 209.0], [17.7, 209.0], [17.8, 209.0], [17.9, 209.0], [18.0, 214.0], [18.1, 214.0], [18.2, 214.0], [18.3, 214.0], [18.4, 214.0], [18.5, 227.0], [18.6, 227.0], [18.7, 227.0], [18.8, 227.0], [18.9, 227.0], [19.0, 228.0], [19.1, 228.0], [19.2, 228.0], [19.3, 228.0], [19.4, 228.0], [19.5, 230.0], [19.6, 230.0], [19.7, 230.0], [19.8, 230.0], [19.9, 230.0], [20.0, 231.0], [20.1, 231.0], [20.2, 231.0], [20.3, 231.0], [20.4, 231.0], [20.5, 233.0], [20.6, 233.0], [20.7, 233.0], [20.8, 233.0], [20.9, 233.0], [21.0, 235.0], [21.1, 235.0], [21.2, 235.0], [21.3, 235.0], [21.4, 235.0], [21.5, 244.0], [21.6, 244.0], [21.7, 244.0], [21.8, 244.0], [21.9, 244.0], [22.0, 247.0], [22.1, 247.0], [22.2, 247.0], [22.3, 247.0], [22.4, 247.0], [22.5, 249.0], [22.6, 249.0], [22.7, 249.0], [22.8, 249.0], [22.9, 249.0], [23.0, 255.0], [23.1, 255.0], [23.2, 255.0], [23.3, 255.0], [23.4, 255.0], [23.5, 268.0], [23.6, 268.0], [23.7, 268.0], [23.8, 268.0], [23.9, 268.0], [24.0, 275.0], [24.1, 275.0], [24.2, 275.0], [24.3, 275.0], [24.4, 275.0], [24.5, 280.0], [24.6, 280.0], [24.7, 280.0], [24.8, 280.0], [24.9, 280.0], [25.0, 283.0], [25.1, 283.0], [25.2, 283.0], [25.3, 283.0], [25.4, 283.0], [25.5, 287.0], [25.6, 287.0], [25.7, 287.0], [25.8, 287.0], [25.9, 287.0], [26.0, 287.0], [26.1, 287.0], [26.2, 287.0], [26.3, 287.0], [26.4, 287.0], [26.5, 290.0], [26.6, 290.0], [26.7, 290.0], [26.8, 290.0], [26.9, 290.0], [27.0, 297.0], [27.1, 297.0], [27.2, 297.0], [27.3, 297.0], [27.4, 297.0], [27.5, 302.0], [27.6, 302.0], [27.7, 302.0], [27.8, 302.0], [27.9, 302.0], [28.0, 311.0], [28.1, 311.0], [28.2, 311.0], [28.3, 311.0], [28.4, 311.0], [28.5, 344.0], [28.6, 344.0], [28.7, 344.0], [28.8, 344.0], [28.9, 344.0], [29.0, 354.0], [29.1, 354.0], [29.2, 354.0], [29.3, 354.0], [29.4, 354.0], [29.5, 383.0], [29.6, 383.0], [29.7, 383.0], [29.8, 383.0], [29.9, 383.0], [30.0, 406.0], [30.1, 406.0], [30.2, 406.0], [30.3, 406.0], [30.4, 406.0], [30.5, 446.0], [30.6, 446.0], [30.7, 446.0], [30.8, 446.0], [30.9, 446.0], [31.0, 468.0], [31.1, 468.0], [31.2, 468.0], [31.3, 468.0], [31.4, 468.0], [31.5, 478.0], [31.6, 478.0], [31.7, 478.0], [31.8, 478.0], [31.9, 478.0], [32.0, 485.0], [32.1, 485.0], [32.2, 485.0], [32.3, 485.0], [32.4, 485.0], [32.5, 545.0], [32.6, 545.0], [32.7, 545.0], [32.8, 545.0], [32.9, 545.0], [33.0, 549.0], [33.1, 549.0], [33.2, 549.0], [33.3, 549.0], [33.4, 549.0], [33.5, 561.0], [33.6, 561.0], [33.7, 561.0], [33.8, 561.0], [33.9, 561.0], [34.0, 587.0], [34.1, 587.0], [34.2, 587.0], [34.3, 587.0], [34.4, 587.0], [34.5, 693.0], [34.6, 693.0], [34.7, 693.0], [34.8, 693.0], [34.9, 693.0], [35.0, 847.0], [35.1, 847.0], [35.2, 847.0], [35.3, 847.0], [35.4, 847.0], [35.5, 855.0], [35.6, 855.0], [35.7, 855.0], [35.8, 855.0], [35.9, 855.0], [36.0, 859.0], [36.1, 859.0], [36.2, 859.0], [36.3, 859.0], [36.4, 859.0], [36.5, 866.0], [36.6, 866.0], [36.7, 866.0], [36.8, 866.0], [36.9, 866.0], [37.0, 900.0], [37.1, 900.0], [37.2, 900.0], [37.3, 900.0], [37.4, 900.0], [37.5, 902.0], [37.6, 902.0], [37.7, 902.0], [37.8, 902.0], [37.9, 902.0], [38.0, 919.0], [38.1, 919.0], [38.2, 919.0], [38.3, 919.0], [38.4, 919.0], [38.5, 1050.0], [38.6, 1050.0], [38.7, 1050.0], [38.8, 1050.0], [38.9, 1050.0], [39.0, 1066.0], [39.1, 1066.0], [39.2, 1066.0], [39.3, 1066.0], [39.4, 1066.0], [39.5, 1072.0], [39.6, 1072.0], [39.7, 1072.0], [39.8, 1072.0], [39.9, 1072.0], [40.0, 1109.0], [40.1, 1109.0], [40.2, 1109.0], [40.3, 1109.0], [40.4, 1109.0], [40.5, 1132.0], [40.6, 1132.0], [40.7, 1132.0], [40.8, 1132.0], [40.9, 1132.0], [41.0, 1147.0], [41.1, 1147.0], [41.2, 1147.0], [41.3, 1147.0], [41.4, 1147.0], [41.5, 1172.0], [41.6, 1172.0], [41.7, 1172.0], [41.8, 1172.0], [41.9, 1172.0], [42.0, 1227.0], [42.1, 1227.0], [42.2, 1227.0], [42.3, 1227.0], [42.4, 1227.0], [42.5, 1232.0], [42.6, 1232.0], [42.7, 1232.0], [42.8, 1232.0], [42.9, 1232.0], [43.0, 1262.0], [43.1, 1262.0], [43.2, 1262.0], [43.3, 1262.0], [43.4, 1262.0], [43.5, 1266.0], [43.6, 1266.0], [43.7, 1266.0], [43.8, 1266.0], [43.9, 1266.0], [44.0, 1413.0], [44.1, 1413.0], [44.2, 1413.0], [44.3, 1413.0], [44.4, 1413.0], [44.5, 1445.0], [44.6, 1445.0], [44.7, 1445.0], [44.8, 1445.0], [44.9, 1445.0], [45.0, 1453.0], [45.1, 1453.0], [45.2, 1453.0], [45.3, 1453.0], [45.4, 1453.0], [45.5, 1589.0], [45.6, 1589.0], [45.7, 1589.0], [45.8, 1589.0], [45.9, 1589.0], [46.0, 1626.0], [46.1, 1626.0], [46.2, 1626.0], [46.3, 1626.0], [46.4, 1626.0], [46.5, 1672.0], [46.6, 1672.0], [46.7, 1672.0], [46.8, 1672.0], [46.9, 1672.0], [47.0, 1676.0], [47.1, 1676.0], [47.2, 1676.0], [47.3, 1676.0], [47.4, 1676.0], [47.5, 1706.0], [47.6, 1706.0], [47.7, 1706.0], [47.8, 1706.0], [47.9, 1706.0], [48.0, 1733.0], [48.1, 1733.0], [48.2, 1733.0], [48.3, 1733.0], [48.4, 1733.0], [48.5, 1857.0], [48.6, 1857.0], [48.7, 1857.0], [48.8, 1857.0], [48.9, 1857.0], [49.0, 1877.0], [49.1, 1877.0], [49.2, 1877.0], [49.3, 1877.0], [49.4, 1877.0], [49.5, 1947.0], [49.6, 1947.0], [49.7, 1947.0], [49.8, 1947.0], [49.9, 1947.0], [50.0, 2002.0], [50.1, 2002.0], [50.2, 2002.0], [50.3, 2002.0], [50.4, 2002.0], [50.5, 2014.0], [50.6, 2014.0], [50.7, 2014.0], [50.8, 2014.0], [50.9, 2014.0], [51.0, 2017.0], [51.1, 2017.0], [51.2, 2017.0], [51.3, 2017.0], [51.4, 2017.0], [51.5, 2265.0], [51.6, 2265.0], [51.7, 2265.0], [51.8, 2265.0], [51.9, 2265.0], [52.0, 2699.0], [52.1, 2699.0], [52.2, 2699.0], [52.3, 2699.0], [52.4, 2699.0], [52.5, 2771.0], [52.6, 2771.0], [52.7, 2771.0], [52.8, 2771.0], [52.9, 2771.0], [53.0, 2825.0], [53.1, 2825.0], [53.2, 2825.0], [53.3, 2825.0], [53.4, 2825.0], [53.5, 3020.0], [53.6, 3020.0], [53.7, 3020.0], [53.8, 3020.0], [53.9, 3020.0], [54.0, 3162.0], [54.1, 3162.0], [54.2, 3162.0], [54.3, 3162.0], [54.4, 3162.0], [54.5, 3305.0], [54.6, 3305.0], [54.7, 3305.0], [54.8, 3305.0], [54.9, 3305.0], [55.0, 3622.0], [55.1, 3622.0], [55.2, 3622.0], [55.3, 3622.0], [55.4, 3622.0], [55.5, 4060.0], [55.6, 4060.0], [55.7, 4060.0], [55.8, 4060.0], [55.9, 4060.0], [56.0, 4069.0], [56.1, 4069.0], [56.2, 4069.0], [56.3, 4069.0], [56.4, 4069.0], [56.5, 4183.0], [56.6, 4183.0], [56.7, 4183.0], [56.8, 4183.0], [56.9, 4183.0], [57.0, 4242.0], [57.1, 4242.0], [57.2, 4242.0], [57.3, 4242.0], [57.4, 4242.0], [57.5, 4420.0], [57.6, 4420.0], [57.7, 4420.0], [57.8, 4420.0], [57.9, 4420.0], [58.0, 4516.0], [58.1, 4516.0], [58.2, 4516.0], [58.3, 4516.0], [58.4, 4516.0], [58.5, 4582.0], [58.6, 4582.0], [58.7, 4582.0], [58.8, 4582.0], [58.9, 4582.0], [59.0, 4593.0], [59.1, 4593.0], [59.2, 4593.0], [59.3, 4593.0], [59.4, 4593.0], [59.5, 4769.0], [59.6, 4769.0], [59.7, 4769.0], [59.8, 4769.0], [59.9, 4769.0], [60.0, 4947.0], [60.1, 4947.0], [60.2, 4947.0], [60.3, 4947.0], [60.4, 4947.0], [60.5, 5008.0], [60.6, 5008.0], [60.7, 5008.0], [60.8, 5008.0], [60.9, 5008.0], [61.0, 5209.0], [61.1, 5209.0], [61.2, 5209.0], [61.3, 5209.0], [61.4, 5209.0], [61.5, 5352.0], [61.6, 5352.0], [61.7, 5352.0], [61.8, 5352.0], [61.9, 5352.0], [62.0, 5694.0], [62.1, 5694.0], [62.2, 5694.0], [62.3, 5694.0], [62.4, 5694.0], [62.5, 5741.0], [62.6, 5741.0], [62.7, 5741.0], [62.8, 5741.0], [62.9, 5741.0], [63.0, 5913.0], [63.1, 5913.0], [63.2, 5913.0], [63.3, 5913.0], [63.4, 5913.0], [63.5, 5914.0], [63.6, 5914.0], [63.7, 5914.0], [63.8, 5914.0], [63.9, 5914.0], [64.0, 6024.0], [64.1, 6024.0], [64.2, 6024.0], [64.3, 6024.0], [64.4, 6024.0], [64.5, 6053.0], [64.6, 6053.0], [64.7, 6053.0], [64.8, 6053.0], [64.9, 6053.0], [65.0, 6069.0], [65.1, 6069.0], [65.2, 6069.0], [65.3, 6069.0], [65.4, 6069.0], [65.5, 6146.0], [65.6, 6146.0], [65.7, 6146.0], [65.8, 6146.0], [65.9, 6146.0], [66.0, 6244.0], [66.1, 6244.0], [66.2, 6244.0], [66.3, 6244.0], [66.4, 6244.0], [66.5, 6287.0], [66.6, 6287.0], [66.7, 6287.0], [66.8, 6287.0], [66.9, 6287.0], [67.0, 6298.0], [67.1, 6298.0], [67.2, 6298.0], [67.3, 6298.0], [67.4, 6298.0], [67.5, 6344.0], [67.6, 6344.0], [67.7, 6344.0], [67.8, 6344.0], [67.9, 6344.0], [68.0, 6428.0], [68.1, 6428.0], [68.2, 6428.0], [68.3, 6428.0], [68.4, 6428.0], [68.5, 6475.0], [68.6, 6475.0], [68.7, 6475.0], [68.8, 6475.0], [68.9, 6475.0], [69.0, 6485.0], [69.1, 6485.0], [69.2, 6485.0], [69.3, 6485.0], [69.4, 6485.0], [69.5, 6500.0], [69.6, 6500.0], [69.7, 6500.0], [69.8, 6500.0], [69.9, 6500.0], [70.0, 6607.0], [70.1, 6607.0], [70.2, 6607.0], [70.3, 6607.0], [70.4, 6607.0], [70.5, 6849.0], [70.6, 6849.0], [70.7, 6849.0], [70.8, 6849.0], [70.9, 6849.0], [71.0, 7008.0], [71.1, 7008.0], [71.2, 7008.0], [71.3, 7008.0], [71.4, 7008.0], [71.5, 7133.0], [71.6, 7133.0], [71.7, 7133.0], [71.8, 7133.0], [71.9, 7133.0], [72.0, 7349.0], [72.1, 7349.0], [72.2, 7349.0], [72.3, 7349.0], [72.4, 7349.0], [72.5, 7359.0], [72.6, 7359.0], [72.7, 7359.0], [72.8, 7359.0], [72.9, 7359.0], [73.0, 7364.0], [73.1, 7364.0], [73.2, 7364.0], [73.3, 7364.0], [73.4, 7364.0], [73.5, 7379.0], [73.6, 7379.0], [73.7, 7379.0], [73.8, 7379.0], [73.9, 7379.0], [74.0, 7382.0], [74.1, 7382.0], [74.2, 7382.0], [74.3, 7382.0], [74.4, 7382.0], [74.5, 7427.0], [74.6, 7427.0], [74.7, 7427.0], [74.8, 7427.0], [74.9, 7427.0], [75.0, 7489.0], [75.1, 7489.0], [75.2, 7489.0], [75.3, 7489.0], [75.4, 7489.0], [75.5, 7499.0], [75.6, 7499.0], [75.7, 7499.0], [75.8, 7499.0], [75.9, 7499.0], [76.0, 7527.0], [76.1, 7527.0], [76.2, 7527.0], [76.3, 7527.0], [76.4, 7527.0], [76.5, 7530.0], [76.6, 7530.0], [76.7, 7530.0], [76.8, 7530.0], [76.9, 7530.0], [77.0, 7627.0], [77.1, 7627.0], [77.2, 7627.0], [77.3, 7627.0], [77.4, 7627.0], [77.5, 7652.0], [77.6, 7652.0], [77.7, 7652.0], [77.8, 7652.0], [77.9, 7652.0], [78.0, 7710.0], [78.1, 7710.0], [78.2, 7710.0], [78.3, 7710.0], [78.4, 7710.0], [78.5, 7910.0], [78.6, 7910.0], [78.7, 7910.0], [78.8, 7910.0], [78.9, 7910.0], [79.0, 7935.0], [79.1, 7935.0], [79.2, 7935.0], [79.3, 7935.0], [79.4, 7935.0], [79.5, 7935.0], [79.6, 7935.0], [79.7, 7935.0], [79.8, 7935.0], [79.9, 7935.0], [80.0, 8003.0], [80.1, 8003.0], [80.2, 8003.0], [80.3, 8003.0], [80.4, 8003.0], [80.5, 8099.0], [80.6, 8099.0], [80.7, 8099.0], [80.8, 8099.0], [80.9, 8099.0], [81.0, 8129.0], [81.1, 8129.0], [81.2, 8129.0], [81.3, 8129.0], [81.4, 8129.0], [81.5, 8278.0], [81.6, 8278.0], [81.7, 8278.0], [81.8, 8278.0], [81.9, 8278.0], [82.0, 8336.0], [82.1, 8336.0], [82.2, 8336.0], [82.3, 8336.0], [82.4, 8336.0], [82.5, 8341.0], [82.6, 8341.0], [82.7, 8341.0], [82.8, 8341.0], [82.9, 8341.0], [83.0, 8351.0], [83.1, 8351.0], [83.2, 8351.0], [83.3, 8351.0], [83.4, 8351.0], [83.5, 8386.0], [83.6, 8386.0], [83.7, 8386.0], [83.8, 8386.0], [83.9, 8386.0], [84.0, 8500.0], [84.1, 8500.0], [84.2, 8500.0], [84.3, 8500.0], [84.4, 8500.0], [84.5, 8533.0], [84.6, 8533.0], [84.7, 8533.0], [84.8, 8533.0], [84.9, 8533.0], [85.0, 8614.0], [85.1, 8614.0], [85.2, 8614.0], [85.3, 8614.0], [85.4, 8614.0], [85.5, 8671.0], [85.6, 8671.0], [85.7, 8671.0], [85.8, 8671.0], [85.9, 8671.0], [86.0, 8703.0], [86.1, 8703.0], [86.2, 8703.0], [86.3, 8703.0], [86.4, 8703.0], [86.5, 8759.0], [86.6, 8759.0], [86.7, 8759.0], [86.8, 8759.0], [86.9, 8759.0], [87.0, 8784.0], [87.1, 8784.0], [87.2, 8784.0], [87.3, 8784.0], [87.4, 8784.0], [87.5, 8827.0], [87.6, 8827.0], [87.7, 8827.0], [87.8, 8827.0], [87.9, 8827.0], [88.0, 8888.0], [88.1, 8888.0], [88.2, 8888.0], [88.3, 8888.0], [88.4, 8888.0], [88.5, 9146.0], [88.6, 9146.0], [88.7, 9146.0], [88.8, 9146.0], [88.9, 9146.0], [89.0, 9181.0], [89.1, 9181.0], [89.2, 9181.0], [89.3, 9181.0], [89.4, 9181.0], [89.5, 9216.0], [89.6, 9216.0], [89.7, 9216.0], [89.8, 9216.0], [89.9, 9216.0], [90.0, 9223.0], [90.1, 9223.0], [90.2, 9223.0], [90.3, 9223.0], [90.4, 9223.0], [90.5, 9238.0], [90.6, 9238.0], [90.7, 9238.0], [90.8, 9238.0], [90.9, 9238.0], [91.0, 9247.0], [91.1, 9247.0], [91.2, 9247.0], [91.3, 9247.0], [91.4, 9247.0], [91.5, 9321.0], [91.6, 9321.0], [91.7, 9321.0], [91.8, 9321.0], [91.9, 9321.0], [92.0, 9450.0], [92.1, 9450.0], [92.2, 9450.0], [92.3, 9450.0], [92.4, 9450.0], [92.5, 9468.0], [92.6, 9468.0], [92.7, 9468.0], [92.8, 9468.0], [92.9, 9468.0], [93.0, 9519.0], [93.1, 9519.0], [93.2, 9519.0], [93.3, 9519.0], [93.4, 9519.0], [93.5, 9566.0], [93.6, 9566.0], [93.7, 9566.0], [93.8, 9566.0], [93.9, 9566.0], [94.0, 9591.0], [94.1, 9591.0], [94.2, 9591.0], [94.3, 9591.0], [94.4, 9591.0], [94.5, 9832.0], [94.6, 9832.0], [94.7, 9832.0], [94.8, 9832.0], [94.9, 9832.0], [95.0, 9895.0], [95.1, 9895.0], [95.2, 9895.0], [95.3, 9895.0], [95.4, 9895.0], [95.5, 9958.0], [95.6, 9958.0], [95.7, 9958.0], [95.8, 9958.0], [95.9, 9958.0], [96.0, 9985.0], [96.1, 9985.0], [96.2, 9985.0], [96.3, 9985.0], [96.4, 9985.0], [96.5, 10184.0], [96.6, 10184.0], [96.7, 10184.0], [96.8, 10184.0], [96.9, 10184.0], [97.0, 10242.0], [97.1, 10242.0], [97.2, 10242.0], [97.3, 10242.0], [97.4, 10242.0], [97.5, 10280.0], [97.6, 10280.0], [97.7, 10280.0], [97.8, 10280.0], [97.9, 10280.0], [98.0, 12029.0], [98.1, 12029.0], [98.2, 12029.0], [98.3, 12029.0], [98.4, 12029.0], [98.5, 12097.0], [98.6, 12097.0], [98.7, 12097.0], [98.8, 12097.0], [98.9, 12097.0], [99.0, 12494.0], [99.1, 12494.0], [99.2, 12494.0], [99.3, 12494.0], [99.4, 12494.0], [99.5, 12522.0], [99.6, 12522.0], [99.7, 12522.0], [99.8, 12522.0], [99.9, 12522.0]], "isOverall": false, "label": "opportunityProfile", "isController": false}, {"data": [[0.0, 52.0], [0.1, 52.0], [0.2, 52.0], [0.3, 52.0], [0.4, 52.0], [0.5, 52.0], [0.6, 52.0], [0.7, 52.0], [0.8, 52.0], [0.9, 52.0], [1.0, 52.0], [1.1, 52.0], [1.2, 52.0], [1.3, 52.0], [1.4, 52.0], [1.5, 52.0], [1.6, 52.0], [1.7, 52.0], [1.8, 52.0], [1.9, 52.0], [2.0, 53.0], [2.1, 53.0], [2.2, 53.0], [2.3, 53.0], [2.4, 53.0], [2.5, 53.0], [2.6, 53.0], [2.7, 53.0], [2.8, 53.0], [2.9, 53.0], [3.0, 53.0], [3.1, 53.0], [3.2, 53.0], [3.3, 53.0], [3.4, 53.0], [3.5, 53.0], [3.6, 53.0], [3.7, 53.0], [3.8, 53.0], [3.9, 53.0], [4.0, 53.0], [4.1, 53.0], [4.2, 53.0], [4.3, 53.0], [4.4, 53.0], [4.5, 54.0], [4.6, 54.0], [4.7, 54.0], [4.8, 54.0], [4.9, 54.0], [5.0, 54.0], [5.1, 54.0], [5.2, 54.0], [5.3, 54.0], [5.4, 54.0], [5.5, 54.0], [5.6, 54.0], [5.7, 54.0], [5.8, 54.0], [5.9, 54.0], [6.0, 54.0], [6.1, 54.0], [6.2, 54.0], [6.3, 54.0], [6.4, 54.0], [6.5, 54.0], [6.6, 54.0], [6.7, 54.0], [6.8, 54.0], [6.9, 54.0], [7.0, 54.0], [7.1, 54.0], [7.2, 54.0], [7.3, 54.0], [7.4, 54.0], [7.5, 54.0], [7.6, 54.0], [7.7, 54.0], [7.8, 54.0], [7.9, 54.0], [8.0, 54.0], [8.1, 54.0], [8.2, 54.0], [8.3, 54.0], [8.4, 54.0], [8.5, 54.0], [8.6, 54.0], [8.7, 54.0], [8.8, 54.0], [8.9, 54.0], [9.0, 54.0], [9.1, 54.0], [9.2, 54.0], [9.3, 54.0], [9.4, 54.0], [9.5, 55.0], [9.6, 55.0], [9.7, 55.0], [9.8, 55.0], [9.9, 55.0], [10.0, 55.0], [10.1, 55.0], [10.2, 55.0], [10.3, 55.0], [10.4, 55.0], [10.5, 55.0], [10.6, 55.0], [10.7, 55.0], [10.8, 55.0], [10.9, 55.0], [11.0, 55.0], [11.1, 55.0], [11.2, 55.0], [11.3, 55.0], [11.4, 55.0], [11.5, 55.0], [11.6, 55.0], [11.7, 55.0], [11.8, 55.0], [11.9, 55.0], [12.0, 55.0], [12.1, 55.0], [12.2, 55.0], [12.3, 55.0], [12.4, 55.0], [12.5, 55.0], [12.6, 55.0], [12.7, 55.0], [12.8, 55.0], [12.9, 55.0], [13.0, 55.0], [13.1, 55.0], [13.2, 55.0], [13.3, 55.0], [13.4, 55.0], [13.5, 55.0], [13.6, 55.0], [13.7, 55.0], [13.8, 55.0], [13.9, 55.0], [14.0, 55.0], [14.1, 55.0], [14.2, 55.0], [14.3, 55.0], [14.4, 55.0], [14.5, 55.0], [14.6, 55.0], [14.7, 55.0], [14.8, 55.0], [14.9, 55.0], [15.0, 55.0], [15.1, 55.0], [15.2, 55.0], [15.3, 55.0], [15.4, 55.0], [15.5, 55.0], [15.6, 55.0], [15.7, 55.0], [15.8, 55.0], [15.9, 55.0], [16.0, 55.0], [16.1, 55.0], [16.2, 55.0], [16.3, 55.0], [16.4, 55.0], [16.5, 56.0], [16.6, 56.0], [16.7, 56.0], [16.8, 56.0], [16.9, 56.0], [17.0, 56.0], [17.1, 56.0], [17.2, 56.0], [17.3, 56.0], [17.4, 56.0], [17.5, 56.0], [17.6, 56.0], [17.7, 56.0], [17.8, 56.0], [17.9, 56.0], [18.0, 56.0], [18.1, 56.0], [18.2, 56.0], [18.3, 56.0], [18.4, 56.0], [18.5, 56.0], [18.6, 56.0], [18.7, 56.0], [18.8, 56.0], [18.9, 56.0], [19.0, 57.0], [19.1, 57.0], [19.2, 57.0], [19.3, 57.0], [19.4, 57.0], [19.5, 57.0], [19.6, 57.0], [19.7, 57.0], [19.8, 57.0], [19.9, 57.0], [20.0, 57.0], [20.1, 57.0], [20.2, 57.0], [20.3, 57.0], [20.4, 57.0], [20.5, 58.0], [20.6, 58.0], [20.7, 58.0], [20.8, 58.0], [20.9, 58.0], [21.0, 58.0], [21.1, 58.0], [21.2, 58.0], [21.3, 58.0], [21.4, 58.0], [21.5, 58.0], [21.6, 58.0], [21.7, 58.0], [21.8, 58.0], [21.9, 58.0], [22.0, 59.0], [22.1, 59.0], [22.2, 59.0], [22.3, 59.0], [22.4, 59.0], [22.5, 61.0], [22.6, 61.0], [22.7, 61.0], [22.8, 61.0], [22.9, 61.0], [23.0, 63.0], [23.1, 63.0], [23.2, 63.0], [23.3, 63.0], [23.4, 63.0], [23.5, 63.0], [23.6, 63.0], [23.7, 63.0], [23.8, 63.0], [23.9, 63.0], [24.0, 64.0], [24.1, 64.0], [24.2, 64.0], [24.3, 64.0], [24.4, 64.0], [24.5, 65.0], [24.6, 65.0], [24.7, 65.0], [24.8, 65.0], [24.9, 65.0], [25.0, 71.0], [25.1, 71.0], [25.2, 71.0], [25.3, 71.0], [25.4, 71.0], [25.5, 77.0], [25.6, 77.0], [25.7, 77.0], [25.8, 77.0], [25.9, 77.0], [26.0, 79.0], [26.1, 79.0], [26.2, 79.0], [26.3, 79.0], [26.4, 79.0], [26.5, 79.0], [26.6, 79.0], [26.7, 79.0], [26.8, 79.0], [26.9, 79.0], [27.0, 80.0], [27.1, 80.0], [27.2, 80.0], [27.3, 80.0], [27.4, 80.0], [27.5, 80.0], [27.6, 80.0], [27.7, 80.0], [27.8, 80.0], [27.9, 80.0], [28.0, 82.0], [28.1, 82.0], [28.2, 82.0], [28.3, 82.0], [28.4, 82.0], [28.5, 83.0], [28.6, 83.0], [28.7, 83.0], [28.8, 83.0], [28.9, 83.0], [29.0, 84.0], [29.1, 84.0], [29.2, 84.0], [29.3, 84.0], [29.4, 84.0], [29.5, 86.0], [29.6, 86.0], [29.7, 86.0], [29.8, 86.0], [29.9, 86.0], [30.0, 90.0], [30.1, 90.0], [30.2, 90.0], [30.3, 90.0], [30.4, 90.0], [30.5, 91.0], [30.6, 91.0], [30.7, 91.0], [30.8, 91.0], [30.9, 91.0], [31.0, 95.0], [31.1, 95.0], [31.2, 95.0], [31.3, 95.0], [31.4, 95.0], [31.5, 96.0], [31.6, 96.0], [31.7, 96.0], [31.8, 96.0], [31.9, 96.0], [32.0, 100.0], [32.1, 100.0], [32.2, 100.0], [32.3, 100.0], [32.4, 100.0], [32.5, 101.0], [32.6, 101.0], [32.7, 101.0], [32.8, 101.0], [32.9, 101.0], [33.0, 101.0], [33.1, 101.0], [33.2, 101.0], [33.3, 101.0], [33.4, 101.0], [33.5, 103.0], [33.6, 103.0], [33.7, 103.0], [33.8, 103.0], [33.9, 103.0], [34.0, 103.0], [34.1, 103.0], [34.2, 103.0], [34.3, 103.0], [34.4, 103.0], [34.5, 107.0], [34.6, 107.0], [34.7, 107.0], [34.8, 107.0], [34.9, 107.0], [35.0, 111.0], [35.1, 111.0], [35.2, 111.0], [35.3, 111.0], [35.4, 111.0], [35.5, 113.0], [35.6, 113.0], [35.7, 113.0], [35.8, 113.0], [35.9, 113.0], [36.0, 114.0], [36.1, 114.0], [36.2, 114.0], [36.3, 114.0], [36.4, 114.0], [36.5, 116.0], [36.6, 116.0], [36.7, 116.0], [36.8, 116.0], [36.9, 116.0], [37.0, 117.0], [37.1, 117.0], [37.2, 117.0], [37.3, 117.0], [37.4, 117.0], [37.5, 123.0], [37.6, 123.0], [37.7, 123.0], [37.8, 123.0], [37.9, 123.0], [38.0, 126.0], [38.1, 126.0], [38.2, 126.0], [38.3, 126.0], [38.4, 126.0], [38.5, 128.0], [38.6, 128.0], [38.7, 128.0], [38.8, 128.0], [38.9, 128.0], [39.0, 134.0], [39.1, 134.0], [39.2, 134.0], [39.3, 134.0], [39.4, 134.0], [39.5, 138.0], [39.6, 138.0], [39.7, 138.0], [39.8, 138.0], [39.9, 138.0], [40.0, 139.0], [40.1, 139.0], [40.2, 139.0], [40.3, 139.0], [40.4, 139.0], [40.5, 139.0], [40.6, 139.0], [40.7, 139.0], [40.8, 139.0], [40.9, 139.0], [41.0, 139.0], [41.1, 139.0], [41.2, 139.0], [41.3, 139.0], [41.4, 139.0], [41.5, 139.0], [41.6, 139.0], [41.7, 139.0], [41.8, 139.0], [41.9, 139.0], [42.0, 144.0], [42.1, 144.0], [42.2, 144.0], [42.3, 144.0], [42.4, 144.0], [42.5, 146.0], [42.6, 146.0], [42.7, 146.0], [42.8, 146.0], [42.9, 146.0], [43.0, 146.0], [43.1, 146.0], [43.2, 146.0], [43.3, 146.0], [43.4, 146.0], [43.5, 146.0], [43.6, 146.0], [43.7, 146.0], [43.8, 146.0], [43.9, 146.0], [44.0, 148.0], [44.1, 148.0], [44.2, 148.0], [44.3, 148.0], [44.4, 148.0], [44.5, 151.0], [44.6, 151.0], [44.7, 151.0], [44.8, 151.0], [44.9, 151.0], [45.0, 155.0], [45.1, 155.0], [45.2, 155.0], [45.3, 155.0], [45.4, 155.0], [45.5, 155.0], [45.6, 155.0], [45.7, 155.0], [45.8, 155.0], [45.9, 155.0], [46.0, 157.0], [46.1, 157.0], [46.2, 157.0], [46.3, 157.0], [46.4, 157.0], [46.5, 158.0], [46.6, 158.0], [46.7, 158.0], [46.8, 158.0], [46.9, 158.0], [47.0, 160.0], [47.1, 160.0], [47.2, 160.0], [47.3, 160.0], [47.4, 160.0], [47.5, 161.0], [47.6, 161.0], [47.7, 161.0], [47.8, 161.0], [47.9, 161.0], [48.0, 162.0], [48.1, 162.0], [48.2, 162.0], [48.3, 162.0], [48.4, 162.0], [48.5, 162.0], [48.6, 162.0], [48.7, 162.0], [48.8, 162.0], [48.9, 162.0], [49.0, 166.0], [49.1, 166.0], [49.2, 166.0], [49.3, 166.0], [49.4, 166.0], [49.5, 167.0], [49.6, 167.0], [49.7, 167.0], [49.8, 167.0], [49.9, 167.0], [50.0, 167.0], [50.1, 167.0], [50.2, 167.0], [50.3, 167.0], [50.4, 167.0], [50.5, 169.0], [50.6, 169.0], [50.7, 169.0], [50.8, 169.0], [50.9, 169.0], [51.0, 170.0], [51.1, 170.0], [51.2, 170.0], [51.3, 170.0], [51.4, 170.0], [51.5, 173.0], [51.6, 173.0], [51.7, 173.0], [51.8, 173.0], [51.9, 173.0], [52.0, 174.0], [52.1, 174.0], [52.2, 174.0], [52.3, 174.0], [52.4, 174.0], [52.5, 175.0], [52.6, 175.0], [52.7, 175.0], [52.8, 175.0], [52.9, 175.0], [53.0, 181.0], [53.1, 181.0], [53.2, 181.0], [53.3, 181.0], [53.4, 181.0], [53.5, 183.0], [53.6, 183.0], [53.7, 183.0], [53.8, 183.0], [53.9, 183.0], [54.0, 183.0], [54.1, 183.0], [54.2, 183.0], [54.3, 183.0], [54.4, 183.0], [54.5, 184.0], [54.6, 184.0], [54.7, 184.0], [54.8, 184.0], [54.9, 184.0], [55.0, 184.0], [55.1, 184.0], [55.2, 184.0], [55.3, 184.0], [55.4, 184.0], [55.5, 186.0], [55.6, 186.0], [55.7, 186.0], [55.8, 186.0], [55.9, 186.0], [56.0, 188.0], [56.1, 188.0], [56.2, 188.0], [56.3, 188.0], [56.4, 188.0], [56.5, 190.0], [56.6, 190.0], [56.7, 190.0], [56.8, 190.0], [56.9, 190.0], [57.0, 192.0], [57.1, 192.0], [57.2, 192.0], [57.3, 192.0], [57.4, 192.0], [57.5, 198.0], [57.6, 198.0], [57.7, 198.0], [57.8, 198.0], [57.9, 198.0], [58.0, 204.0], [58.1, 204.0], [58.2, 204.0], [58.3, 204.0], [58.4, 204.0], [58.5, 204.0], [58.6, 204.0], [58.7, 204.0], [58.8, 204.0], [58.9, 204.0], [59.0, 205.0], [59.1, 205.0], [59.2, 205.0], [59.3, 205.0], [59.4, 205.0], [59.5, 209.0], [59.6, 209.0], [59.7, 209.0], [59.8, 209.0], [59.9, 209.0], [60.0, 210.0], [60.1, 210.0], [60.2, 210.0], [60.3, 210.0], [60.4, 210.0], [60.5, 215.0], [60.6, 215.0], [60.7, 215.0], [60.8, 215.0], [60.9, 215.0], [61.0, 216.0], [61.1, 216.0], [61.2, 216.0], [61.3, 216.0], [61.4, 216.0], [61.5, 218.0], [61.6, 218.0], [61.7, 218.0], [61.8, 218.0], [61.9, 218.0], [62.0, 218.0], [62.1, 218.0], [62.2, 218.0], [62.3, 218.0], [62.4, 218.0], [62.5, 220.0], [62.6, 220.0], [62.7, 220.0], [62.8, 220.0], [62.9, 220.0], [63.0, 228.0], [63.1, 228.0], [63.2, 228.0], [63.3, 228.0], [63.4, 228.0], [63.5, 229.0], [63.6, 229.0], [63.7, 229.0], [63.8, 229.0], [63.9, 229.0], [64.0, 231.0], [64.1, 231.0], [64.2, 231.0], [64.3, 231.0], [64.4, 231.0], [64.5, 231.0], [64.6, 231.0], [64.7, 231.0], [64.8, 231.0], [64.9, 231.0], [65.0, 232.0], [65.1, 232.0], [65.2, 232.0], [65.3, 232.0], [65.4, 232.0], [65.5, 240.0], [65.6, 240.0], [65.7, 240.0], [65.8, 240.0], [65.9, 240.0], [66.0, 246.0], [66.1, 246.0], [66.2, 246.0], [66.3, 246.0], [66.4, 246.0], [66.5, 247.0], [66.6, 247.0], [66.7, 247.0], [66.8, 247.0], [66.9, 247.0], [67.0, 256.0], [67.1, 256.0], [67.2, 256.0], [67.3, 256.0], [67.4, 256.0], [67.5, 259.0], [67.6, 259.0], [67.7, 259.0], [67.8, 259.0], [67.9, 259.0], [68.0, 261.0], [68.1, 261.0], [68.2, 261.0], [68.3, 261.0], [68.4, 261.0], [68.5, 261.0], [68.6, 261.0], [68.7, 261.0], [68.8, 261.0], [68.9, 261.0], [69.0, 263.0], [69.1, 263.0], [69.2, 263.0], [69.3, 263.0], [69.4, 263.0], [69.5, 264.0], [69.6, 264.0], [69.7, 264.0], [69.8, 264.0], [69.9, 264.0], [70.0, 265.0], [70.1, 265.0], [70.2, 265.0], [70.3, 265.0], [70.4, 265.0], [70.5, 265.0], [70.6, 265.0], [70.7, 265.0], [70.8, 265.0], [70.9, 265.0], [71.0, 266.0], [71.1, 266.0], [71.2, 266.0], [71.3, 266.0], [71.4, 266.0], [71.5, 270.0], [71.6, 270.0], [71.7, 270.0], [71.8, 270.0], [71.9, 270.0], [72.0, 275.0], [72.1, 275.0], [72.2, 275.0], [72.3, 275.0], [72.4, 275.0], [72.5, 278.0], [72.6, 278.0], [72.7, 278.0], [72.8, 278.0], [72.9, 278.0], [73.0, 278.0], [73.1, 278.0], [73.2, 278.0], [73.3, 278.0], [73.4, 278.0], [73.5, 281.0], [73.6, 281.0], [73.7, 281.0], [73.8, 281.0], [73.9, 281.0], [74.0, 289.0], [74.1, 289.0], [74.2, 289.0], [74.3, 289.0], [74.4, 289.0], [74.5, 291.0], [74.6, 291.0], [74.7, 291.0], [74.8, 291.0], [74.9, 291.0], [75.0, 294.0], [75.1, 294.0], [75.2, 294.0], [75.3, 294.0], [75.4, 294.0], [75.5, 300.0], [75.6, 300.0], [75.7, 300.0], [75.8, 300.0], [75.9, 300.0], [76.0, 300.0], [76.1, 300.0], [76.2, 300.0], [76.3, 300.0], [76.4, 300.0], [76.5, 303.0], [76.6, 303.0], [76.7, 303.0], [76.8, 303.0], [76.9, 303.0], [77.0, 304.0], [77.1, 304.0], [77.2, 304.0], [77.3, 304.0], [77.4, 304.0], [77.5, 307.0], [77.6, 307.0], [77.7, 307.0], [77.8, 307.0], [77.9, 307.0], [78.0, 335.0], [78.1, 335.0], [78.2, 335.0], [78.3, 335.0], [78.4, 335.0], [78.5, 349.0], [78.6, 349.0], [78.7, 349.0], [78.8, 349.0], [78.9, 349.0], [79.0, 349.0], [79.1, 349.0], [79.2, 349.0], [79.3, 349.0], [79.4, 349.0], [79.5, 352.0], [79.6, 352.0], [79.7, 352.0], [79.8, 352.0], [79.9, 352.0], [80.0, 362.0], [80.1, 362.0], [80.2, 362.0], [80.3, 362.0], [80.4, 362.0], [80.5, 362.0], [80.6, 362.0], [80.7, 362.0], [80.8, 362.0], [80.9, 362.0], [81.0, 412.0], [81.1, 412.0], [81.2, 412.0], [81.3, 412.0], [81.4, 412.0], [81.5, 434.0], [81.6, 434.0], [81.7, 434.0], [81.8, 434.0], [81.9, 434.0], [82.0, 436.0], [82.1, 436.0], [82.2, 436.0], [82.3, 436.0], [82.4, 436.0], [82.5, 438.0], [82.6, 438.0], [82.7, 438.0], [82.8, 438.0], [82.9, 438.0], [83.0, 449.0], [83.1, 449.0], [83.2, 449.0], [83.3, 449.0], [83.4, 449.0], [83.5, 460.0], [83.6, 460.0], [83.7, 460.0], [83.8, 460.0], [83.9, 460.0], [84.0, 462.0], [84.1, 462.0], [84.2, 462.0], [84.3, 462.0], [84.4, 462.0], [84.5, 478.0], [84.6, 478.0], [84.7, 478.0], [84.8, 478.0], [84.9, 478.0], [85.0, 493.0], [85.1, 493.0], [85.2, 493.0], [85.3, 493.0], [85.4, 493.0], [85.5, 504.0], [85.6, 504.0], [85.7, 504.0], [85.8, 504.0], [85.9, 504.0], [86.0, 510.0], [86.1, 510.0], [86.2, 510.0], [86.3, 510.0], [86.4, 510.0], [86.5, 520.0], [86.6, 520.0], [86.7, 520.0], [86.8, 520.0], [86.9, 520.0], [87.0, 538.0], [87.1, 538.0], [87.2, 538.0], [87.3, 538.0], [87.4, 538.0], [87.5, 548.0], [87.6, 548.0], [87.7, 548.0], [87.8, 548.0], [87.9, 548.0], [88.0, 552.0], [88.1, 552.0], [88.2, 552.0], [88.3, 552.0], [88.4, 552.0], [88.5, 557.0], [88.6, 557.0], [88.7, 557.0], [88.8, 557.0], [88.9, 557.0], [89.0, 569.0], [89.1, 569.0], [89.2, 569.0], [89.3, 569.0], [89.4, 569.0], [89.5, 570.0], [89.6, 570.0], [89.7, 570.0], [89.8, 570.0], [89.9, 570.0], [90.0, 583.0], [90.1, 583.0], [90.2, 583.0], [90.3, 583.0], [90.4, 583.0], [90.5, 591.0], [90.6, 591.0], [90.7, 591.0], [90.8, 591.0], [90.9, 591.0], [91.0, 600.0], [91.1, 600.0], [91.2, 600.0], [91.3, 600.0], [91.4, 600.0], [91.5, 603.0], [91.6, 603.0], [91.7, 603.0], [91.8, 603.0], [91.9, 603.0], [92.0, 641.0], [92.1, 641.0], [92.2, 641.0], [92.3, 641.0], [92.4, 641.0], [92.5, 643.0], [92.6, 643.0], [92.7, 643.0], [92.8, 643.0], [92.9, 643.0], [93.0, 669.0], [93.1, 669.0], [93.2, 669.0], [93.3, 669.0], [93.4, 669.0], [93.5, 708.0], [93.6, 708.0], [93.7, 708.0], [93.8, 708.0], [93.9, 708.0], [94.0, 710.0], [94.1, 710.0], [94.2, 710.0], [94.3, 710.0], [94.4, 710.0], [94.5, 759.0], [94.6, 759.0], [94.7, 759.0], [94.8, 759.0], [94.9, 759.0], [95.0, 909.0], [95.1, 909.0], [95.2, 909.0], [95.3, 909.0], [95.4, 909.0], [95.5, 942.0], [95.6, 942.0], [95.7, 942.0], [95.8, 942.0], [95.9, 942.0], [96.0, 990.0], [96.1, 990.0], [96.2, 990.0], [96.3, 990.0], [96.4, 990.0], [96.5, 998.0], [96.6, 998.0], [96.7, 998.0], [96.8, 998.0], [96.9, 998.0], [97.0, 1003.0], [97.1, 1003.0], [97.2, 1003.0], [97.3, 1003.0], [97.4, 1003.0], [97.5, 1048.0], [97.6, 1048.0], [97.7, 1048.0], [97.8, 1048.0], [97.9, 1048.0], [98.0, 1258.0], [98.1, 1258.0], [98.2, 1258.0], [98.3, 1258.0], [98.4, 1258.0], [98.5, 1406.0], [98.6, 1406.0], [98.7, 1406.0], [98.8, 1406.0], [98.9, 1406.0], [99.0, 1522.0], [99.1, 1522.0], [99.2, 1522.0], [99.3, 1522.0], [99.4, 1522.0], [99.5, 1602.0], [99.6, 1602.0], [99.7, 1602.0], [99.8, 1602.0], [99.9, 1602.0]], "isOverall": false, "label": "opportunityTemplate ", "isController": false}, {"data": [[0.0, 106.0], [0.1, 106.0], [0.2, 106.0], [0.3, 106.0], [0.4, 106.0], [0.5, 107.0], [0.6, 107.0], [0.7, 107.0], [0.8, 107.0], [0.9, 107.0], [1.0, 107.0], [1.1, 107.0], [1.2, 107.0], [1.3, 107.0], [1.4, 107.0], [1.5, 107.0], [1.6, 107.0], [1.7, 107.0], [1.8, 107.0], [1.9, 107.0], [2.0, 109.0], [2.1, 109.0], [2.2, 109.0], [2.3, 109.0], [2.4, 109.0], [2.5, 111.0], [2.6, 111.0], [2.7, 111.0], [2.8, 111.0], [2.9, 111.0], [3.0, 112.0], [3.1, 112.0], [3.2, 112.0], [3.3, 112.0], [3.4, 112.0], [3.5, 114.0], [3.6, 114.0], [3.7, 114.0], [3.8, 114.0], [3.9, 114.0], [4.0, 115.0], [4.1, 115.0], [4.2, 115.0], [4.3, 115.0], [4.4, 115.0], [4.5, 120.0], [4.6, 120.0], [4.7, 120.0], [4.8, 120.0], [4.9, 120.0], [5.0, 121.0], [5.1, 121.0], [5.2, 121.0], [5.3, 121.0], [5.4, 121.0], [5.5, 124.0], [5.6, 124.0], [5.7, 124.0], [5.8, 124.0], [5.9, 124.0], [6.0, 125.0], [6.1, 125.0], [6.2, 125.0], [6.3, 125.0], [6.4, 125.0], [6.5, 126.0], [6.6, 126.0], [6.7, 126.0], [6.8, 126.0], [6.9, 126.0], [7.0, 126.0], [7.1, 126.0], [7.2, 126.0], [7.3, 126.0], [7.4, 126.0], [7.5, 126.0], [7.6, 126.0], [7.7, 126.0], [7.8, 126.0], [7.9, 126.0], [8.0, 130.0], [8.1, 130.0], [8.2, 130.0], [8.3, 130.0], [8.4, 130.0], [8.5, 131.0], [8.6, 131.0], [8.7, 131.0], [8.8, 131.0], [8.9, 131.0], [9.0, 138.0], [9.1, 138.0], [9.2, 138.0], [9.3, 138.0], [9.4, 138.0], [9.5, 143.0], [9.6, 143.0], [9.7, 143.0], [9.8, 143.0], [9.9, 143.0], [10.0, 143.0], [10.1, 143.0], [10.2, 143.0], [10.3, 143.0], [10.4, 143.0], [10.5, 144.0], [10.6, 144.0], [10.7, 144.0], [10.8, 144.0], [10.9, 144.0], [11.0, 152.0], [11.1, 152.0], [11.2, 152.0], [11.3, 152.0], [11.4, 152.0], [11.5, 160.0], [11.6, 160.0], [11.7, 160.0], [11.8, 160.0], [11.9, 160.0], [12.0, 164.0], [12.1, 164.0], [12.2, 164.0], [12.3, 164.0], [12.4, 164.0], [12.5, 167.0], [12.6, 167.0], [12.7, 167.0], [12.8, 167.0], [12.9, 167.0], [13.0, 192.0], [13.1, 192.0], [13.2, 192.0], [13.3, 192.0], [13.4, 192.0], [13.5, 204.0], [13.6, 204.0], [13.7, 204.0], [13.8, 204.0], [13.9, 204.0], [14.0, 206.0], [14.1, 206.0], [14.2, 206.0], [14.3, 206.0], [14.4, 206.0], [14.5, 282.0], [14.6, 282.0], [14.7, 282.0], [14.8, 282.0], [14.9, 282.0], [15.0, 298.0], [15.1, 298.0], [15.2, 298.0], [15.3, 298.0], [15.4, 298.0], [15.5, 298.0], [15.6, 298.0], [15.7, 298.0], [15.8, 298.0], [15.9, 298.0], [16.0, 310.0], [16.1, 310.0], [16.2, 310.0], [16.3, 310.0], [16.4, 310.0], [16.5, 352.0], [16.6, 352.0], [16.7, 352.0], [16.8, 352.0], [16.9, 352.0], [17.0, 396.0], [17.1, 396.0], [17.2, 396.0], [17.3, 396.0], [17.4, 396.0], [17.5, 402.0], [17.6, 402.0], [17.7, 402.0], [17.8, 402.0], [17.9, 402.0], [18.0, 408.0], [18.1, 408.0], [18.2, 408.0], [18.3, 408.0], [18.4, 408.0], [18.5, 417.0], [18.6, 417.0], [18.7, 417.0], [18.8, 417.0], [18.9, 417.0], [19.0, 460.0], [19.1, 460.0], [19.2, 460.0], [19.3, 460.0], [19.4, 460.0], [19.5, 498.0], [19.6, 498.0], [19.7, 498.0], [19.8, 498.0], [19.9, 498.0], [20.0, 504.0], [20.1, 504.0], [20.2, 504.0], [20.3, 504.0], [20.4, 504.0], [20.5, 509.0], [20.6, 509.0], [20.7, 509.0], [20.8, 509.0], [20.9, 509.0], [21.0, 535.0], [21.1, 535.0], [21.2, 535.0], [21.3, 535.0], [21.4, 535.0], [21.5, 535.0], [21.6, 535.0], [21.7, 535.0], [21.8, 535.0], [21.9, 535.0], [22.0, 556.0], [22.1, 556.0], [22.2, 556.0], [22.3, 556.0], [22.4, 556.0], [22.5, 581.0], [22.6, 581.0], [22.7, 581.0], [22.8, 581.0], [22.9, 581.0], [23.0, 587.0], [23.1, 587.0], [23.2, 587.0], [23.3, 587.0], [23.4, 587.0], [23.5, 587.0], [23.6, 587.0], [23.7, 587.0], [23.8, 587.0], [23.9, 587.0], [24.0, 594.0], [24.1, 594.0], [24.2, 594.0], [24.3, 594.0], [24.4, 594.0], [24.5, 600.0], [24.6, 600.0], [24.7, 600.0], [24.8, 600.0], [24.9, 600.0], [25.0, 633.0], [25.1, 633.0], [25.2, 633.0], [25.3, 633.0], [25.4, 633.0], [25.5, 658.0], [25.6, 658.0], [25.7, 658.0], [25.8, 658.0], [25.9, 658.0], [26.0, 658.0], [26.1, 658.0], [26.2, 658.0], [26.3, 658.0], [26.4, 658.0], [26.5, 666.0], [26.6, 666.0], [26.7, 666.0], [26.8, 666.0], [26.9, 666.0], [27.0, 666.0], [27.1, 666.0], [27.2, 666.0], [27.3, 666.0], [27.4, 666.0], [27.5, 678.0], [27.6, 678.0], [27.7, 678.0], [27.8, 678.0], [27.9, 678.0], [28.0, 682.0], [28.1, 682.0], [28.2, 682.0], [28.3, 682.0], [28.4, 682.0], [28.5, 698.0], [28.6, 698.0], [28.7, 698.0], [28.8, 698.0], [28.9, 698.0], [29.0, 718.0], [29.1, 718.0], [29.2, 718.0], [29.3, 718.0], [29.4, 718.0], [29.5, 721.0], [29.6, 721.0], [29.7, 721.0], [29.8, 721.0], [29.9, 721.0], [30.0, 728.0], [30.1, 728.0], [30.2, 728.0], [30.3, 728.0], [30.4, 728.0], [30.5, 743.0], [30.6, 743.0], [30.7, 743.0], [30.8, 743.0], [30.9, 743.0], [31.0, 759.0], [31.1, 759.0], [31.2, 759.0], [31.3, 759.0], [31.4, 759.0], [31.5, 769.0], [31.6, 769.0], [31.7, 769.0], [31.8, 769.0], [31.9, 769.0], [32.0, 771.0], [32.1, 771.0], [32.2, 771.0], [32.3, 771.0], [32.4, 771.0], [32.5, 780.0], [32.6, 780.0], [32.7, 780.0], [32.8, 780.0], [32.9, 780.0], [33.0, 847.0], [33.1, 847.0], [33.2, 847.0], [33.3, 847.0], [33.4, 847.0], [33.5, 868.0], [33.6, 868.0], [33.7, 868.0], [33.8, 868.0], [33.9, 868.0], [34.0, 870.0], [34.1, 870.0], [34.2, 870.0], [34.3, 870.0], [34.4, 870.0], [34.5, 870.0], [34.6, 870.0], [34.7, 870.0], [34.8, 870.0], [34.9, 870.0], [35.0, 893.0], [35.1, 893.0], [35.2, 893.0], [35.3, 893.0], [35.4, 893.0], [35.5, 949.0], [35.6, 949.0], [35.7, 949.0], [35.8, 949.0], [35.9, 949.0], [36.0, 951.0], [36.1, 951.0], [36.2, 951.0], [36.3, 951.0], [36.4, 951.0], [36.5, 972.0], [36.6, 972.0], [36.7, 972.0], [36.8, 972.0], [36.9, 972.0], [37.0, 986.0], [37.1, 986.0], [37.2, 986.0], [37.3, 986.0], [37.4, 986.0], [37.5, 988.0], [37.6, 988.0], [37.7, 988.0], [37.8, 988.0], [37.9, 988.0], [38.0, 1022.0], [38.1, 1022.0], [38.2, 1022.0], [38.3, 1022.0], [38.4, 1022.0], [38.5, 1030.0], [38.6, 1030.0], [38.7, 1030.0], [38.8, 1030.0], [38.9, 1030.0], [39.0, 1107.0], [39.1, 1107.0], [39.2, 1107.0], [39.3, 1107.0], [39.4, 1107.0], [39.5, 1135.0], [39.6, 1135.0], [39.7, 1135.0], [39.8, 1135.0], [39.9, 1135.0], [40.0, 1172.0], [40.1, 1172.0], [40.2, 1172.0], [40.3, 1172.0], [40.4, 1172.0], [40.5, 1175.0], [40.6, 1175.0], [40.7, 1175.0], [40.8, 1175.0], [40.9, 1175.0], [41.0, 1207.0], [41.1, 1207.0], [41.2, 1207.0], [41.3, 1207.0], [41.4, 1207.0], [41.5, 1242.0], [41.6, 1242.0], [41.7, 1242.0], [41.8, 1242.0], [41.9, 1242.0], [42.0, 1254.0], [42.1, 1254.0], [42.2, 1254.0], [42.3, 1254.0], [42.4, 1254.0], [42.5, 1255.0], [42.6, 1255.0], [42.7, 1255.0], [42.8, 1255.0], [42.9, 1255.0], [43.0, 1279.0], [43.1, 1279.0], [43.2, 1279.0], [43.3, 1279.0], [43.4, 1279.0], [43.5, 1303.0], [43.6, 1303.0], [43.7, 1303.0], [43.8, 1303.0], [43.9, 1303.0], [44.0, 1304.0], [44.1, 1304.0], [44.2, 1304.0], [44.3, 1304.0], [44.4, 1304.0], [44.5, 1363.0], [44.6, 1363.0], [44.7, 1363.0], [44.8, 1363.0], [44.9, 1363.0], [45.0, 1365.0], [45.1, 1365.0], [45.2, 1365.0], [45.3, 1365.0], [45.4, 1365.0], [45.5, 1408.0], [45.6, 1408.0], [45.7, 1408.0], [45.8, 1408.0], [45.9, 1408.0], [46.0, 1431.0], [46.1, 1431.0], [46.2, 1431.0], [46.3, 1431.0], [46.4, 1431.0], [46.5, 1442.0], [46.6, 1442.0], [46.7, 1442.0], [46.8, 1442.0], [46.9, 1442.0], [47.0, 1454.0], [47.1, 1454.0], [47.2, 1454.0], [47.3, 1454.0], [47.4, 1454.0], [47.5, 1458.0], [47.6, 1458.0], [47.7, 1458.0], [47.8, 1458.0], [47.9, 1458.0], [48.0, 1482.0], [48.1, 1482.0], [48.2, 1482.0], [48.3, 1482.0], [48.4, 1482.0], [48.5, 1533.0], [48.6, 1533.0], [48.7, 1533.0], [48.8, 1533.0], [48.9, 1533.0], [49.0, 1539.0], [49.1, 1539.0], [49.2, 1539.0], [49.3, 1539.0], [49.4, 1539.0], [49.5, 1540.0], [49.6, 1540.0], [49.7, 1540.0], [49.8, 1540.0], [49.9, 1540.0], [50.0, 1551.0], [50.1, 1551.0], [50.2, 1551.0], [50.3, 1551.0], [50.4, 1551.0], [50.5, 1620.0], [50.6, 1620.0], [50.7, 1620.0], [50.8, 1620.0], [50.9, 1620.0], [51.0, 1688.0], [51.1, 1688.0], [51.2, 1688.0], [51.3, 1688.0], [51.4, 1688.0], [51.5, 1709.0], [51.6, 1709.0], [51.7, 1709.0], [51.8, 1709.0], [51.9, 1709.0], [52.0, 1726.0], [52.1, 1726.0], [52.2, 1726.0], [52.3, 1726.0], [52.4, 1726.0], [52.5, 1728.0], [52.6, 1728.0], [52.7, 1728.0], [52.8, 1728.0], [52.9, 1728.0], [53.0, 1862.0], [53.1, 1862.0], [53.2, 1862.0], [53.3, 1862.0], [53.4, 1862.0], [53.5, 1886.0], [53.6, 1886.0], [53.7, 1886.0], [53.8, 1886.0], [53.9, 1886.0], [54.0, 1913.0], [54.1, 1913.0], [54.2, 1913.0], [54.3, 1913.0], [54.4, 1913.0], [54.5, 2023.0], [54.6, 2023.0], [54.7, 2023.0], [54.8, 2023.0], [54.9, 2023.0], [55.0, 2125.0], [55.1, 2125.0], [55.2, 2125.0], [55.3, 2125.0], [55.4, 2125.0], [55.5, 2129.0], [55.6, 2129.0], [55.7, 2129.0], [55.8, 2129.0], [55.9, 2129.0], [56.0, 2129.0], [56.1, 2129.0], [56.2, 2129.0], [56.3, 2129.0], [56.4, 2129.0], [56.5, 2151.0], [56.6, 2151.0], [56.7, 2151.0], [56.8, 2151.0], [56.9, 2151.0], [57.0, 2155.0], [57.1, 2155.0], [57.2, 2155.0], [57.3, 2155.0], [57.4, 2155.0], [57.5, 2161.0], [57.6, 2161.0], [57.7, 2161.0], [57.8, 2161.0], [57.9, 2161.0], [58.0, 2171.0], [58.1, 2171.0], [58.2, 2171.0], [58.3, 2171.0], [58.4, 2171.0], [58.5, 2191.0], [58.6, 2191.0], [58.7, 2191.0], [58.8, 2191.0], [58.9, 2191.0], [59.0, 2218.0], [59.1, 2218.0], [59.2, 2218.0], [59.3, 2218.0], [59.4, 2218.0], [59.5, 2246.0], [59.6, 2246.0], [59.7, 2246.0], [59.8, 2246.0], [59.9, 2246.0], [60.0, 2296.0], [60.1, 2296.0], [60.2, 2296.0], [60.3, 2296.0], [60.4, 2296.0], [60.5, 2387.0], [60.6, 2387.0], [60.7, 2387.0], [60.8, 2387.0], [60.9, 2387.0], [61.0, 2393.0], [61.1, 2393.0], [61.2, 2393.0], [61.3, 2393.0], [61.4, 2393.0], [61.5, 2441.0], [61.6, 2441.0], [61.7, 2441.0], [61.8, 2441.0], [61.9, 2441.0], [62.0, 2481.0], [62.1, 2481.0], [62.2, 2481.0], [62.3, 2481.0], [62.4, 2481.0], [62.5, 2527.0], [62.6, 2527.0], [62.7, 2527.0], [62.8, 2527.0], [62.9, 2527.0], [63.0, 2527.0], [63.1, 2527.0], [63.2, 2527.0], [63.3, 2527.0], [63.4, 2527.0], [63.5, 2594.0], [63.6, 2594.0], [63.7, 2594.0], [63.8, 2594.0], [63.9, 2594.0], [64.0, 2660.0], [64.1, 2660.0], [64.2, 2660.0], [64.3, 2660.0], [64.4, 2660.0], [64.5, 2667.0], [64.6, 2667.0], [64.7, 2667.0], [64.8, 2667.0], [64.9, 2667.0], [65.0, 2669.0], [65.1, 2669.0], [65.2, 2669.0], [65.3, 2669.0], [65.4, 2669.0], [65.5, 2686.0], [65.6, 2686.0], [65.7, 2686.0], [65.8, 2686.0], [65.9, 2686.0], [66.0, 2692.0], [66.1, 2692.0], [66.2, 2692.0], [66.3, 2692.0], [66.4, 2692.0], [66.5, 2730.0], [66.6, 2730.0], [66.7, 2730.0], [66.8, 2730.0], [66.9, 2730.0], [67.0, 2742.0], [67.1, 2742.0], [67.2, 2742.0], [67.3, 2742.0], [67.4, 2742.0], [67.5, 2783.0], [67.6, 2783.0], [67.7, 2783.0], [67.8, 2783.0], [67.9, 2783.0], [68.0, 2840.0], [68.1, 2840.0], [68.2, 2840.0], [68.3, 2840.0], [68.4, 2840.0], [68.5, 2852.0], [68.6, 2852.0], [68.7, 2852.0], [68.8, 2852.0], [68.9, 2852.0], [69.0, 2898.0], [69.1, 2898.0], [69.2, 2898.0], [69.3, 2898.0], [69.4, 2898.0], [69.5, 2950.0], [69.6, 2950.0], [69.7, 2950.0], [69.8, 2950.0], [69.9, 2950.0], [70.0, 2993.0], [70.1, 2993.0], [70.2, 2993.0], [70.3, 2993.0], [70.4, 2993.0], [70.5, 3032.0], [70.6, 3032.0], [70.7, 3032.0], [70.8, 3032.0], [70.9, 3032.0], [71.0, 3043.0], [71.1, 3043.0], [71.2, 3043.0], [71.3, 3043.0], [71.4, 3043.0], [71.5, 3102.0], [71.6, 3102.0], [71.7, 3102.0], [71.8, 3102.0], [71.9, 3102.0], [72.0, 3138.0], [72.1, 3138.0], [72.2, 3138.0], [72.3, 3138.0], [72.4, 3138.0], [72.5, 3142.0], [72.6, 3142.0], [72.7, 3142.0], [72.8, 3142.0], [72.9, 3142.0], [73.0, 3155.0], [73.1, 3155.0], [73.2, 3155.0], [73.3, 3155.0], [73.4, 3155.0], [73.5, 3165.0], [73.6, 3165.0], [73.7, 3165.0], [73.8, 3165.0], [73.9, 3165.0], [74.0, 3179.0], [74.1, 3179.0], [74.2, 3179.0], [74.3, 3179.0], [74.4, 3179.0], [74.5, 3180.0], [74.6, 3180.0], [74.7, 3180.0], [74.8, 3180.0], [74.9, 3180.0], [75.0, 3196.0], [75.1, 3196.0], [75.2, 3196.0], [75.3, 3196.0], [75.4, 3196.0], [75.5, 3224.0], [75.6, 3224.0], [75.7, 3224.0], [75.8, 3224.0], [75.9, 3224.0], [76.0, 3245.0], [76.1, 3245.0], [76.2, 3245.0], [76.3, 3245.0], [76.4, 3245.0], [76.5, 3279.0], [76.6, 3279.0], [76.7, 3279.0], [76.8, 3279.0], [76.9, 3279.0], [77.0, 3282.0], [77.1, 3282.0], [77.2, 3282.0], [77.3, 3282.0], [77.4, 3282.0], [77.5, 3302.0], [77.6, 3302.0], [77.7, 3302.0], [77.8, 3302.0], [77.9, 3302.0], [78.0, 3321.0], [78.1, 3321.0], [78.2, 3321.0], [78.3, 3321.0], [78.4, 3321.0], [78.5, 3328.0], [78.6, 3328.0], [78.7, 3328.0], [78.8, 3328.0], [78.9, 3328.0], [79.0, 3363.0], [79.1, 3363.0], [79.2, 3363.0], [79.3, 3363.0], [79.4, 3363.0], [79.5, 3400.0], [79.6, 3400.0], [79.7, 3400.0], [79.8, 3400.0], [79.9, 3400.0], [80.0, 3403.0], [80.1, 3403.0], [80.2, 3403.0], [80.3, 3403.0], [80.4, 3403.0], [80.5, 3445.0], [80.6, 3445.0], [80.7, 3445.0], [80.8, 3445.0], [80.9, 3445.0], [81.0, 3450.0], [81.1, 3450.0], [81.2, 3450.0], [81.3, 3450.0], [81.4, 3450.0], [81.5, 3475.0], [81.6, 3475.0], [81.7, 3475.0], [81.8, 3475.0], [81.9, 3475.0], [82.0, 3486.0], [82.1, 3486.0], [82.2, 3486.0], [82.3, 3486.0], [82.4, 3486.0], [82.5, 3487.0], [82.6, 3487.0], [82.7, 3487.0], [82.8, 3487.0], [82.9, 3487.0], [83.0, 3494.0], [83.1, 3494.0], [83.2, 3494.0], [83.3, 3494.0], [83.4, 3494.0], [83.5, 3510.0], [83.6, 3510.0], [83.7, 3510.0], [83.8, 3510.0], [83.9, 3510.0], [84.0, 3517.0], [84.1, 3517.0], [84.2, 3517.0], [84.3, 3517.0], [84.4, 3517.0], [84.5, 3519.0], [84.6, 3519.0], [84.7, 3519.0], [84.8, 3519.0], [84.9, 3519.0], [85.0, 3565.0], [85.1, 3565.0], [85.2, 3565.0], [85.3, 3565.0], [85.4, 3565.0], [85.5, 3575.0], [85.6, 3575.0], [85.7, 3575.0], [85.8, 3575.0], [85.9, 3575.0], [86.0, 3620.0], [86.1, 3620.0], [86.2, 3620.0], [86.3, 3620.0], [86.4, 3620.0], [86.5, 3637.0], [86.6, 3637.0], [86.7, 3637.0], [86.8, 3637.0], [86.9, 3637.0], [87.0, 3645.0], [87.1, 3645.0], [87.2, 3645.0], [87.3, 3645.0], [87.4, 3645.0], [87.5, 3702.0], [87.6, 3702.0], [87.7, 3702.0], [87.8, 3702.0], [87.9, 3702.0], [88.0, 3703.0], [88.1, 3703.0], [88.2, 3703.0], [88.3, 3703.0], [88.4, 3703.0], [88.5, 3743.0], [88.6, 3743.0], [88.7, 3743.0], [88.8, 3743.0], [88.9, 3743.0], [89.0, 3752.0], [89.1, 3752.0], [89.2, 3752.0], [89.3, 3752.0], [89.4, 3752.0], [89.5, 3792.0], [89.6, 3792.0], [89.7, 3792.0], [89.8, 3792.0], [89.9, 3792.0], [90.0, 3803.0], [90.1, 3803.0], [90.2, 3803.0], [90.3, 3803.0], [90.4, 3803.0], [90.5, 3820.0], [90.6, 3820.0], [90.7, 3820.0], [90.8, 3820.0], [90.9, 3820.0], [91.0, 3875.0], [91.1, 3875.0], [91.2, 3875.0], [91.3, 3875.0], [91.4, 3875.0], [91.5, 3891.0], [91.6, 3891.0], [91.7, 3891.0], [91.8, 3891.0], [91.9, 3891.0], [92.0, 3899.0], [92.1, 3899.0], [92.2, 3899.0], [92.3, 3899.0], [92.4, 3899.0], [92.5, 3900.0], [92.6, 3900.0], [92.7, 3900.0], [92.8, 3900.0], [92.9, 3900.0], [93.0, 4016.0], [93.1, 4016.0], [93.2, 4016.0], [93.3, 4016.0], [93.4, 4016.0], [93.5, 4028.0], [93.6, 4028.0], [93.7, 4028.0], [93.8, 4028.0], [93.9, 4028.0], [94.0, 4040.0], [94.1, 4040.0], [94.2, 4040.0], [94.3, 4040.0], [94.4, 4040.0], [94.5, 4120.0], [94.6, 4120.0], [94.7, 4120.0], [94.8, 4120.0], [94.9, 4120.0], [95.0, 4223.0], [95.1, 4223.0], [95.2, 4223.0], [95.3, 4223.0], [95.4, 4223.0], [95.5, 4243.0], [95.6, 4243.0], [95.7, 4243.0], [95.8, 4243.0], [95.9, 4243.0], [96.0, 4272.0], [96.1, 4272.0], [96.2, 4272.0], [96.3, 4272.0], [96.4, 4272.0], [96.5, 4290.0], [96.6, 4290.0], [96.7, 4290.0], [96.8, 4290.0], [96.9, 4290.0], [97.0, 4334.0], [97.1, 4334.0], [97.2, 4334.0], [97.3, 4334.0], [97.4, 4334.0], [97.5, 4357.0], [97.6, 4357.0], [97.7, 4357.0], [97.8, 4357.0], [97.9, 4357.0], [98.0, 4371.0], [98.1, 4371.0], [98.2, 4371.0], [98.3, 4371.0], [98.4, 4371.0], [98.5, 5015.0], [98.6, 5015.0], [98.7, 5015.0], [98.8, 5015.0], [98.9, 5015.0], [99.0, 5104.0], [99.1, 5104.0], [99.2, 5104.0], [99.3, 5104.0], [99.4, 5104.0], [99.5, 5108.0], [99.6, 5108.0], [99.7, 5108.0], [99.8, 5108.0], [99.9, 5108.0]], "isOverall": false, "label": "userAvatars", "isController": false}, {"data": [[0.0, 5573.0], [0.1, 5573.0], [0.2, 5573.0], [0.3, 5573.0], [0.4, 5573.0], [0.5, 5576.0], [0.6, 5576.0], [0.7, 5576.0], [0.8, 5576.0], [0.9, 5576.0], [1.0, 5605.0], [1.1, 5605.0], [1.2, 5605.0], [1.3, 5605.0], [1.4, 5605.0], [1.5, 5629.0], [1.6, 5629.0], [1.7, 5629.0], [1.8, 5629.0], [1.9, 5629.0], [2.0, 5682.0], [2.1, 5682.0], [2.2, 5682.0], [2.3, 5682.0], [2.4, 5682.0], [2.5, 5701.0], [2.6, 5701.0], [2.7, 5701.0], [2.8, 5701.0], [2.9, 5701.0], [3.0, 5770.0], [3.1, 5770.0], [3.2, 5770.0], [3.3, 5770.0], [3.4, 5770.0], [3.5, 5785.0], [3.6, 5785.0], [3.7, 5785.0], [3.8, 5785.0], [3.9, 5785.0], [4.0, 5797.0], [4.1, 5797.0], [4.2, 5797.0], [4.3, 5797.0], [4.4, 5797.0], [4.5, 5800.0], [4.6, 5800.0], [4.7, 5800.0], [4.8, 5800.0], [4.9, 5800.0], [5.0, 5822.0], [5.1, 5822.0], [5.2, 5822.0], [5.3, 5822.0], [5.4, 5822.0], [5.5, 5847.0], [5.6, 5847.0], [5.7, 5847.0], [5.8, 5847.0], [5.9, 5847.0], [6.0, 5886.0], [6.1, 5886.0], [6.2, 5886.0], [6.3, 5886.0], [6.4, 5886.0], [6.5, 5894.0], [6.6, 5894.0], [6.7, 5894.0], [6.8, 5894.0], [6.9, 5894.0], [7.0, 5909.0], [7.1, 5909.0], [7.2, 5909.0], [7.3, 5909.0], [7.4, 5909.0], [7.5, 5913.0], [7.6, 5913.0], [7.7, 5913.0], [7.8, 5913.0], [7.9, 5913.0], [8.0, 5915.0], [8.1, 5915.0], [8.2, 5915.0], [8.3, 5915.0], [8.4, 5915.0], [8.5, 5936.0], [8.6, 5936.0], [8.7, 5936.0], [8.8, 5936.0], [8.9, 5936.0], [9.0, 5937.0], [9.1, 5937.0], [9.2, 5937.0], [9.3, 5937.0], [9.4, 5937.0], [9.5, 5939.0], [9.6, 5939.0], [9.7, 5939.0], [9.8, 5939.0], [9.9, 5939.0], [10.0, 5940.0], [10.1, 5940.0], [10.2, 5940.0], [10.3, 5940.0], [10.4, 5940.0], [10.5, 5945.0], [10.6, 5945.0], [10.7, 5945.0], [10.8, 5945.0], [10.9, 5945.0], [11.0, 5950.0], [11.1, 5950.0], [11.2, 5950.0], [11.3, 5950.0], [11.4, 5950.0], [11.5, 5950.0], [11.6, 5950.0], [11.7, 5950.0], [11.8, 5950.0], [11.9, 5950.0], [12.0, 5984.0], [12.1, 5984.0], [12.2, 5984.0], [12.3, 5984.0], [12.4, 5984.0], [12.5, 6073.0], [12.6, 6073.0], [12.7, 6073.0], [12.8, 6073.0], [12.9, 6073.0], [13.0, 6080.0], [13.1, 6080.0], [13.2, 6080.0], [13.3, 6080.0], [13.4, 6080.0], [13.5, 6095.0], [13.6, 6095.0], [13.7, 6095.0], [13.8, 6095.0], [13.9, 6095.0], [14.0, 6134.0], [14.1, 6134.0], [14.2, 6134.0], [14.3, 6134.0], [14.4, 6134.0], [14.5, 6174.0], [14.6, 6174.0], [14.7, 6174.0], [14.8, 6174.0], [14.9, 6174.0], [15.0, 6205.0], [15.1, 6205.0], [15.2, 6205.0], [15.3, 6205.0], [15.4, 6205.0], [15.5, 6211.0], [15.6, 6211.0], [15.7, 6211.0], [15.8, 6211.0], [15.9, 6211.0], [16.0, 6327.0], [16.1, 6327.0], [16.2, 6327.0], [16.3, 6327.0], [16.4, 6327.0], [16.5, 6577.0], [16.6, 6577.0], [16.7, 6577.0], [16.8, 6577.0], [16.9, 6577.0], [17.0, 6726.0], [17.1, 6726.0], [17.2, 6726.0], [17.3, 6726.0], [17.4, 6726.0], [17.5, 6811.0], [17.6, 6811.0], [17.7, 6811.0], [17.8, 6811.0], [17.9, 6811.0], [18.0, 6835.0], [18.1, 6835.0], [18.2, 6835.0], [18.3, 6835.0], [18.4, 6835.0], [18.5, 6876.0], [18.6, 6876.0], [18.7, 6876.0], [18.8, 6876.0], [18.9, 6876.0], [19.0, 6967.0], [19.1, 6967.0], [19.2, 6967.0], [19.3, 6967.0], [19.4, 6967.0], [19.5, 7522.0], [19.6, 7522.0], [19.7, 7522.0], [19.8, 7522.0], [19.9, 7522.0], [20.0, 7689.0], [20.1, 7689.0], [20.2, 7689.0], [20.3, 7689.0], [20.4, 7689.0], [20.5, 7706.0], [20.6, 7706.0], [20.7, 7706.0], [20.8, 7706.0], [20.9, 7706.0], [21.0, 7869.0], [21.1, 7869.0], [21.2, 7869.0], [21.3, 7869.0], [21.4, 7869.0], [21.5, 7910.0], [21.6, 7910.0], [21.7, 7910.0], [21.8, 7910.0], [21.9, 7910.0], [22.0, 7932.0], [22.1, 7932.0], [22.2, 7932.0], [22.3, 7932.0], [22.4, 7932.0], [22.5, 7950.0], [22.6, 7950.0], [22.7, 7950.0], [22.8, 7950.0], [22.9, 7950.0], [23.0, 7956.0], [23.1, 7956.0], [23.2, 7956.0], [23.3, 7956.0], [23.4, 7956.0], [23.5, 7968.0], [23.6, 7968.0], [23.7, 7968.0], [23.8, 7968.0], [23.9, 7968.0], [24.0, 7979.0], [24.1, 7979.0], [24.2, 7979.0], [24.3, 7979.0], [24.4, 7979.0], [24.5, 8000.0], [24.6, 8000.0], [24.7, 8000.0], [24.8, 8000.0], [24.9, 8000.0], [25.0, 8029.0], [25.1, 8029.0], [25.2, 8029.0], [25.3, 8029.0], [25.4, 8029.0], [25.5, 8039.0], [25.6, 8039.0], [25.7, 8039.0], [25.8, 8039.0], [25.9, 8039.0], [26.0, 8040.0], [26.1, 8040.0], [26.2, 8040.0], [26.3, 8040.0], [26.4, 8040.0], [26.5, 8048.0], [26.6, 8048.0], [26.7, 8048.0], [26.8, 8048.0], [26.9, 8048.0], [27.0, 8075.0], [27.1, 8075.0], [27.2, 8075.0], [27.3, 8075.0], [27.4, 8075.0], [27.5, 8102.0], [27.6, 8102.0], [27.7, 8102.0], [27.8, 8102.0], [27.9, 8102.0], [28.0, 8128.0], [28.1, 8128.0], [28.2, 8128.0], [28.3, 8128.0], [28.4, 8128.0], [28.5, 8144.0], [28.6, 8144.0], [28.7, 8144.0], [28.8, 8144.0], [28.9, 8144.0], [29.0, 8207.0], [29.1, 8207.0], [29.2, 8207.0], [29.3, 8207.0], [29.4, 8207.0], [29.5, 8244.0], [29.6, 8244.0], [29.7, 8244.0], [29.8, 8244.0], [29.9, 8244.0], [30.0, 8272.0], [30.1, 8272.0], [30.2, 8272.0], [30.3, 8272.0], [30.4, 8272.0], [30.5, 8418.0], [30.6, 8418.0], [30.7, 8418.0], [30.8, 8418.0], [30.9, 8418.0], [31.0, 8751.0], [31.1, 8751.0], [31.2, 8751.0], [31.3, 8751.0], [31.4, 8751.0], [31.5, 9681.0], [31.6, 9681.0], [31.7, 9681.0], [31.8, 9681.0], [31.9, 9681.0], [32.0, 10055.0], [32.1, 10055.0], [32.2, 10055.0], [32.3, 10055.0], [32.4, 10055.0], [32.5, 10070.0], [32.6, 10070.0], [32.7, 10070.0], [32.8, 10070.0], [32.9, 10070.0], [33.0, 10151.0], [33.1, 10151.0], [33.2, 10151.0], [33.3, 10151.0], [33.4, 10151.0], [33.5, 10190.0], [33.6, 10190.0], [33.7, 10190.0], [33.8, 10190.0], [33.9, 10190.0], [34.0, 10201.0], [34.1, 10201.0], [34.2, 10201.0], [34.3, 10201.0], [34.4, 10201.0], [34.5, 10227.0], [34.6, 10227.0], [34.7, 10227.0], [34.8, 10227.0], [34.9, 10227.0], [35.0, 10233.0], [35.1, 10233.0], [35.2, 10233.0], [35.3, 10233.0], [35.4, 10233.0], [35.5, 10361.0], [35.6, 10361.0], [35.7, 10361.0], [35.8, 10361.0], [35.9, 10361.0], [36.0, 10441.0], [36.1, 10441.0], [36.2, 10441.0], [36.3, 10441.0], [36.4, 10441.0], [36.5, 10513.0], [36.6, 10513.0], [36.7, 10513.0], [36.8, 10513.0], [36.9, 10513.0], [37.0, 10682.0], [37.1, 10682.0], [37.2, 10682.0], [37.3, 10682.0], [37.4, 10682.0], [37.5, 10720.0], [37.6, 10720.0], [37.7, 10720.0], [37.8, 10720.0], [37.9, 10720.0], [38.0, 10762.0], [38.1, 10762.0], [38.2, 10762.0], [38.3, 10762.0], [38.4, 10762.0], [38.5, 10778.0], [38.6, 10778.0], [38.7, 10778.0], [38.8, 10778.0], [38.9, 10778.0], [39.0, 10887.0], [39.1, 10887.0], [39.2, 10887.0], [39.3, 10887.0], [39.4, 10887.0], [39.5, 10909.0], [39.6, 10909.0], [39.7, 10909.0], [39.8, 10909.0], [39.9, 10909.0], [40.0, 10939.0], [40.1, 10939.0], [40.2, 10939.0], [40.3, 10939.0], [40.4, 10939.0], [40.5, 11102.0], [40.6, 11102.0], [40.7, 11102.0], [40.8, 11102.0], [40.9, 11102.0], [41.0, 11130.0], [41.1, 11130.0], [41.2, 11130.0], [41.3, 11130.0], [41.4, 11130.0], [41.5, 11211.0], [41.6, 11211.0], [41.7, 11211.0], [41.8, 11211.0], [41.9, 11211.0], [42.0, 11232.0], [42.1, 11232.0], [42.2, 11232.0], [42.3, 11232.0], [42.4, 11232.0], [42.5, 11496.0], [42.6, 11496.0], [42.7, 11496.0], [42.8, 11496.0], [42.9, 11496.0], [43.0, 11951.0], [43.1, 11951.0], [43.2, 11951.0], [43.3, 11951.0], [43.4, 11951.0], [43.5, 12160.0], [43.6, 12160.0], [43.7, 12160.0], [43.8, 12160.0], [43.9, 12160.0], [44.0, 12826.0], [44.1, 12826.0], [44.2, 12826.0], [44.3, 12826.0], [44.4, 12826.0], [44.5, 12833.0], [44.6, 12833.0], [44.7, 12833.0], [44.8, 12833.0], [44.9, 12833.0], [45.0, 13350.0], [45.1, 13350.0], [45.2, 13350.0], [45.3, 13350.0], [45.4, 13350.0], [45.5, 13935.0], [45.6, 13935.0], [45.7, 13935.0], [45.8, 13935.0], [45.9, 13935.0], [46.0, 14798.0], [46.1, 14798.0], [46.2, 14798.0], [46.3, 14798.0], [46.4, 14798.0], [46.5, 14866.0], [46.6, 14866.0], [46.7, 14866.0], [46.8, 14866.0], [46.9, 14866.0], [47.0, 15033.0], [47.1, 15033.0], [47.2, 15033.0], [47.3, 15033.0], [47.4, 15033.0], [47.5, 15048.0], [47.6, 15048.0], [47.7, 15048.0], [47.8, 15048.0], [47.9, 15048.0], [48.0, 15183.0], [48.1, 15183.0], [48.2, 15183.0], [48.3, 15183.0], [48.4, 15183.0], [48.5, 15213.0], [48.6, 15213.0], [48.7, 15213.0], [48.8, 15213.0], [48.9, 15213.0], [49.0, 15391.0], [49.1, 15391.0], [49.2, 15391.0], [49.3, 15391.0], [49.4, 15391.0], [49.5, 15499.0], [49.6, 15499.0], [49.7, 15499.0], [49.8, 15499.0], [49.9, 15499.0], [50.0, 15516.0], [50.1, 15516.0], [50.2, 15516.0], [50.3, 15516.0], [50.4, 15516.0], [50.5, 15559.0], [50.6, 15559.0], [50.7, 15559.0], [50.8, 15559.0], [50.9, 15559.0], [51.0, 15573.0], [51.1, 15573.0], [51.2, 15573.0], [51.3, 15573.0], [51.4, 15573.0], [51.5, 15714.0], [51.6, 15714.0], [51.7, 15714.0], [51.8, 15714.0], [51.9, 15714.0], [52.0, 15728.0], [52.1, 15728.0], [52.2, 15728.0], [52.3, 15728.0], [52.4, 15728.0], [52.5, 15755.0], [52.6, 15755.0], [52.7, 15755.0], [52.8, 15755.0], [52.9, 15755.0], [53.0, 15904.0], [53.1, 15904.0], [53.2, 15904.0], [53.3, 15904.0], [53.4, 15904.0], [53.5, 16112.0], [53.6, 16112.0], [53.7, 16112.0], [53.8, 16112.0], [53.9, 16112.0], [54.0, 16202.0], [54.1, 16202.0], [54.2, 16202.0], [54.3, 16202.0], [54.4, 16202.0], [54.5, 16209.0], [54.6, 16209.0], [54.7, 16209.0], [54.8, 16209.0], [54.9, 16209.0], [55.0, 16217.0], [55.1, 16217.0], [55.2, 16217.0], [55.3, 16217.0], [55.4, 16217.0], [55.5, 16222.0], [55.6, 16222.0], [55.7, 16222.0], [55.8, 16222.0], [55.9, 16222.0], [56.0, 16227.0], [56.1, 16227.0], [56.2, 16227.0], [56.3, 16227.0], [56.4, 16227.0], [56.5, 16253.0], [56.6, 16253.0], [56.7, 16253.0], [56.8, 16253.0], [56.9, 16253.0], [57.0, 16266.0], [57.1, 16266.0], [57.2, 16266.0], [57.3, 16266.0], [57.4, 16266.0], [57.5, 16281.0], [57.6, 16281.0], [57.7, 16281.0], [57.8, 16281.0], [57.9, 16281.0], [58.0, 16635.0], [58.1, 16635.0], [58.2, 16635.0], [58.3, 16635.0], [58.4, 16635.0], [58.5, 16649.0], [58.6, 16649.0], [58.7, 16649.0], [58.8, 16649.0], [58.9, 16649.0], [59.0, 16660.0], [59.1, 16660.0], [59.2, 16660.0], [59.3, 16660.0], [59.4, 16660.0], [59.5, 16669.0], [59.6, 16669.0], [59.7, 16669.0], [59.8, 16669.0], [59.9, 16669.0], [60.0, 16671.0], [60.1, 16671.0], [60.2, 16671.0], [60.3, 16671.0], [60.4, 16671.0], [60.5, 16695.0], [60.6, 16695.0], [60.7, 16695.0], [60.8, 16695.0], [60.9, 16695.0], [61.0, 16758.0], [61.1, 16758.0], [61.2, 16758.0], [61.3, 16758.0], [61.4, 16758.0], [61.5, 16763.0], [61.6, 16763.0], [61.7, 16763.0], [61.8, 16763.0], [61.9, 16763.0], [62.0, 16783.0], [62.1, 16783.0], [62.2, 16783.0], [62.3, 16783.0], [62.4, 16783.0], [62.5, 16806.0], [62.6, 16806.0], [62.7, 16806.0], [62.8, 16806.0], [62.9, 16806.0], [63.0, 16921.0], [63.1, 16921.0], [63.2, 16921.0], [63.3, 16921.0], [63.4, 16921.0], [63.5, 17050.0], [63.6, 17050.0], [63.7, 17050.0], [63.8, 17050.0], [63.9, 17050.0], [64.0, 17223.0], [64.1, 17223.0], [64.2, 17223.0], [64.3, 17223.0], [64.4, 17223.0], [64.5, 17226.0], [64.6, 17226.0], [64.7, 17226.0], [64.8, 17226.0], [64.9, 17226.0], [65.0, 17554.0], [65.1, 17554.0], [65.2, 17554.0], [65.3, 17554.0], [65.4, 17554.0], [65.5, 17636.0], [65.6, 17636.0], [65.7, 17636.0], [65.8, 17636.0], [65.9, 17636.0], [66.0, 17699.0], [66.1, 17699.0], [66.2, 17699.0], [66.3, 17699.0], [66.4, 17699.0], [66.5, 17703.0], [66.6, 17703.0], [66.7, 17703.0], [66.8, 17703.0], [66.9, 17703.0], [67.0, 17735.0], [67.1, 17735.0], [67.2, 17735.0], [67.3, 17735.0], [67.4, 17735.0], [67.5, 17754.0], [67.6, 17754.0], [67.7, 17754.0], [67.8, 17754.0], [67.9, 17754.0], [68.0, 20816.0], [68.1, 20816.0], [68.2, 20816.0], [68.3, 20816.0], [68.4, 20816.0], [68.5, 20886.0], [68.6, 20886.0], [68.7, 20886.0], [68.8, 20886.0], [68.9, 20886.0], [69.0, 20888.0], [69.1, 20888.0], [69.2, 20888.0], [69.3, 20888.0], [69.4, 20888.0], [69.5, 20923.0], [69.6, 20923.0], [69.7, 20923.0], [69.8, 20923.0], [69.9, 20923.0], [70.0, 20992.0], [70.1, 20992.0], [70.2, 20992.0], [70.3, 20992.0], [70.4, 20992.0], [70.5, 20993.0], [70.6, 20993.0], [70.7, 20993.0], [70.8, 20993.0], [70.9, 20993.0], [71.0, 21160.0], [71.1, 21160.0], [71.2, 21160.0], [71.3, 21160.0], [71.4, 21160.0], [71.5, 21279.0], [71.6, 21279.0], [71.7, 21279.0], [71.8, 21279.0], [71.9, 21279.0], [72.0, 21301.0], [72.1, 21301.0], [72.2, 21301.0], [72.3, 21301.0], [72.4, 21301.0], [72.5, 21302.0], [72.6, 21302.0], [72.7, 21302.0], [72.8, 21302.0], [72.9, 21302.0], [73.0, 21307.0], [73.1, 21307.0], [73.2, 21307.0], [73.3, 21307.0], [73.4, 21307.0], [73.5, 21627.0], [73.6, 21627.0], [73.7, 21627.0], [73.8, 21627.0], [73.9, 21627.0], [74.0, 21672.0], [74.1, 21672.0], [74.2, 21672.0], [74.3, 21672.0], [74.4, 21672.0], [74.5, 21700.0], [74.6, 21700.0], [74.7, 21700.0], [74.8, 21700.0], [74.9, 21700.0], [75.0, 21700.0], [75.1, 21700.0], [75.2, 21700.0], [75.3, 21700.0], [75.4, 21700.0], [75.5, 21716.0], [75.6, 21716.0], [75.7, 21716.0], [75.8, 21716.0], [75.9, 21716.0], [76.0, 25041.0], [76.1, 25041.0], [76.2, 25041.0], [76.3, 25041.0], [76.4, 25041.0], [76.5, 25046.0], [76.6, 25046.0], [76.7, 25046.0], [76.8, 25046.0], [76.9, 25046.0], [77.0, 25070.0], [77.1, 25070.0], [77.2, 25070.0], [77.3, 25070.0], [77.4, 25070.0], [77.5, 25204.0], [77.6, 25204.0], [77.7, 25204.0], [77.8, 25204.0], [77.9, 25204.0], [78.0, 25273.0], [78.1, 25273.0], [78.2, 25273.0], [78.3, 25273.0], [78.4, 25273.0], [78.5, 25454.0], [78.6, 25454.0], [78.7, 25454.0], [78.8, 25454.0], [78.9, 25454.0], [79.0, 25523.0], [79.1, 25523.0], [79.2, 25523.0], [79.3, 25523.0], [79.4, 25523.0], [79.5, 25622.0], [79.6, 25622.0], [79.7, 25622.0], [79.8, 25622.0], [79.9, 25622.0], [80.0, 25774.0], [80.1, 25774.0], [80.2, 25774.0], [80.3, 25774.0], [80.4, 25774.0], [80.5, 26041.0], [80.6, 26041.0], [80.7, 26041.0], [80.8, 26041.0], [80.9, 26041.0], [81.0, 32469.0], [81.1, 32469.0], [81.2, 32469.0], [81.3, 32469.0], [81.4, 32469.0], [81.5, 32476.0], [81.6, 32476.0], [81.7, 32476.0], [81.8, 32476.0], [81.9, 32476.0], [82.0, 32500.0], [82.1, 32500.0], [82.2, 32500.0], [82.3, 32500.0], [82.4, 32500.0], [82.5, 32674.0], [82.6, 32674.0], [82.7, 32674.0], [82.8, 32674.0], [82.9, 32674.0], [83.0, 32694.0], [83.1, 32694.0], [83.2, 32694.0], [83.3, 32694.0], [83.4, 32694.0], [83.5, 32718.0], [83.6, 32718.0], [83.7, 32718.0], [83.8, 32718.0], [83.9, 32718.0], [84.0, 32727.0], [84.1, 32727.0], [84.2, 32727.0], [84.3, 32727.0], [84.4, 32727.0], [84.5, 32751.0], [84.6, 32751.0], [84.7, 32751.0], [84.8, 32751.0], [84.9, 32751.0], [85.0, 32753.0], [85.1, 32753.0], [85.2, 32753.0], [85.3, 32753.0], [85.4, 32753.0], [85.5, 32789.0], [85.6, 32789.0], [85.7, 32789.0], [85.8, 32789.0], [85.9, 32789.0], [86.0, 32807.0], [86.1, 32807.0], [86.2, 32807.0], [86.3, 32807.0], [86.4, 32807.0], [86.5, 32830.0], [86.6, 32830.0], [86.7, 32830.0], [86.8, 32830.0], [86.9, 32830.0], [87.0, 32928.0], [87.1, 32928.0], [87.2, 32928.0], [87.3, 32928.0], [87.4, 32928.0], [87.5, 32971.0], [87.6, 32971.0], [87.7, 32971.0], [87.8, 32971.0], [87.9, 32971.0], [88.0, 32988.0], [88.1, 32988.0], [88.2, 32988.0], [88.3, 32988.0], [88.4, 32988.0], [88.5, 33007.0], [88.6, 33007.0], [88.7, 33007.0], [88.8, 33007.0], [88.9, 33007.0], [89.0, 33008.0], [89.1, 33008.0], [89.2, 33008.0], [89.3, 33008.0], [89.4, 33008.0], [89.5, 33017.0], [89.6, 33017.0], [89.7, 33017.0], [89.8, 33017.0], [89.9, 33017.0], [90.0, 33018.0], [90.1, 33018.0], [90.2, 33018.0], [90.3, 33018.0], [90.4, 33018.0], [90.5, 33030.0], [90.6, 33030.0], [90.7, 33030.0], [90.8, 33030.0], [90.9, 33030.0], [91.0, 33365.0], [91.1, 33365.0], [91.2, 33365.0], [91.3, 33365.0], [91.4, 33365.0], [91.5, 33377.0], [91.6, 33377.0], [91.7, 33377.0], [91.8, 33377.0], [91.9, 33377.0], [92.0, 33380.0], [92.1, 33380.0], [92.2, 33380.0], [92.3, 33380.0], [92.4, 33380.0], [92.5, 33423.0], [92.6, 33423.0], [92.7, 33423.0], [92.8, 33423.0], [92.9, 33423.0], [93.0, 33443.0], [93.1, 33443.0], [93.2, 33443.0], [93.3, 33443.0], [93.4, 33443.0], [93.5, 33459.0], [93.6, 33459.0], [93.7, 33459.0], [93.8, 33459.0], [93.9, 33459.0], [94.0, 33471.0], [94.1, 33471.0], [94.2, 33471.0], [94.3, 33471.0], [94.4, 33471.0], [94.5, 33558.0], [94.6, 33558.0], [94.7, 33558.0], [94.8, 33558.0], [94.9, 33558.0], [95.0, 33634.0], [95.1, 33634.0], [95.2, 33634.0], [95.3, 33634.0], [95.4, 33634.0], [95.5, 33645.0], [95.6, 33645.0], [95.7, 33645.0], [95.8, 33645.0], [95.9, 33645.0], [96.0, 33658.0], [96.1, 33658.0], [96.2, 33658.0], [96.3, 33658.0], [96.4, 33658.0], [96.5, 33678.0], [96.6, 33678.0], [96.7, 33678.0], [96.8, 33678.0], [96.9, 33678.0], [97.0, 33886.0], [97.1, 33886.0], [97.2, 33886.0], [97.3, 33886.0], [97.4, 33886.0], [97.5, 35368.0], [97.6, 35368.0], [97.7, 35368.0], [97.8, 35368.0], [97.9, 35368.0], [98.0, 35397.0], [98.1, 35397.0], [98.2, 35397.0], [98.3, 35397.0], [98.4, 35397.0], [98.5, 35400.0], [98.6, 35400.0], [98.7, 35400.0], [98.8, 35400.0], [98.9, 35400.0], [99.0, 35426.0], [99.1, 35426.0], [99.2, 35426.0], [99.3, 35426.0], [99.4, 35426.0], [99.5, 35465.0], [99.6, 35465.0], [99.7, 35465.0], [99.8, 35465.0], [99.9, 35465.0]], "isOverall": false, "label": "opportunityUserIds", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 64.0, "series": [{"data": [[0.0, 24.0], [600.0, 1.0], [800.0, 4.0], [900.0, 3.0], [1000.0, 3.0], [1100.0, 4.0], [1200.0, 4.0], [1400.0, 3.0], [1500.0, 1.0], [1600.0, 3.0], [1700.0, 2.0], [1800.0, 2.0], [1900.0, 1.0], [2000.0, 3.0], [2200.0, 1.0], [2600.0, 1.0], [2800.0, 1.0], [2700.0, 1.0], [3000.0, 1.0], [3100.0, 1.0], [3300.0, 1.0], [3600.0, 1.0], [4000.0, 2.0], [4200.0, 1.0], [4100.0, 1.0], [4500.0, 3.0], [4400.0, 1.0], [4700.0, 1.0], [5000.0, 1.0], [4900.0, 1.0], [5300.0, 1.0], [5200.0, 1.0], [5600.0, 1.0], [5700.0, 1.0], [6000.0, 3.0], [6100.0, 1.0], [5900.0, 2.0], [6200.0, 3.0], [6300.0, 1.0], [6400.0, 3.0], [6600.0, 1.0], [6500.0, 1.0], [6800.0, 1.0], [7000.0, 1.0], [7100.0, 1.0], [7300.0, 5.0], [7400.0, 3.0], [7600.0, 2.0], [7500.0, 2.0], [7700.0, 1.0], [7900.0, 3.0], [8000.0, 2.0], [8100.0, 1.0], [8500.0, 2.0], [8300.0, 4.0], [8600.0, 2.0], [8700.0, 3.0], [8200.0, 1.0], [8800.0, 2.0], [9200.0, 4.0], [9100.0, 2.0], [9500.0, 3.0], [9400.0, 2.0], [9300.0, 1.0], [10200.0, 2.0], [10100.0, 1.0], [9800.0, 2.0], [9900.0, 2.0], [12000.0, 2.0], [12400.0, 1.0], [12500.0, 1.0], [100.0, 11.0], [200.0, 20.0], [300.0, 5.0], [400.0, 5.0], [500.0, 4.0]], "isOverall": false, "label": "opportunityProfile", "isController": false}, {"data": [[0.0, 64.0], [600.0, 5.0], [700.0, 3.0], [200.0, 35.0], [900.0, 4.0], [1000.0, 2.0], [300.0, 11.0], [1200.0, 1.0], [1400.0, 1.0], [1500.0, 1.0], [100.0, 52.0], [1600.0, 1.0], [400.0, 9.0], [500.0, 11.0]], "isOverall": false, "label": "opportunityTemplate ", "isController": false}, {"data": [[600.0, 9.0], [700.0, 8.0], [800.0, 5.0], [900.0, 5.0], [1000.0, 2.0], [1100.0, 4.0], [1200.0, 5.0], [1300.0, 4.0], [1400.0, 6.0], [1500.0, 4.0], [100.0, 27.0], [1600.0, 2.0], [1700.0, 3.0], [1800.0, 2.0], [1900.0, 1.0], [2000.0, 1.0], [2100.0, 8.0], [2300.0, 2.0], [2200.0, 3.0], [2400.0, 2.0], [2500.0, 3.0], [2600.0, 5.0], [2800.0, 3.0], [2700.0, 3.0], [2900.0, 2.0], [3000.0, 2.0], [3100.0, 8.0], [200.0, 5.0], [3200.0, 4.0], [3300.0, 4.0], [3400.0, 8.0], [3500.0, 5.0], [3700.0, 5.0], [3600.0, 3.0], [3800.0, 5.0], [3900.0, 1.0], [4000.0, 3.0], [4200.0, 4.0], [4300.0, 3.0], [4100.0, 1.0], [300.0, 3.0], [5000.0, 1.0], [5100.0, 2.0], [400.0, 5.0], [500.0, 9.0]], "isOverall": false, "label": "userAvatars", "isController": false}, {"data": [[5500.0, 2.0], [5600.0, 3.0], [5700.0, 4.0], [5800.0, 5.0], [5900.0, 11.0], [6000.0, 3.0], [6100.0, 2.0], [6200.0, 2.0], [6300.0, 1.0], [6500.0, 1.0], [6700.0, 1.0], [6900.0, 1.0], [6800.0, 3.0], [7600.0, 1.0], [7500.0, 1.0], [7700.0, 1.0], [7800.0, 1.0], [7900.0, 6.0], [8000.0, 6.0], [8100.0, 3.0], [8200.0, 3.0], [8400.0, 1.0], [8700.0, 1.0], [9600.0, 1.0], [10000.0, 2.0], [10100.0, 2.0], [10200.0, 3.0], [10300.0, 1.0], [10400.0, 1.0], [10500.0, 1.0], [10700.0, 3.0], [10600.0, 1.0], [10800.0, 1.0], [10900.0, 2.0], [11100.0, 2.0], [11200.0, 2.0], [11400.0, 1.0], [11900.0, 1.0], [12100.0, 1.0], [12800.0, 2.0], [13300.0, 1.0], [13900.0, 1.0], [14700.0, 1.0], [14800.0, 1.0], [15100.0, 1.0], [15200.0, 1.0], [15000.0, 2.0], [15300.0, 1.0], [15500.0, 3.0], [15400.0, 1.0], [15700.0, 3.0], [15900.0, 1.0], [16100.0, 1.0], [16200.0, 8.0], [16600.0, 6.0], [16700.0, 3.0], [16800.0, 1.0], [16900.0, 1.0], [17200.0, 2.0], [17000.0, 1.0], [17600.0, 2.0], [17700.0, 3.0], [17500.0, 1.0], [20800.0, 3.0], [20900.0, 3.0], [21100.0, 1.0], [21300.0, 3.0], [21200.0, 1.0], [21600.0, 2.0], [21700.0, 3.0], [25000.0, 3.0], [25200.0, 2.0], [25400.0, 1.0], [25500.0, 1.0], [25600.0, 1.0], [25700.0, 1.0], [26000.0, 1.0], [32400.0, 2.0], [32500.0, 1.0], [32600.0, 2.0], [32700.0, 5.0], [32800.0, 2.0], [32900.0, 3.0], [33000.0, 5.0], [33300.0, 3.0], [33400.0, 4.0], [33600.0, 4.0], [33500.0, 1.0], [33800.0, 1.0], [35300.0, 2.0], [35400.0, 3.0]], "isOverall": false, "label": "opportunityUserIds", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 35400.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 4.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 410.0, "series": [{"data": [[0.0, 276.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 110.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 410.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 4.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 119.54625000000007, "minX": 1.61959968E12, "maxY": 119.54625000000007, "series": [{"data": [[1.61959968E12, 119.54625000000007]], "isOverall": false, "label": "CT Benchmark:  Queries - Opportunity page", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61959968E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 52.0, "minX": 1.0, "maxY": 35465.0, "series": [{"data": [[2.0, 912.5], [3.0, 2699.0], [6.0, 2092.3333333333335], [9.0, 3020.0], [11.0, 988.25], [12.0, 230.0], [14.0, 1232.0], [15.0, 2265.0], [17.0, 1223.3333333333333], [21.0, 1672.0], [22.0, 1589.0], [23.0, 1877.0], [26.0, 1880.0], [27.0, 1857.0], [28.0, 1149.0], [29.0, 88.0], [35.0, 335.3333333333333], [34.0, 248.0], [38.0, 288.6666666666667], [41.0, 1144.0], [43.0, 1258.5], [46.0, 2002.0], [48.0, 7349.0], [50.0, 8018.0], [53.0, 7717.0], [55.0, 5784.0], [56.0, 7189.0], [61.0, 5292.666666666667], [60.0, 6344.0], [67.0, 3552.5], [66.0, 2825.0], [71.0, 287.0], [75.0, 7023.2], [74.0, 8306.5], [72.0, 9468.0], [79.0, 9332.666666666666], [77.0, 4582.0], [83.0, 9247.0], [82.0, 2615.0], [81.0, 8555.0], [87.0, 4620.5], [85.0, 9251.0], [91.0, 2837.3333333333335], [90.0, 102.0], [93.0, 99.0], [99.0, 10037.0], [98.0, 9361.0], [97.0, 98.0], [96.0, 9223.0], [103.0, 5185.0], [101.0, 10184.0], [107.0, 12494.0], [106.0, 10512.666666666666], [104.0, 108.0], [111.0, 87.0], [110.0, 12063.0], [109.0, 233.0], [114.0, 287.0], [112.0, 268.0], [117.0, 302.0], [121.0, 4059.8], [120.0, 332.5], [126.0, 5203.0], [125.0, 5209.0], [135.0, 2186.75], [134.0, 879.5], [132.0, 3415.5], [128.0, 5914.0], [142.0, 6069.0], [138.0, 6399.0], [147.0, 6798.0], [158.0, 7668.5], [157.0, 7394.8], [156.0, 6648.5], [155.0, 6849.0], [167.0, 96.5], [166.0, 8500.0], [164.0, 8336.0], [163.0, 5564.666666666667], [162.0, 6934.0], [174.0, 197.0], [173.0, 135.33333333333334], [171.0, 91.0], [169.0, 99.0], [182.0, 88.0], [181.0, 112.0], [180.0, 247.0], [179.0, 90.0], [178.0, 249.0], [177.0, 235.5], [189.0, 84.0], [185.0, 97.0], [198.0, 772.3333333333334], [197.0, 280.0], [196.0, 279.0], [195.0, 101.5], [194.0, 87.5], [192.0, 88.0], [200.0, 1045.75]], "isOverall": false, "label": "opportunityProfile", "isController": false}, {"data": [[103.16499999999994, 3836.355000000001]], "isOverall": false, "label": "opportunityProfile-Aggregated", "isController": false}, {"data": [[2.0, 55.0], [3.0, 56.0], [4.0, 61.0], [5.0, 91.0], [6.0, 58.0], [7.0, 158.0], [8.0, 53.0], [9.0, 86.0], [10.0, 101.0], [11.0, 55.0], [12.0, 54.0], [13.0, 263.0], [14.0, 80.0], [15.0, 157.0], [16.0, 77.0], [17.0, 55.0], [18.0, 170.0], [19.0, 261.0], [20.0, 146.0], [21.0, 186.0], [22.0, 54.0], [23.0, 54.0], [24.0, 162.0], [25.0, 190.0], [26.0, 55.0], [27.0, 270.0], [28.0, 65.0], [29.0, 265.0], [30.0, 504.0], [31.0, 569.0], [33.0, 362.0], [32.0, 291.0], [35.0, 58.0], [34.0, 57.0], [37.0, 205.0], [36.0, 412.0], [39.0, 56.0], [38.0, 103.0], [41.0, 55.0], [40.0, 55.0], [43.0, 52.0], [42.0, 57.0], [45.0, 84.0], [44.0, 82.0], [47.0, 52.0], [46.0, 123.0], [49.0, 54.0], [48.0, 79.0], [51.0, 107.0], [50.0, 160.0], [53.0, 165.5], [55.0, 164.5], [57.0, 240.0], [56.0, 58.0], [59.0, 55.0], [58.0, 148.0], [61.0, 54.0], [60.0, 183.0], [63.0, 128.0], [62.0, 103.0], [67.0, 55.0], [66.0, 56.0], [65.0, 264.0], [64.0, 184.0], [71.0, 55.0], [70.0, 307.0], [69.0, 259.0], [68.0, 155.0], [75.0, 188.0], [74.0, 55.0], [73.0, 175.0], [72.0, 146.0], [79.0, 53.0], [78.0, 216.0], [77.0, 117.0], [76.0, 151.0], [83.0, 231.0], [82.0, 53.0], [81.0, 215.0], [80.0, 54.0], [87.0, 256.0], [86.0, 63.0], [85.0, 113.0], [84.0, 204.0], [91.0, 173.0], [90.0, 278.0], [89.0, 181.0], [88.0, 231.0], [95.0, 294.0], [94.0, 229.0], [93.0, 548.0], [92.0, 155.0], [99.0, 96.0], [98.0, 303.0], [97.0, 247.0], [96.0, 55.0], [103.0, 220.0], [102.0, 55.0], [101.0, 101.0], [100.0, 126.0], [107.0, 111.0], [106.0, 139.0], [105.0, 54.0], [104.0, 139.0], [111.0, 139.0], [110.0, 144.0], [109.0, 228.0], [108.0, 63.0], [114.0, 352.0], [113.0, 56.0], [112.0, 114.0], [119.0, 55.0], [118.0, 218.0], [117.0, 632.3333333333334], [123.0, 232.0], [122.0, 552.0], [121.0, 204.0], [120.0, 79.0], [127.0, 289.0], [126.0, 53.0], [125.0, 174.0], [124.0, 57.0], [135.0, 64.0], [134.0, 434.0], [133.0, 52.0], [132.0, 335.0], [131.0, 281.0], [130.0, 209.0], [129.0, 59.0], [128.0, 161.0], [143.0, 349.0], [142.0, 1258.0], [141.0, 990.0], [140.0, 998.0], [139.0, 1003.0], [138.0, 942.0], [137.0, 538.0], [136.0, 95.0], [151.0, 167.0], [150.0, 138.0], [149.0, 116.0], [148.0, 90.0], [147.0, 300.0], [146.0, 71.0], [145.0, 278.0], [144.0, 265.0], [159.0, 460.0], [158.0, 591.0], [157.0, 603.0], [156.0, 641.0], [155.0, 557.0], [154.0, 210.0], [153.0, 175.5], [167.0, 261.0], [166.0, 139.0], [165.0, 54.0], [164.0, 55.0], [163.0, 183.0], [162.0, 462.0], [161.0, 438.0], [160.0, 478.0], [175.0, 570.0], [174.0, 436.0], [173.0, 374.5], [171.0, 290.0], [169.0, 266.0], [168.0, 246.0], [182.0, 192.0], [181.0, 100.0], [180.0, 52.0], [179.0, 759.0], [178.0, 349.0], [177.0, 583.0], [176.0, 54.0], [191.0, 1522.0], [190.0, 1406.0], [189.0, 1048.0], [188.0, 601.5], [186.0, 198.0], [185.0, 909.0], [184.0, 341.5], [198.0, 134.0], [197.0, 80.0], [196.0, 56.0], [195.0, 643.0], [194.0, 510.0], [193.0, 304.0], [192.0, 1602.0], [200.0, 156.0], [1.0, 53.0]], "isOverall": false, "label": "opportunityTemplate ", "isController": false}, {"data": [[100.55500000000002, 255.42500000000013]], "isOverall": false, "label": "opportunityTemplate -Aggregated", "isController": false}, {"data": [[11.0, 698.0], [13.0, 678.0], [15.0, 310.0], [16.0, 152.0], [18.0, 107.0], [28.0, 1396.5], [29.0, 1242.1666666666667], [31.0, 1172.0], [35.0, 1022.0], [37.0, 581.3333333333334], [36.0, 720.75], [38.0, 523.3749999999999], [57.0, 1540.0], [56.0, 1551.0], [59.0, 509.0], [66.0, 721.0], [71.0, 666.0], [75.0, 437.0], [83.0, 121.0], [82.0, 164.0], [87.0, 2667.0], [91.0, 2174.6666666666665], [88.0, 2527.0], [93.0, 1618.8], [99.0, 114.0], [98.0, 546.0], [103.0, 120.0], [106.0, 117.5], [111.0, 3180.0], [110.0, 2852.0], [114.0, 2296.0], [113.0, 2527.0], [112.0, 3179.0], [119.0, 3102.0], [117.0, 3025.6], [123.0, 2692.0], [122.0, 2811.5], [121.0, 2692.1666666666665], [120.0, 2736.5], [135.0, 206.0], [132.0, 2393.0], [143.0, 1417.0], [142.0, 1298.0], [141.0, 1218.6666666666667], [147.0, 1536.0], [157.0, 868.0], [156.0, 1707.0], [155.0, 831.5], [167.0, 3692.5], [163.0, 1657.8], [162.0, 932.6666666666666], [175.0, 4040.0], [174.0, 3590.75], [173.0, 3421.25], [171.0, 3321.0], [169.0, 3403.0], [182.0, 1363.6666666666665], [181.0, 4223.0], [180.0, 2664.6666666666665], [179.0, 2667.714285714286], [178.0, 3826.0], [177.0, 3408.4], [191.0, 3702.0], [189.0, 3792.0], [188.0, 3803.0], [185.0, 2120.25], [198.0, 1114.0909090909092], [196.0, 3146.5], [195.0, 3241.166666666667], [194.0, 3527.0], [200.0, 1376.9333333333332]], "isOverall": false, "label": "userAvatars", "isController": false}, {"data": [[131.7399999999999, 1890.7800000000002]], "isOverall": false, "label": "userAvatars-Aggregated", "isController": false}, {"data": [[18.0, 35400.0], [19.0, 35426.0], [20.0, 35397.0], [21.0, 35465.0], [22.0, 35368.0], [36.0, 33782.0], [38.0, 33050.5806451613], [75.0, 26041.0], [79.0, 25698.0], [83.0, 25126.8], [82.0, 25454.0], [81.0, 25523.0], [99.0, 21627.0], [103.0, 21279.0], [100.0, 21697.0], [107.0, 20863.333333333332], [106.0, 21111.833333333332], [105.0, 21307.0], [135.0, 17735.0], [143.0, 17105.0], [141.0, 17701.0], [140.0, 17754.0], [139.0, 17554.0], [138.0, 17636.0], [146.0, 16806.0], [159.0, 16237.5], [158.0, 16559.0], [157.0, 16674.666666666668], [156.0, 16760.5], [155.0, 16783.0], [166.0, 14798.0], [164.0, 14866.0], [163.0, 15405.18181818182], [162.0, 16036.4], [161.0, 16222.0], [160.0, 16266.0], [175.0, 12829.5], [174.0, 13350.0], [173.0, 13935.0], [182.0, 10794.666666666666], [181.0, 11047.0], [180.0, 11211.0], [179.0, 11364.0], [178.0, 11951.0], [177.0, 12160.0], [186.0, 10070.0], [185.0, 10232.375], [184.0, 10513.0], [198.0, 8584.5], [194.0, 9681.0], [200.0, 6747.295081967214]], "isOverall": false, "label": "opportunityUserIds", "isController": false}, {"data": [[142.72500000000008, 16658.185000000005]], "isOverall": false, "label": "opportunityUserIds-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 200.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 6150.066666666667, "minX": 1.61959968E12, "maxY": 14059.0, "series": [{"data": [[1.61959968E12, 14059.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.61959968E12, 6150.066666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61959968E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 255.42500000000013, "minX": 1.61959968E12, "maxY": 16658.185000000005, "series": [{"data": [[1.61959968E12, 3836.355000000001]], "isOverall": false, "label": "opportunityProfile", "isController": false}, {"data": [[1.61959968E12, 255.42500000000013]], "isOverall": false, "label": "opportunityTemplate ", "isController": false}, {"data": [[1.61959968E12, 1890.7800000000002]], "isOverall": false, "label": "userAvatars", "isController": false}, {"data": [[1.61959968E12, 16658.185000000005]], "isOverall": false, "label": "opportunityUserIds", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61959968E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 255.35500000000027, "minX": 1.61959968E12, "maxY": 16658.06000000001, "series": [{"data": [[1.61959968E12, 3836.329999999997]], "isOverall": false, "label": "opportunityProfile", "isController": false}, {"data": [[1.61959968E12, 255.35500000000027]], "isOverall": false, "label": "opportunityTemplate ", "isController": false}, {"data": [[1.61959968E12, 1890.68]], "isOverall": false, "label": "userAvatars", "isController": false}, {"data": [[1.61959968E12, 16658.06000000001]], "isOverall": false, "label": "opportunityUserIds", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61959968E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61959968E12, "maxY": 11762.89, "series": [{"data": [[1.61959968E12, 0.0]], "isOverall": false, "label": "opportunityProfile", "isController": false}, {"data": [[1.61959968E12, 0.0]], "isOverall": false, "label": "opportunityTemplate ", "isController": false}, {"data": [[1.61959968E12, 0.0]], "isOverall": false, "label": "userAvatars", "isController": false}, {"data": [[1.61959968E12, 11762.89]], "isOverall": false, "label": "opportunityUserIds", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61959968E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 52.0, "minX": 1.61959968E12, "maxY": 35465.0, "series": [{"data": [[1.61959968E12, 35465.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.61959968E12, 16639.2]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.61959968E12, 33658.6]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.61959968E12, 25300.149999999994]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.61959968E12, 52.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.61959968E12, 1697.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61959968E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 56.0, "minX": 2.0, "maxY": 32753.0, "series": [{"data": [[2.0, 5574.5], [33.0, 3091.0], [32.0, 5867.5], [8.0, 351.5], [35.0, 9566.0], [38.0, 1355.0], [41.0, 998.0], [44.0, 7605.5], [47.0, 32753.0], [13.0, 1365.0], [53.0, 509.0], [14.0, 3742.5], [63.0, 2129.0], [16.0, 267.0], [18.0, 2689.0], [19.0, 3637.0], [5.0, 56.0], [21.0, 436.0], [23.0, 6649.0], [26.0, 3895.0], [27.0, 643.0], [29.0, 512.0], [30.0, 1258.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[47.0, 32597.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 63.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 56.0, "minX": 2.0, "maxY": 32753.0, "series": [{"data": [[2.0, 5574.5], [33.0, 3091.0], [32.0, 5867.5], [8.0, 351.5], [35.0, 9566.0], [38.0, 1355.0], [41.0, 998.0], [44.0, 7605.5], [47.0, 32753.0], [13.0, 1365.0], [53.0, 509.0], [14.0, 3742.5], [63.0, 2129.0], [16.0, 267.0], [18.0, 2689.0], [19.0, 3637.0], [5.0, 56.0], [21.0, 436.0], [23.0, 6649.0], [26.0, 3895.0], [27.0, 643.0], [29.0, 511.5], [30.0, 1258.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[47.0, 32597.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 63.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 13.333333333333334, "minX": 1.61959968E12, "maxY": 13.333333333333334, "series": [{"data": [[1.61959968E12, 13.333333333333334]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61959968E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.06666666666666667, "minX": 1.61959968E12, "maxY": 13.266666666666667, "series": [{"data": [[1.61959968E12, 13.266666666666667]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.61959968E12, 0.06666666666666667]], "isOverall": false, "label": "502", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61959968E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.06666666666666667, "minX": 1.61959968E12, "maxY": 3.3333333333333335, "series": [{"data": [[1.61959968E12, 0.06666666666666667]], "isOverall": false, "label": "opportunityUserIds-failure", "isController": false}, {"data": [[1.61959968E12, 3.3333333333333335]], "isOverall": false, "label": "opportunityProfile-success", "isController": false}, {"data": [[1.61959968E12, 3.3333333333333335]], "isOverall": false, "label": "opportunityTemplate -success", "isController": false}, {"data": [[1.61959968E12, 3.2666666666666666]], "isOverall": false, "label": "opportunityUserIds-success", "isController": false}, {"data": [[1.61959968E12, 3.3333333333333335]], "isOverall": false, "label": "userAvatars-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61959968E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.06666666666666667, "minX": 1.61959968E12, "maxY": 13.266666666666667, "series": [{"data": [[1.61959968E12, 13.266666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.61959968E12, 0.06666666666666667]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61959968E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

